var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.8","fields":["title","body"],"fieldVectors":[["title/components/AdminComponent.html",[0,0.807,1,1.238]],["body/components/AdminComponent.html",[0,1.11,1,1.872,2,2.089,3,0.217,4,0.184,5,1.593,6,2.327,7,1.593,8,1.593,9,0.184,10,2.071,11,1.721,12,2.234,13,1.593,14,2.566,15,2.148,16,3.025,17,1.721,18,4.289,19,1.721,20,3.631,21,0.251,22,0.528,23,3.353,24,4.289,25,4.289,26,4.289,27,4.717,28,2.75,29,4.289,30,1.322,31,4.717,32,3.631,33,2.457,34,0.986,35,3.631,36,4.508,37,1.949,38,3.631,39,1.573,40,0.034,41,1.449,42,0.703,43,1.573,44,2.486,45,1.562,46,3.102,47,3.631,48,2.486,49,2.486,50,2.486,51,2.486,52,2.75,53,2.486,54,2.089,55,1.322,56,1.322,57,2.034,58,2.486,59,1.449,60,2.486,61,2.468,62,2.486,63,2.486,64,0.412,65,0.217,66,2.486,67,1.593,68,1.593,69,1.178,70,0.217,71,0.123,72,0.701,73,2.486,74,3.631,75,2.486,76,2.486,77,2.486,78,2.486,79,3.631,80,2.486,81,2.625,82,0.986,83,2.486,84,2.486,85,2.486,86,2.486,87,1.797,88,2.486,89,2.486,90,2.486,91,2.486,92,2.486,93,2.486,94,3.631,95,3.631,96,3.631,97,4.289,98,3.631,99,2.486,100,3.789,101,2.486,102,2.486,103,2.486,104,3.025,105,5.018,106,2.486,107,1.797,108,3.102,109,2.071,110,2.468,111,2.327,112,2.071,113,1.43,114,2.468,115,3.025,116,3.025,117,2.071,118,2.071,119,2.486,120,3.025,121,2.486,122,1.797,123,1.797,124,2.327,125,2.486,126,1.797,127,2.071,128,1.593,129,2.071,130,3.631,131,2.486,132,3.631,133,3.025,134,2.486,135,3.631,136,2.486,137,2.071,138,2.071,139,2.486,140,2.071,141,2.486,142,1.295,143,2.486,144,1.797,145,3.631,146,2.486,147,3.631,148,3.025,149,1.43,150,1.797,151,2.071,152,2.486,153,2.486,154,2.486,155,2.486,156,2.486,157,2.486,158,2.486,159,2.071,160,1.295,161,2.327,162,2.089,163,1.593,164,1.021,165,1.593,166,1.593,167,0.905,168,1.593,169,1.077,170,1.593,171,0.986,172,1.593,173,0.905,174,1.295,175,1.593,176,1.593,177,0.066,178,0.097,179,0.066]],["title/injectables/AdminService.html",[23,1.795,180,0.454]],["body/injectables/AdminService.html",[3,0.339,4,0.288,9,0.288,21,0.392,22,0.717,23,2.836,28,2.492,30,1.795,34,1.543,37,1.964,39,2.135,40,0.033,41,1.514,42,0.703,43,2.135,45,1.416,55,1.416,56,1.416,59,1.662,61,2.237,64,0.472,65,0.339,70,0.43,71,0.193,72,1.756,81,3.914,177,0.103,178,0.131,179,0.103,180,0.717,181,2.025,182,2.811,183,1.662,184,1.804,185,4.929,186,1.514,187,1.692,188,4.929,189,4.106,190,4.509,191,3.887,192,3.887,193,1.956,194,3.887,195,3.887,196,3.239,197,1.096,198,3.239,199,2.492,200,1.096,201,0.841,202,1.194,203,0.696,204,3.239,205,3.239,206,3.239,207,0.288,208,3.239,209,3.239]],["title/injectables/AdminpanelDataService.html",[180,0.454,210,1.238]],["body/injectables/AdminpanelDataService.html",[3,0.225,4,0.191,9,0.191,21,0.26,22,0.542,30,1.356,34,1.021,37,1.984,39,2.511,40,0.034,41,1.78,42,0.771,43,2.511,45,2.078,55,0.937,56,0.937,59,0.79,64,0.325,65,0.225,70,0.444,71,0.127,72,1.496,164,0.557,177,0.068,178,0.099,179,0.068,180,0.542,181,1.34,183,1.344,184,1.563,186,1.144,187,1.496,193,1.478,197,0.726,200,0.726,201,0.557,202,0.79,203,0.979,207,0.356,210,1.478,211,3.119,212,0.861,213,2.693,214,3.724,215,3.724,216,3.724,217,3.724,218,3.724,219,3.724,220,3.724,221,3.724,222,2.693,223,1.356,224,1.64,225,2.144,226,2.143,227,1.932,228,2.144,229,2.849,230,2.573,231,4.05,232,2.573,233,3.995,234,2.143,235,2.573,236,2.573,237,2.573,238,2.573,239,2.144,240,2.573,241,2.573,242,2.143,243,2.573,244,2.573,245,2.573,246,1.861,247,0.937,248,0.859,249,0.937,250,0.937,251,0.937,252,0.61,253,0.937,254,0.937,255,0.937,256,0.937,257,0.937,258,0.937,259,2.143,260,1.463,261,2.279,262,2.518,263,2.518,264,1.593,265,1.481,266,0.937,267,1.481,268,1.481,269,2.518,270,1.481,271,1.481,272,1.481,273,1.481,274,1.021,275,1.352,276,2.074,277,2.074,278,1.895,279,1.021,280,1.115,281,1.021,282,1.021,283,1.481]],["title/components/AppComponent.html",[0,0.807,169,1.351]],["body/components/AppComponent.html",[0,1.406,1,1.558,2,2.854,3,0.343,4,0.291,5,2.517,6,2.517,7,2.517,8,2.517,9,0.291,13,2.517,14,2.896,15,2.424,17,2.351,19,2.351,21,0.396,22,0.722,37,1.313,40,0.033,41,1.524,42,0.51,55,1.43,56,1.43,59,1.206,64,0.343,65,0.343,70,0.343,71,0.194,124,2.517,126,2.839,160,2.045,161,3.179,162,2.854,163,2.517,164,1.236,165,2.517,166,2.517,167,1.43,168,2.517,169,2.474,170,2.517,171,1.558,172,2.517,173,1.43,174,2.832,175,2.517,176,2.517,177,0.104,178,0.132,179,0.104,201,1.074,252,1.175,284,3.271,285,5.437,286,4.96,287,3.932,288,4.96,289,4.96,290,3.926,291,4.132,292,4.96,293,3.926,294,3.926]],["title/modules/AppModule.html",[295,1.999,296,1.999]],["body/modules/AppModule.html",[1,2.1,3,0.223,4,0.19,9,0.19,15,1.015,40,0.033,64,0.572,65,0.223,70,0.223,71,0.127,160,1.332,167,1.927,169,2.567,171,2.1,173,1.927,177,0.068,178,0.099,179,0.068,187,1.045,197,0.721,295,1.639,296,4.004,297,1.471,298,1.639,299,3.632,300,3.457,301,3.152,302,1.849,303,2.13,304,2.13,305,2.13,306,2.13,307,2.13,308,3.045,309,2.198,310,2.198,311,3.087,312,2.13,313,1.849,314,2.557,315,3.087,316,3.706,317,3.087,318,1.639,319,3.087,320,2.557,321,1.849,322,2.13,323,4.359,324,2.557,325,4.359,326,1.332,327,3.706,328,2.557,329,2.557,330,2.557,331,2.557,332,2.13,333,2.13,334,2.13,335,3.706,336,2.557,337,3.706,338,2.13,339,3.706,340,2.557,341,3.706,342,2.557,343,2.557,344,3.706,345,2.557,346,3.706,347,2.557,348,3.706,349,2.557,350,3.706,351,2.557,352,3.706,353,2.557,354,3.706,355,2.557,356,3.706,357,2.557,358,3.706,359,2.557,360,2.557,361,3.706,362,2.68,363,3.706,364,2.376,365,3.706,366,2.557,367,3.706,368,2.557,369,3.706,370,2.557,371,3.706,372,1.849,373,3.706,374,2.557,375,3.706,376,2.557,377,3.706,378,2.557,379,2.557,380,3.706,381,2.557,382,3.706,383,2.557,384,3.706,385,2.557,386,3.706,387,2.557,388,3.706,389,3.706,390,2.557,391,3.706,392,2.557,393,3.706,394,3.706,395,3.706,396,3.706,397,2.557,398,3.706,399,2.13,400,3.706,401,2.557,402,3.706,403,2.557,404,3.706,405,2.557,406,3.706,407,2.13,408,3.706,409,2.557,410,3.706,411,2.557,412,3.706,413,2.557,414,3.706,415,2.557,416,3.706,417,2.557,418,3.706,419,2.557,420,3.706,421,2.557,422,2.13,423,1.93,424,3.706,425,1.471,426,2.13,427,2.133,428,1.849,429,2.13,430,3.706,431,2.794,432,1.639,433,3.706,434,1.639,435,3.706,436,2.13,437,2.557,438,2.557]],["title/classes/AppPage.html",[71,0.154,439,2.256]],["body/classes/AppPage.html",[3,0.395,4,0.336,9,0.336,21,0.456,30,1.97,37,1.809,40,0.033,45,1.97,64,0.395,70,0.395,71,0.224,128,2.899,162,2.603,177,0.12,178,0.144,179,0.12,201,0.979,203,0.969,318,2.899,439,3.913,440,3.271,441,3.768,442,6,443,6,444,4.523,445,4.523,446,3.768,447,4.523,448,5.411,449,4.523,450,4.523]],["title/modules/AppRoutingModule.html",[295,1.999,308,1.795]],["body/modules/AppRoutingModule.html",[0,1.5,1,2.022,3,0.358,4,0.304,9,0.304,16,3.414,40,0.034,64,0.538,65,0.358,67,2.627,70,0.358,71,0.203,142,2.654,167,1.855,171,2.022,173,1.855,174,2.135,177,0.109,178,0.135,179,0.109,297,2.358,301,2.964,302,2.964,308,2.932,315,3.414,319,4.245,332,3.414,333,3.414,334,3.414,426,3.414,427,2.358,428,2.964,429,3.414,451,4.098,452,4.098,453,3.554,454,5.095,455,4.245,456,5.545,457,2.627,458,5.801,459,2.964,460,4.098]],["title/guards/AuthGuardService.html",[427,1.795,461,2.256]],["body/guards/AuthGuardService.html",[3,0.364,4,0.31,9,0.31,11,1.98,21,0.421,22,0.608,30,1.877,34,1.658,36,5.21,37,1.724,39,1.809,40,0.033,41,1.283,42,0.543,43,1.809,45,1.521,54,2.967,57,1.98,64,0.488,65,0.364,67,2.677,70,0.364,71,0.207,82,1.658,177,0.111,178,0.137,179,0.111,180,0.608,201,0.904,203,0.923,427,2.967,428,4.044,455,5.09,462,4.177,463,4.659,464,3.48,465,3.585,466,4.177,467,3.743,468,4.177,469,4.177,470,4.177,471,4.177,472,4.177,473,4.177,474,4.177]],["title/injectables/AuthService.html",[180,0.454,467,1.999]],["body/injectables/AuthService.html",[3,0.361,4,0.307,9,0.307,21,0.417,22,0.745,28,3.283,30,1.865,34,2.209,37,1.861,40,0.034,45,1.505,54,2.947,55,1.505,56,1.505,57,1.959,64,0.447,65,0.361,70,0.361,71,0.205,82,1.64,177,0.11,178,0.136,179,0.11,180,0.745,181,2.153,200,1.166,201,0.895,203,0.917,248,0.917,457,2.649,465,3.906,467,3.283,475,3.443,476,5.566,477,5.818,478,5.122,479,4.133,480,5.566,481,3.443,482,3.443,483,4.133,484,4.133,485,3.443,486,4.133,487,4.133,488,4.133,489,4.133,490,4.133,491,4.133,492,4.133]],["title/interfaces/AuthToken.html",[61,1.795,207,0.231]],["body/interfaces/AuthToken.html",[3,0.37,4,0.315,9,0.315,21,0.428,22,0.757,23,2.44,28,2.718,40,0.033,42,0.676,59,1.883,61,2.994,64,0.491,65,0.37,70,0.454,71,0.21,72,1.588,81,3.066,177,0.113,178,0.138,179,0.113,180,0.757,182,3.066,183,1.302,184,1.598,186,1.302,187,1.588,189,3.532,190,3.532,193,1.683,196,3.532,197,1.196,198,3.532,199,2.718,200,1.196,201,0.918,202,1.302,203,0.759,204,3.532,205,3.532,206,3.532,207,0.315,208,4.89,209,4.89,493,1.418]],["title/interfaces/BatteryData.html",[207,0.231,279,1.238]],["body/interfaces/BatteryData.html",[3,0.286,4,0.243,9,0.243,21,0.331,22,0.642,40,0.034,42,0.723,64,0.385,65,0.286,70,0.485,71,0.162,72,1.243,164,0.709,177,0.087,178,0.117,179,0.087,180,0.642,183,1.007,184,1.354,186,1.007,187,1.405,193,1.301,197,0.924,200,0.924,201,0.709,202,1.007,203,1.048,207,0.395,210,1.301,211,1.707,212,1.096,223,1.194,224,1.559,226,1.886,227,1.977,229,2.595,234,1.886,242,1.886,247,1.194,248,0.954,249,1.194,250,1.194,251,1.194,252,0.776,253,1.194,254,1.194,255,1.194,256,1.194,257,1.194,258,1.194,259,2.537,260,1.666,261,2.595,262,2.867,263,2.867,264,1.814,265,1.886,266,1.194,267,1.886,268,1.886,269,2.867,270,1.886,271,1.886,272,1.886,273,1.886,274,1.301,275,1.65,276,2.715,277,2.715,278,2.481,279,1.75,280,2.308,281,1.301,282,1.301,283,1.886,493,1.096]],["title/components/GraphsComponent.html",[0,0.807,171,1.238]],["body/components/GraphsComponent.html",[0,0.691,1,0.481,2,1.182,3,0.106,4,0.09,5,0.777,6,0.777,7,0.777,8,0.777,9,0.09,11,0.974,12,1.392,13,0.777,14,1.933,15,1.618,17,0.974,19,0.974,21,0.27,22,0.299,30,0.748,33,1.639,34,0.481,37,1.992,39,2.003,40,0.034,41,1.499,42,0.735,43,2.003,45,1.88,46,3.673,52,1.713,55,1.684,56,1.684,57,1.492,59,0.967,64,0.356,65,0.106,68,1.713,69,0.574,70,0.106,71,0.06,82,0.815,100,1.485,104,1.711,107,0.876,108,3.102,109,1.009,110,1.811,111,2.017,112,3.397,113,1.182,114,1.538,115,1.009,116,1.009,117,1.009,118,1.009,120,1.009,122,1.485,123,0.876,124,1.316,126,1.485,127,1.009,128,0.777,129,3.188,133,1.009,138,1.009,144,0.876,148,1.009,149,0.697,150,2.547,160,0.631,161,1.316,162,1.182,163,0.777,164,0.883,165,0.777,166,0.777,167,0.441,168,0.777,169,0.525,170,0.777,171,1.249,172,0.777,173,0.441,174,0.631,175,0.777,176,0.777,203,0.217,227,1.499,248,0.828,252,1.181,266,1.628,275,0.754,291,3.188,310,2.062,326,0.631,364,0.777,399,1.009,407,1.009,422,1.009,423,0.631,494,1.009,495,2.673,496,2.054,497,2.673,498,2.054,499,2.673,500,1.933,501,2.673,502,2.673,503,2.673,504,1.933,505,1.933,506,2.673,507,2.673,508,2.673,509,3.522,510,1.538,511,2.054,512,1.993,513,2.673,514,2.673,515,2.054,516,2.234,517,2.054,518,2.054,519,2.276,520,3.147,521,3.147,522,2.673,523,1.933,524,2.054,525,2.054,526,2.054,527,2.054,528,2.054,529,2.054,530,2.054,531,2.054,532,2.054,533,1.485,534,2.347,535,1.212,536,3.256,537,1.485,538,1.212,539,1.212,540,2.054,541,2.054,542,2.054,543,2.054,544,3.826,545,3.529,546,2.054,547,3.147,548,2.054,549,1.212,550,2.054,551,2.017,552,2.054,553,2.054,554,2.054,555,2.054,556,2.054,557,1.212,558,1.212,559,1.212,560,1.212,561,2.054,562,3.147,563,1.212,564,3.147,565,3.826,566,3.826,567,2.054,568,3.147,569,2.054,570,3.147,571,3.147,572,2.054,573,3.147,574,1.212,575,2.054,576,2.054,577,3.147,578,2.054,579,2.054,580,2.054,581,1.212,582,2.054,583,2.054,584,2.054,585,2.054,586,1.212,587,2.054,588,2.054,589,2.054,590,2.054,591,1.212,592,2.054,593,2.054,594,1.212,595,2.054,596,1.212,597,0.876,598,2.227,599,1.485,600,1.485,601,1.485,602,1.485,603,1.212,604,2.276,605,3.147,606,1.933,607,2.276,608,2.276,609,2.547,610,2.547,611,2.276,612,2.276,613,2.017,614,2.054,615,2.673,616,2.276,617,3.147,618,3.147,619,3.147,620,4.289,621,3.147,622,2.276,623,3.147,624,1.212,625,3.522,626,2.054,627,1.316,628,3.147,629,2.673,630,3.147,631,3.147,632,1.212,633,1.212,634,1.212,635,1.212,636,1.212,637,1.212,638,1.212,639,1.212,640,1.212,641,1.933,642,1.212,643,1.212,644,3.147,645,2.054,646,2.054,647,2.054,648,1.212,649,1.212,650,1.212,651,1.212,652,1.212,653,1.212,654,0.777,655,1.212,656,1.212,657,1.212,658,1.212,659,0.876,660,0.876,661,2.054,662,1.212,663,1.212,664,2.673,665,1.212,666,1.212,667,1.212,668,1.212,669,2.673,670,1.212,671,1.212,672,1.212,673,1.212,674,1.212,675,1.212,676,1.212,677,1.212,678,1.212,679,2.054,680,2.054,681,1.212,682,1.212,683,1.212,684,1.212,685,1.212,686,1.212,687,1.212,688,1.212,689,2.054,690,1.212,691,1.212,692,1.212,693,1.212,694,1.212,695,1.212,696,3.147,697,1.212,698,1.212,699,1.711,700,1.212,701,2.054,702,2.054,703,1.212,704,2.054,705,1.212,706,1.212,707,1.212,708,1.212,709,1.212,710,1.212,711,1.212,712,0.697,713,0.697,714,0.876,715,0.697,716,0.876,717,0.876,718,0.876,719,0.876,720,1.485,721,0.876,722,0.876,723,0.876,724,0.876,725,1.485,726,0.876,727,1.212,728,0.876,729,1.212,730,2.054,731,2.054,732,3.147,733,2.054,734,2.054,735,2.054,736,2.054,737,2.054,738,2.054,739,2.054,740,2.054,741,2.054,742,2.054,743,2.054,744,2.054,745,2.054,746,1.212,747,1.212,748,2.227,749,2.673,750,0.876,751,1.212,752,1.212,753,1.212,754,1.212,755,1.212,756,1.212,757,1.212,758,2.227,759,1.212,760,0.777,761,1.009,762,1.009,763,1.009,764,1.212,765,1.212,766,1.212,767,1.212,768,1.212,769,1.212,770,1.212,771,1.212,772,1.212,773,1.212,774,1.212,775,1.212,776,1.212,777,1.212,778,1.212,779,1.212,780,1.212,781,1.212,782,2.227]],["title/interfaces/ImageData.html",[207,0.231,783,1.625]],["body/interfaces/ImageData.html",[3,0.333,4,0.283,9,0.283,21,0.385,22,0.709,40,0.034,42,0.698,59,1.649,64,0.425,65,0.333,70,0.425,71,0.189,72,1.375,164,0.827,177,0.102,178,0.13,179,0.102,180,0.709,183,1.173,184,1.497,186,1.173,187,1.514,193,1.516,197,1.077,200,1.077,201,0.827,202,1.173,203,0.961,207,0.283,212,1.277,223,1.391,224,1.605,227,1.649,247,1.391,248,0.684,249,1.391,250,1.391,251,1.391,252,1.154,253,1.391,254,1.391,255,1.391,256,1.391,257,1.391,258,1.391,264,1.775,275,1.595,309,1.655,425,3.254,493,1.277,783,2.539,784,2.762,785,4.711,786,4.472,787,3.182,788,3.182,789,3.182,790,3.182,791,3.182,792,3.182,793,3.182,794,3.182,795,3.182,796,3.182,797,3.182]],["title/injectables/ImageService.html",[180,0.454,309,1.351]],["body/injectables/ImageService.html",[3,0.287,4,0.244,9,0.244,21,0.331,22,0.642,30,1.607,34,1.303,37,2.016,39,2.16,40,0.034,41,1.532,42,0.723,43,2.16,45,2.026,55,1.607,56,1.607,59,1.356,64,0.385,65,0.287,70,0.385,71,0.163,72,1.616,164,0.711,177,0.087,178,0.117,179,0.087,180,0.642,181,1.71,183,1.532,184,1.709,186,1.356,187,1.616,193,1.752,197,0.926,200,0.926,201,0.711,202,1.008,203,0.893,207,0.244,212,1.098,213,3.192,222,3.192,223,1.607,224,1.62,227,1.008,246,2.374,247,1.196,248,0.79,249,1.196,250,1.196,251,1.196,252,1.046,253,1.196,254,1.196,255,1.196,256,1.196,257,1.196,258,1.196,260,1.476,264,1.607,275,0.926,309,1.912,425,1.889,783,1.71,784,4.406,785,2.735,786,4.154,787,2.735,788,4.442,789,2.735,790,4.442,791,2.735,792,2.735,793,2.735,794,2.735,795,2.735,796,2.735,797,2.735,798,4.414,799,4.986,800,3.283,801,3.283,802,3.283,803,3.283,804,3.283,805,3.283,806,3.283]],["title/classes/NgbdDropdownBasic.html",[71,0.154,807,1.999]],["body/classes/NgbdDropdownBasic.html",[0,0.811,3,0.274,4,0.233,9,0.233,11,1.487,12,2.229,14,1.487,15,1.245,17,1.487,19,1.487,33,1.634,40,0.034,64,0.521,65,0.274,69,1.487,70,0.373,71,0.212,82,1.245,173,1.142,174,1.634,177,0.083,178,0.114,179,0.083,199,2.01,203,0.937,224,0.811,248,0.981,260,1.049,266,1.142,309,2.267,326,1.634,372,2.268,423,1.634,425,1.805,431,2.743,432,2.01,434,2.01,440,2.268,465,2.01,510,1.805,523,2.268,534,2.462,712,1.805,713,1.805,715,1.805,783,2.853,807,2.743,808,2.268,809,2.613,810,2.613,811,4.058,812,2.613,813,2.613,814,2.613,815,3.094,816,4.359,817,2.613,818,4.359,819,2.268,820,2.613,821,2.613,822,2.613,823,2.613,824,2.613,825,2.613,826,2.613,827,2.613,828,2.613,829,2.613,830,2.613,831,2.613,832,2.613,833,2.613,834,2.613,835,2.613,836,3.565,837,2.613,838,2.613,839,2.613,840,2.613,841,4.359,842,4.359,843,2.613,844,2.613,845,2.613,846,4.359,847,4.359,848,4.359,849,4.359,850,4.359,851,2.613,852,2.613,853,2.613,854,2.613,855,2.613,856,2.613,857,4.359,858,2.613,859,2.613,860,2.613,861,2.613,862,2.613,863,2.613,864,2.613,865,2.613,866,2.613,867,2.613,868,2.613,869,2.613,870,2.613,871,2.613,872,2.613,873,2.613,874,2.613,875,2.613,876,2.613,877,2.613,878,2.613,879,2.613,880,2.613,881,2.613,882,2.613,883,2.613]],["title/interfaces/RaspberryData.html",[207,0.231,281,1.238]],["body/interfaces/RaspberryData.html",[3,0.289,4,0.246,9,0.246,21,0.335,22,0.647,40,0.034,42,0.696,64,0.388,65,0.289,70,0.487,71,0.164,72,1.253,164,0.718,177,0.088,178,0.118,179,0.088,180,0.647,183,1.019,184,1.365,186,1.019,187,1.413,193,1.316,197,0.935,200,0.935,201,0.718,202,1.019,203,1.051,207,0.397,210,1.316,211,1.727,212,1.109,223,1.208,224,1.563,226,1.908,227,1.971,229,2.61,234,1.908,242,1.908,247,1.208,248,0.959,249,1.208,250,1.208,251,1.208,252,0.786,253,1.208,254,1.208,255,1.208,256,1.208,257,1.208,258,1.208,259,2.557,260,1.676,261,2.61,262,2.884,263,2.884,264,1.825,265,1.908,266,1.208,267,1.908,268,1.908,269,2.884,270,1.908,271,1.908,272,1.908,273,1.908,274,1.316,275,1.655,276,2.724,277,2.724,278,2.489,279,1.316,280,1.437,281,1.764,282,1.316,283,1.908,493,1.109]],["title/interfaces/SolarData.html",[207,0.231,274,1.238]],["body/interfaces/SolarData.html",[3,0.289,4,0.246,9,0.246,21,0.335,22,0.647,40,0.034,42,0.696,64,0.388,65,0.289,70,0.487,71,0.164,72,1.253,164,0.718,177,0.088,178,0.118,179,0.088,180,0.647,183,1.019,184,1.365,186,1.019,187,1.413,193,1.316,197,0.935,200,0.935,201,0.718,202,1.019,203,1.051,207,0.397,210,1.316,211,1.727,212,1.109,223,1.208,224,1.563,226,1.908,227,1.971,229,2.61,234,1.908,242,1.908,247,1.208,248,0.959,249,1.208,250,1.208,251,1.208,252,0.786,253,1.208,254,1.208,255,1.208,256,1.208,257,1.208,258,1.208,259,2.557,260,1.676,261,2.61,262,2.884,263,2.884,264,1.825,265,1.908,266,1.208,267,1.908,268,1.908,269,2.884,270,1.908,271,1.908,272,1.908,273,1.908,274,1.764,275,1.655,276,2.724,277,2.724,278,2.489,279,1.316,280,1.437,281,1.316,282,1.316,283,1.908,493,1.109]],["title/interfaces/TemperatureData.html",[207,0.231,512,1.625]],["body/interfaces/TemperatureData.html",[3,0.33,4,0.281,9,0.281,21,0.382,22,0.705,40,0.034,42,0.694,64,0.423,65,0.33,70,0.466,71,0.187,72,1.366,164,0.819,177,0.101,178,0.129,179,0.101,180,0.705,183,1.162,184,1.488,186,1.162,187,1.507,197,1.067,200,1.067,201,0.819,202,1.162,203,1.009,207,0.359,212,1.265,223,1.377,224,1.541,227,1.918,247,1.377,248,0.867,249,1.377,250,1.377,251,1.377,252,0.896,253,1.377,254,1.377,255,1.377,256,1.377,257,1.377,258,1.377,260,1.265,264,1.377,275,1.643,278,2.523,280,2.441,310,1.639,493,1.265,512,2.523,516,1.97,884,2.425,885,2.735,886,2.735,887,2.735,888,2.735,889,2.735,890,2.735,891,2.735,892,2.735,893,2.735,894,2.735,895,2.735,896,2.735]],["title/interfaces/VolumeData.html",[207,0.231,282,1.238]],["body/interfaces/VolumeData.html",[3,0.296,4,0.252,9,0.252,21,0.343,22,0.657,40,0.034,42,0.587,64,0.394,65,0.296,70,0.491,71,0.168,72,1.273,164,0.735,177,0.09,178,0.12,179,0.09,180,0.657,183,1.043,184,1.387,186,1.043,187,1.43,193,1.348,197,0.958,200,0.958,201,0.735,202,1.043,203,1.057,207,0.401,210,1.348,211,1.769,212,1.136,223,1.237,224,1.527,226,1.955,227,1.966,229,2.642,234,1.955,242,1.955,247,1.237,248,0.968,249,1.237,250,1.237,251,1.237,252,0.805,253,1.237,254,1.237,255,1.237,256,1.237,257,1.237,258,1.237,259,2.598,260,1.696,261,2.642,262,2.919,263,2.919,264,1.847,265,1.955,266,1.237,267,1.955,268,1.955,269,2.919,270,1.955,271,1.955,272,1.955,273,1.955,274,1.348,275,1.665,276,2.405,277,2.405,278,2.197,279,1.348,280,1.471,281,1.348,282,1.792,283,3.11,493,1.136]],["title/injectables/WeatherDataService.html",[180,0.454,310,1.351]],["body/injectables/WeatherDataService.html",[3,0.271,4,0.23,9,0.23,21,0.313,22,0.618,30,1.546,34,1.231,37,1.992,39,2.44,40,0.034,41,1.73,42,0.763,43,2.44,45,2.051,55,1.129,56,1.129,59,0.953,64,0.371,65,0.271,70,0.423,71,0.154,72,1.589,164,0.671,177,0.082,178,0.113,179,0.082,180,0.618,181,1.616,183,1.488,184,1.676,186,1.304,187,1.589,197,0.875,200,0.875,201,0.671,202,0.953,203,0.933,207,0.315,212,1.037,213,3.071,222,3.071,223,1.546,224,1.615,225,2.584,227,1.851,228,2.584,229,2.212,231,3.766,233,3.538,239,2.584,246,2.243,247,1.129,248,0.76,249,1.129,250,1.129,251,1.129,252,0.735,253,1.129,254,1.129,255,1.129,256,1.129,257,1.129,258,1.129,260,1.037,264,1.129,275,1.198,278,1.84,280,1.344,310,1.84,512,1.616,516,1.616,884,3.863,885,3.071,886,2.243,887,3.071,888,2.243,889,2.243,890,2.243,891,2.243,892,2.243,893,3.766,894,2.243,895,2.243,896,2.243,897,4.247,898,4.247,899,4.247,900,4.247,901,3.102,902,3.102,903,3.102,904,3.102,905,3.102,906,3.102]],["title/components/WebcamComponent.html",[0,0.807,173,1.136]],["body/components/WebcamComponent.html",[0,0.726,1,0.704,2,1.616,3,0.155,4,0.132,5,1.137,6,1.137,7,1.137,8,1.137,9,0.132,11,1.331,12,1.815,13,1.137,14,2.281,15,1.909,17,1.331,19,1.331,21,0.283,22,0.409,30,1.023,33,2.064,34,0.704,37,2.033,39,1.51,40,0.034,41,1.326,42,0.763,43,1.51,45,1.817,46,3.608,55,1.672,56,1.672,59,0.863,64,0.448,65,0.155,69,0.841,70,0.245,71,0.139,82,1.114,100,1.283,107,1.283,108,3.123,113,1.616,114,1.616,122,3.123,123,1.283,124,1.137,128,1.8,137,1.478,140,2.339,144,2.031,149,1.021,150,2.52,159,2.339,160,0.924,161,1.8,162,1.616,163,1.137,164,0.858,165,1.137,166,1.137,167,0.646,168,1.137,169,0.768,170,1.137,171,0.704,172,1.137,173,1.443,174,1.815,175,1.137,176,1.137,199,1.137,203,0.71,224,0.726,227,0.863,248,0.822,260,1.444,261,2.064,266,0.646,309,2.279,326,0.924,372,1.283,423,0.924,425,1.021,431,1.8,432,1.137,434,1.137,465,3.441,510,2.006,523,2.866,534,2.281,536,1.137,551,1.8,699,1.478,712,1.021,713,1.021,715,1.021,748,2.903,758,1.478,760,2.234,761,2.339,762,2.339,763,2.339,782,3.302,783,2.676,807,1.137,808,1.283,809,1.478,810,1.478,811,3.598,812,1.478,813,1.478,814,1.478,815,4.214,816,4.156,817,1.478,818,4.472,819,1.283,820,2.339,821,2.903,822,2.339,823,2.339,824,1.478,825,2.903,826,2.903,827,2.903,828,2.903,829,2.903,830,2.903,831,2.903,832,2.903,833,2.903,834,2.339,835,1.478,836,2.339,837,1.478,838,1.478,839,1.478,840,1.478,841,3.302,842,3.302,843,1.478,844,1.478,845,1.478,846,3.302,847,3.302,848,3.302,849,3.302,850,3.302,851,1.478,852,1.478,853,1.478,854,1.478,855,3.302,856,1.478,857,3.302,858,3.302,859,1.478,860,1.478,861,1.478,862,1.478,863,1.478,864,3.302,865,1.478,866,1.478,867,1.478,868,1.478,869,1.478,870,1.478,871,1.478,872,2.903,873,3.302,874,1.478,875,1.478,876,1.478,877,1.478,878,1.478,879,2.339,880,1.478,881,1.478,882,1.478,883,1.478,907,3.963,908,2.808,909,2.808,910,2.808,911,2.808,912,1.774,913,1.774,914,1.774,915,1.774,916,1.774,917,1.774,918,1.774,919,1.774,920,1.774,921,4.318,922,1.774,923,1.774,924,1.774,925,1.774,926,1.774,927,1.774,928,1.774,929,1.774,930,1.774,931,1.774,932,1.774,933,2.808,934,3.963,935,3.963,936,3.963,937,3.963,938,3.963,939,4.593,940,4.593,941,3.963,942,3.963,943,3.963,944,2.808,945,3.963,946,2.808,947,2.808,948,2.808,949,2.808,950,2.808,951,2.808,952,1.774,953,1.774,954,1.774,955,1.774,956,1.774,957,1.774,958,1.774,959,3.485,960,2.808,961,1.774,962,1.774,963,1.774,964,1.774,965,2.808,966,1.774,967,1.774,968,1.774,969,1.774,970,1.774,971,1.774]],["title/interfaces/WindData.html",[207,0.231,516,1.625]],["body/interfaces/WindData.html",[3,0.326,4,0.277,9,0.277,21,0.377,22,0.699,40,0.034,42,0.729,64,0.419,65,0.326,70,0.463,71,0.185,72,1.354,164,0.808,177,0.099,178,0.128,179,0.099,180,0.699,183,1.146,184,1.475,186,1.146,187,1.497,197,1.053,200,1.053,201,0.808,202,1.146,203,1.004,207,0.356,212,1.248,223,1.359,224,1.536,227,1.938,247,1.359,248,0.86,249,1.359,250,1.359,251,1.359,252,0.884,253,1.359,254,1.359,255,1.359,256,1.359,257,1.359,258,1.359,260,1.248,264,1.359,275,1.636,278,2.513,280,1.617,310,1.617,493,1.248,512,1.944,516,2.501,884,2.392,885,2.699,886,2.699,887,2.699,888,2.699,889,2.699,890,2.699,891,2.699,892,2.699,893,2.699,894,2.699,895,4.054,896,4.054]],["title/coverage.html",[972,3.552]],["body/coverage.html",[0,1.445,1,1.318,9,0.246,10,2.768,23,1.912,40,0.034,42,0.432,61,1.912,71,0.22,110,3.746,142,1.73,167,1.21,169,1.439,171,1.318,173,1.21,177,0.088,178,0.118,179,0.088,180,0.813,182,3.217,207,0.453,210,1.318,211,2.909,212,2.042,248,0.595,274,1.318,279,1.318,281,1.318,282,1.318,284,2.768,309,1.439,310,1.439,427,1.912,439,2.402,441,2.768,461,2.402,463,2.768,464,2.768,467,2.129,475,2.768,494,2.768,512,1.73,516,1.73,783,1.73,784,3.217,807,2.129,808,3.217,884,3.215,972,2.768,973,3.322,974,3.322,975,3.322,976,5.358,977,4.449,978,3.322,979,3.322,980,5.358,981,3.764,982,3.322,983,1.912,984,5.358,985,1.912,986,5.967,987,6.043,988,2.129,989,2.129,990,2.129,991,3.322,992,2.768,993,3.322,994,4.449,995,3.322,996,2.768,997,3.706,998,2.768,999,3.706,1000,2.768,1001,2.768,1002,3.322,1003,3.322]],["title/dependencies.html",[298,2.406,1004,2.602]],["body/dependencies.html",[40,0.034,65,0.362,67,2.66,69,1.968,177,0.11,178,0.136,179,0.11,298,2.66,300,3.001,317,4.278,318,3.292,321,3.713,322,3.458,338,3.458,431,3.735,432,2.66,434,2.66,436,3.458,481,3.458,482,3.458,654,2.66,815,3.001,819,3.001,1005,4.15,1006,4.15,1007,4.15,1008,6.247,1009,4.15,1010,5.135,1011,4.15,1012,4.15,1013,4.15,1014,4.15,1015,4.15,1016,5.576,1017,5.576,1018,4.15,1019,4.15,1020,4.15,1021,4.15,1022,4.15,1023,4.15,1024,4.15,1025,4.15,1026,4.15,1027,4.15,1028,4.15,1029,4.15,1030,4.15,1031,4.15]],["title/index.html",[21,0.262,1032,2.602,1033,2.602]],["body/index.html",[0,1.436,4,0.305,15,1.63,40,0.026,41,1.262,151,3.421,177,0.109,178,0.136,179,0.109,231,4.198,248,0.735,313,2.97,321,4.013,446,3.421,485,3.421,1034,4.107,1035,4.107,1036,5.102,1037,4.107,1038,5.55,1039,4.107,1040,4.107,1041,4.107,1042,5.102,1043,5.969,1044,6.169,1045,4.107,1046,4.107,1047,4.107,1048,4.107,1049,4.107,1050,4.107,1051,4.107,1052,4.107,1053,4.107,1054,5.55,1055,5.55,1056,4.107,1057,5.969,1058,4.107,1059,4.107,1060,4.107,1061,4.107,1062,4.107,1063,4.107,1064,3.421,1065,5.102,1066,5.102,1067,5.805,1068,4.107,1069,5.102,1070,5.102,1071,4.107,1072,4.107,1073,4.107,1074,5.55,1075,4.107,1076,4.107,1077,4.107]],["title/modules.html",[297,2.453]],["body/modules.html",[40,0.029,177,0.132,178,0.152,179,0.132,296,3.185,297,2.86,308,2.86,318,3.185,1078,4.969,1079,4.969,1080,5.718,1081,4.969,1082,4.969]],["title/overview.html",[1083,3.552]],["body/overview.html",[1,2.215,2,2.393,40,0.033,160,2.166,167,2.032,169,2.68,171,2.215,173,2.032,177,0.111,178,0.137,179,0.111,181,2.166,252,0.985,295,2.666,296,4.18,297,2.393,298,2.666,299,3.465,300,3.008,301,3.008,302,3.008,303,3.465,304,3.465,305,3.465,306,3.465,307,3.465,308,3.212,309,2.418,310,2.418,311,4.284,312,3.465,313,3.008,440,3.008,453,2.666,461,3.008,493,1.391,992,4.284,1083,3.465,1084,3.718,1085,4.159,1086,3.008]],["title/interfaces/raspyActions.html",[207,0.231,983,1.795]],["body/interfaces/raspyActions.html",[0,0.676,3,0.142,4,0.12,9,0.12,11,0.769,12,1.361,14,0.769,15,0.644,17,0.769,19,0.769,21,0.164,22,0.38,33,0.845,40,0.034,41,1.268,42,0.489,52,1.675,54,0.933,57,2.569,59,1.745,64,0.385,65,0.142,68,1.675,69,0.769,70,0.287,71,0.08,82,1.917,87,1.173,110,2.167,111,1.039,113,1.504,114,2.376,142,0.845,149,1.504,164,0.894,167,0.591,177,0.043,178,0.069,179,0.043,207,0.194,210,1.639,224,1.201,248,0.937,252,1.144,266,1.973,274,1.303,275,1.062,276,1.239,277,1.785,279,1.303,281,1.303,282,1.303,287,1.173,326,0.845,362,1.173,364,1.039,423,0.845,457,2.105,459,1.89,493,0.542,500,1.173,504,1.173,505,1.173,510,0.933,519,1.173,533,1.173,534,1.889,536,1.039,537,1.173,545,1.173,551,1.039,597,1.173,599,1.173,600,1.173,601,2.723,602,2.723,604,1.173,606,1.173,607,2.723,608,2.723,609,2.723,610,2.723,611,1.173,612,3.357,613,1.039,616,3.357,622,3.357,627,1.039,641,2.374,654,1.039,659,1.173,660,1.173,712,0.933,713,0.933,714,1.173,715,0.933,716,1.173,717,1.173,718,1.173,719,1.173,720,1.89,721,1.173,722,1.173,723,1.173,724,1.173,725,1.89,726,1.173,728,2.723,750,1.173,760,2.414,981,1.039,983,1.889,985,1.504,988,1.039,989,1.675,990,1.675,1084,3.192,1086,1.173,1087,3.44,1088,2.735,1089,1.173,1090,1.173,1091,1.173,1092,3.702,1093,3.702,1094,1.89,1095,3.493,1096,3.192,1097,2.723,1098,1.89,1099,1.89,1100,1.89,1101,1.89,1102,1.351,1103,1.351,1104,1.351,1105,1.351,1106,1.351,1107,1.351,1108,1.351,1109,1.351,1110,1.351,1111,1.351,1112,1.351,1113,1.351,1114,1.351,1115,2.177,1116,2.177,1117,1.351,1118,1.351,1119,2.177,1120,2.177,1121,2.735,1122,3.44,1123,2.735,1124,2.177,1125,1.351,1126,2.735,1127,3.867,1128,2.177,1129,2.177,1130,2.735,1131,3.137,1132,1.351,1133,1.351,1134,1.351,1135,1.351,1136,1.351,1137,1.351,1138,2.735,1139,1.351,1140,2.177,1141,1.351,1142,1.351,1143,1.351,1144,1.351,1145,1.351,1146,1.351,1147,1.351,1148,3.137,1149,3.137,1150,1.351,1151,1.351,1152,1.351,1153,2.177,1154,1.351,1155,1.351,1156,3.137,1157,1.351,1158,3.137,1159,2.735,1160,1.351,1161,1.351,1162,1.351,1163,1.351,1164,1.351,1165,1.351,1166,2.177,1167,2.177,1168,1.351,1169,4.024,1170,1.351,1171,2.177,1172,1.351,1173,1.351,1174,2.177,1175,1.351,1176,1.351,1177,2.177,1178,1.351,1179,1.351,1180,1.351,1181,2.177,1182,1.351,1183,1.351,1184,1.351,1185,1.351,1186,1.351,1187,1.351,1188,1.351,1189,1.351,1190,1.351,1191,1.351,1192,1.351,1193,1.351,1194,1.351,1195,1.351,1196,1.351,1197,1.351,1198,1.351,1199,2.735,1200,1.351,1201,1.351,1202,1.351,1203,1.351,1204,2.177,1205,1.351,1206,1.351,1207,1.351,1208,1.351,1209,1.351,1210,1.351,1211,2.177,1212,1.351,1213,1.351,1214,1.351,1215,2.177,1216,1.351,1217,1.351,1218,1.351,1219,1.351,1220,1.351,1221,1.351,1222,1.351,1223,1.351,1224,1.351,1225,1.351,1226,1.351,1227,1.351,1228,2.177,1229,1.351,1230,1.351,1231,1.351,1232,1.351,1233,1.351,1234,1.351,1235,1.351,1236,1.351,1237,1.351,1238,1.351,1239,1.351,1240,1.351,1241,1.351,1242,1.351,1243,1.351,1244,1.351,1245,1.351,1246,1.351,1247,1.351,1248,1.351,1249,1.351,1250,1.351,1251,1.351,1252,1.351,1253,1.351]],["title/routes.html",[453,2.733]],["body/routes.html",[40,0.03,177,0.135,178,0.154,179,0.135,453,3.26]],["title/interfaces/sensorActions.html",[207,0.231,985,1.795]],["body/interfaces/sensorActions.html",[0,0.679,3,0.142,4,0.121,9,0.121,11,0.773,12,1.368,14,0.773,15,0.647,17,0.773,19,0.773,21,0.165,22,0.382,33,0.85,40,0.034,41,0.807,42,0.428,52,1.683,54,0.939,57,2.573,59,1.711,64,0.386,65,0.142,68,1.683,69,0.773,70,0.288,71,0.081,82,1.921,87,1.179,110,2.174,111,1.046,113,1.511,114,2.383,142,0.85,149,1.511,164,0.896,167,0.594,177,0.043,178,0.07,179,0.043,207,0.195,210,1.644,224,0.977,248,0.939,252,1.147,266,1.976,274,1.308,275,1.066,276,1.245,277,1.791,279,1.308,281,1.308,282,1.308,287,1.179,326,0.85,362,1.179,364,1.046,423,0.85,457,2.113,459,1.899,493,0.545,500,1.179,504,1.179,505,1.179,510,0.939,519,1.179,533,1.179,534,1.897,536,1.046,537,1.179,545,1.179,551,1.046,597,1.179,599,1.179,600,1.179,601,2.732,602,2.732,604,1.179,606,1.179,607,2.732,608,2.732,609,2.732,610,2.732,611,1.179,612,3.365,613,1.046,616,3.365,622,3.365,627,1.046,641,2.384,654,1.046,659,1.179,660,1.179,712,0.939,713,0.939,714,1.179,715,0.939,716,1.179,717,1.179,718,1.179,719,1.179,720,1.899,721,1.179,722,1.179,723,1.179,724,1.179,725,1.899,726,1.179,728,2.732,750,1.179,760,2.422,981,1.046,983,1.511,985,1.897,988,1.046,989,1.683,990,1.683,1084,3.2,1086,1.179,1087,2.188,1088,2.746,1089,1.179,1090,1.179,1091,1.179,1092,3.924,1093,3.924,1094,1.899,1095,3.5,1096,3.2,1097,2.732,1098,1.899,1099,1.899,1100,1.899,1101,1.899,1102,1.359,1103,1.359,1104,1.359,1105,1.359,1106,1.359,1107,1.359,1108,1.359,1109,1.359,1110,1.359,1111,1.359,1112,1.359,1113,1.359,1114,1.359,1115,2.188,1116,2.188,1117,1.359,1118,1.359,1119,2.188,1120,2.188,1121,2.746,1122,3.45,1123,2.746,1124,2.188,1125,1.359,1126,2.746,1127,3.877,1128,2.188,1129,2.188,1130,2.746,1131,3.148,1132,1.359,1133,1.359,1134,1.359,1135,1.359,1136,1.359,1137,1.359,1138,2.746,1139,1.359,1140,2.188,1141,1.359,1142,1.359,1143,1.359,1144,1.359,1145,1.359,1146,1.359,1147,1.359,1148,3.148,1149,3.148,1150,1.359,1151,1.359,1152,1.359,1153,2.188,1154,1.359,1155,1.359,1156,3.148,1157,1.359,1158,3.148,1159,2.746,1160,1.359,1161,1.359,1162,1.359,1163,1.359,1164,1.359,1165,1.359,1166,2.188,1167,2.188,1168,1.359,1169,4.032,1170,1.359,1171,2.188,1172,1.359,1173,1.359,1174,2.188,1175,1.359,1176,1.359,1177,2.188,1178,1.359,1179,1.359,1180,1.359,1181,2.188,1182,1.359,1183,1.359,1184,1.359,1185,1.359,1186,1.359,1187,1.359,1188,1.359,1189,1.359,1190,1.359,1191,1.359,1192,1.359,1193,1.359,1194,1.359,1195,1.359,1196,1.359,1197,1.359,1198,1.359,1199,2.746,1200,1.359,1201,1.359,1202,1.359,1203,1.359,1204,2.188,1205,1.359,1206,1.359,1207,1.359,1208,1.359,1209,1.359,1210,1.359,1211,2.188,1212,1.359,1213,1.359,1214,1.359,1215,2.188,1216,1.359,1217,1.359,1218,1.359,1219,1.359,1220,1.359,1221,1.359,1222,1.359,1223,1.359,1224,1.359,1225,1.359,1226,1.359,1227,1.359,1228,2.188,1229,1.359,1230,1.359,1231,1.359,1232,1.359,1233,1.359,1234,1.359,1235,1.359,1236,1.359,1237,1.359,1238,1.359,1239,1.359,1240,1.359,1241,1.359,1242,1.359,1243,1.359,1244,1.359,1245,1.359,1246,1.359,1247,1.359,1248,1.359,1249,1.359,1250,1.359,1251,1.359,1252,1.359,1253,1.359]],["title/miscellaneous/variables.html",[1254,2.167,1255,3.127]],["body/miscellaneous/variables.html",[21,0.376,40,0.034,42,0.771,55,2.198,56,2.198,57,2.274,82,1.478,142,2.498,177,0.099,178,0.127,179,0.099,598,3.996,613,2.388,627,2.388,981,2.388,983,2.144,985,2.144,988,3.075,989,3.075,990,3.075,996,3.103,997,4.667,998,3.103,999,3.103,1000,3.996,1001,3.996,1064,3.996,1089,2.694,1090,2.694,1091,2.694,1092,4.422,1093,4.422,1094,3.469,1095,4.422,1096,3.469,1097,3.469,1098,3.469,1099,3.469,1100,2.694,1101,2.694,1254,3.103,1255,3.103,1256,5.602,1257,4.797,1258,3.725,1259,3.725,1260,3.725,1261,3.725]]],"invertedIndex":[["",{"_index":40,"title":{},"body":{"components/AdminComponent.html":{},"injectables/AdminService.html":{},"injectables/AdminpanelDataService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuardService.html":{},"injectables/AuthService.html":{},"interfaces/AuthToken.html":{},"interfaces/BatteryData.html":{},"components/GraphsComponent.html":{},"interfaces/ImageData.html":{},"injectables/ImageService.html":{},"classes/NgbdDropdownBasic.html":{},"interfaces/RaspberryData.html":{},"interfaces/SolarData.html":{},"interfaces/TemperatureData.html":{},"interfaces/VolumeData.html":{},"injectables/WeatherDataService.html":{},"components/WebcamComponent.html":{},"interfaces/WindData.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"interfaces/raspyActions.html":{},"routes.html":{},"interfaces/sensorActions.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":110,"title":{},"body":{"components/AdminComponent.html":{},"components/GraphsComponent.html":{},"coverage.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["0.10.2",{"_index":1031,"title":{},"body":{"dependencies.html":{}}}],["0.2",{"_index":621,"title":{},"body":{"components/GraphsComponent.html":{}}}],["0.25em",{"_index":782,"title":{},"body":{"components/GraphsComponent.html":{},"components/WebcamComponent.html":{}}}],["0.5em",{"_index":749,"title":{},"body":{"components/GraphsComponent.html":{}}}],["0.5rem",{"_index":755,"title":{},"body":{"components/GraphsComponent.html":{}}}],["0.8em",{"_index":774,"title":{},"body":{"components/GraphsComponent.html":{}}}],["0.9],//todo",{"_index":1134,"title":{},"body":{"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["0.9];//todo",{"_index":1234,"title":{},"body":{"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["0/1",{"_index":987,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":994,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":978,"title":{},"body":{"coverage.html":{}}}],["0/13",{"_index":979,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":991,"title":{},"body":{"coverage.html":{}}}],["0/27",{"_index":995,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":976,"title":{},"body":{"coverage.html":{}}}],["0/38",{"_index":982,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":984,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":980,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":977,"title":{},"body":{"coverage.html":{}}}],["013adf",{"_index":1126,"title":{},"body":{"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["0em",{"_index":752,"title":{},"body":{"components/GraphsComponent.html":{}}}],["1",{"_index":252,"title":{},"body":{"injectables/AdminpanelDataService.html":{},"components/AppComponent.html":{},"interfaces/BatteryData.html":{},"components/GraphsComponent.html":{},"interfaces/ImageData.html":{},"injectables/ImageService.html":{},"interfaces/RaspberryData.html":{},"interfaces/SolarData.html":{},"interfaces/TemperatureData.html":{},"interfaces/VolumeData.html":{},"injectables/WeatherDataService.html":{},"interfaces/WindData.html":{},"overview.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["1.13.0",{"_index":1029,"title":{},"body":{"dependencies.html":{}}}],["1.8",{"_index":1131,"title":{},"body":{"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["1.8],//todo",{"_index":1136,"title":{},"body":{"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["1.8];//todo",{"_index":1236,"title":{},"body":{"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["10",{"_index":1085,"title":{},"body":{"overview.html":{}}}],["100",{"_index":104,"title":{},"body":{"components/AdminComponent.html":{},"components/GraphsComponent.html":{}}}],["10px",{"_index":137,"title":{},"body":{"components/AdminComponent.html":{},"components/WebcamComponent.html":{}}}],["12px",{"_index":106,"title":{},"body":{"components/AdminComponent.html":{}}}],["132",{"_index":620,"title":{},"body":{"components/GraphsComponent.html":{}}}],["14",{"_index":646,"title":{},"body":{"components/GraphsComponent.html":{}}}],["15",{"_index":952,"title":{},"body":{"components/WebcamComponent.html":{}}}],["15px",{"_index":959,"title":{},"body":{"components/WebcamComponent.html":{}}}],["16px",{"_index":145,"title":{},"body":{"components/AdminComponent.html":{}}}],["18px",{"_index":138,"title":{},"body":{"components/AdminComponent.html":{},"components/GraphsComponent.html":{}}}],["1em",{"_index":771,"title":{},"body":{"components/GraphsComponent.html":{}}}],["1px",{"_index":117,"title":{},"body":{"components/AdminComponent.html":{},"components/GraphsComponent.html":{}}}],["2",{"_index":1084,"title":{},"body":{"overview.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["2.0.8",{"_index":1023,"title":{},"body":{"dependencies.html":{}}}],["2.9.3",{"_index":1019,"title":{},"body":{"dependencies.html":{}}}],["2/36",{"_index":993,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":1142,"title":{},"body":{"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["20px",{"_index":107,"title":{},"body":{"components/AdminComponent.html":{},"components/GraphsComponent.html":{},"components/WebcamComponent.html":{}}}],["21",{"_index":647,"title":{},"body":{"components/GraphsComponent.html":{}}}],["25.05.2020",{"_index":1089,"title":{},"body":{"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{},"miscellaneous/variables.html":{}}}],["255",{"_index":631,"title":{},"body":{"components/GraphsComponent.html":{}}}],["26.05.2020",{"_index":1090,"title":{},"body":{"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{},"miscellaneous/variables.html":{}}}],["27.05.2020",{"_index":1091,"title":{},"body":{"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{},"miscellaneous/variables.html":{}}}],["3",{"_index":644,"title":{},"body":{"components/GraphsComponent.html":{}}}],["3.6.5",{"_index":1022,"title":{},"body":{"dependencies.html":{}}}],["30",{"_index":125,"title":{},"body":{"components/AdminComponent.html":{}}}],["300px",{"_index":158,"title":{},"body":{"components/AdminComponent.html":{}}}],["35px",{"_index":962,"title":{},"body":{"components/WebcamComponent.html":{}}}],["3em",{"_index":136,"title":{},"body":{"components/AdminComponent.html":{}}}],["4",{"_index":1086,"title":{},"body":{"overview.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["4.18.0",{"_index":1025,"title":{},"body":{"dependencies.html":{}}}],["4em",{"_index":772,"title":{},"body":{"components/GraphsComponent.html":{}}}],["5",{"_index":992,"title":{},"body":{"coverage.html":{},"overview.html":{}}}],["5.0.0",{"_index":1016,"title":{},"body":{"dependencies.html":{}}}],["5.0.1",{"_index":1015,"title":{},"body":{"dependencies.html":{}}}],["5.10.0",{"_index":1026,"title":{},"body":{"dependencies.html":{}}}],["6.5.5",{"_index":1027,"title":{},"body":{"dependencies.html":{}}}],["7",{"_index":645,"title":{},"body":{"components/GraphsComponent.html":{}}}],["70",{"_index":956,"title":{},"body":{"components/WebcamComponent.html":{}}}],["8.3.19",{"_index":1040,"title":{},"body":{"index.html":{}}}],["8px",{"_index":109,"title":{},"body":{"components/AdminComponent.html":{},"components/GraphsComponent.html":{}}}],["9.1.7",{"_index":1008,"title":{},"body":{"dependencies.html":{}}}],["9.1.8",{"_index":1006,"title":{},"body":{"dependencies.html":{}}}],["9.2.4",{"_index":1010,"title":{},"body":{"dependencies.html":{}}}],["9.3.0",{"_index":1018,"title":{},"body":{"dependencies.html":{}}}],["99",{"_index":619,"title":{},"body":{"components/GraphsComponent.html":{}}}],["absolute",{"_index":761,"title":{},"body":{"components/GraphsComponent.html":{},"components/WebcamComponent.html":{}}}],["access",{"_index":209,"title":{},"body":{"injectables/AdminService.html":{},"interfaces/AuthToken.html":{}}}],["account",{"_index":85,"title":{},"body":{"components/AdminComponent.html":{}}}],["action",{"_index":1087,"title":{},"body":{"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["actual_component",{"_index":176,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/GraphsComponent.html":{},"components/WebcamComponent.html":{}}}],["add",{"_index":142,"title":{},"body":{"components/AdminComponent.html":{},"modules/AppRoutingModule.html":{},"coverage.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{},"miscellaneous/variables.html":{}}}],["adddateevent",{"_index":909,"title":{},"body":{"components/WebcamComponent.html":{}}}],["adddateevent(event",{"_index":879,"title":{},"body":{"classes/NgbdDropdownBasic.html":{},"components/WebcamComponent.html":{}}}],["addendevent",{"_index":517,"title":{},"body":{"components/GraphsComponent.html":{}}}],["addendevent(event",{"_index":533,"title":{},"body":{"components/GraphsComponent.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["addstartevent",{"_index":518,"title":{},"body":{"components/GraphsComponent.html":{}}}],["addstartevent(event",{"_index":537,"title":{},"body":{"components/GraphsComponent.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["admin",{"_index":16,"title":{},"body":{"components/AdminComponent.html":{},"modules/AppRoutingModule.html":{}}}],["admin'},{'name",{"_index":166,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/GraphsComponent.html":{},"components/WebcamComponent.html":{}}}],["admin.component.html",{"_index":20,"title":{},"body":{"components/AdminComponent.html":{}}}],["admin.component.scss",{"_index":18,"title":{},"body":{"components/AdminComponent.html":{}}}],["admin.service",{"_index":66,"title":{},"body":{"components/AdminComponent.html":{}}}],["admin/admin.component",{"_index":334,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["admincomponent",{"_index":1,"title":{"components/AdminComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/GraphsComponent.html":{},"components/WebcamComponent.html":{},"coverage.html":{},"overview.html":{}}}],["adminpanel",{"_index":459,"title":{},"body":{"modules/AppRoutingModule.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["adminpanel'},{'name",{"_index":168,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/GraphsComponent.html":{},"components/WebcamComponent.html":{}}}],["adminpanel.component.html",{"_index":1102,"title":{},"body":{"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["adminpanel.component.scss",{"_index":1103,"title":{},"body":{"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["adminpanel/adminpanel.component",{"_index":426,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["adminpanelcomponent",{"_index":167,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/GraphsComponent.html":{},"components/WebcamComponent.html":{},"coverage.html":{},"overview.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["adminpaneldataservice",{"_index":210,"title":{"injectables/AdminpanelDataService.html":{}},"body":{"injectables/AdminpanelDataService.html":{},"interfaces/BatteryData.html":{},"interfaces/RaspberryData.html":{},"interfaces/SolarData.html":{},"interfaces/VolumeData.html":{},"coverage.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["adminpaneldatasubscription",{"_index":1113,"title":{},"body":{"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["adminservice",{"_index":23,"title":{"injectables/AdminService.html":{}},"body":{"components/AdminComponent.html":{},"injectables/AdminService.html":{},"interfaces/AuthToken.html":{},"coverage.html":{}}}],["adminsubscription",{"_index":24,"title":{},"body":{"components/AdminComponent.html":{}}}],["akku",{"_index":1116,"title":{},"body":{"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["aktuelle",{"_index":732,"title":{},"body":{"components/GraphsComponent.html":{}}}],["align",{"_index":112,"title":{},"body":{"components/AdminComponent.html":{},"components/GraphsComponent.html":{}}}],["alle",{"_index":937,"title":{},"body":{"components/WebcamComponent.html":{}}}],["angle",{"_index":592,"title":{},"body":{"components/GraphsComponent.html":{}}}],["angular",{"_index":321,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"index.html":{}}}],["angular/animations",{"_index":1007,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":1009,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk/clipboard",{"_index":340,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/cdk/drag",{"_index":342,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/cdk/portal",{"_index":345,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/cdk/scrolling",{"_index":347,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/cdk/stepper",{"_index":349,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/cdk/table",{"_index":351,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/cdk/tree",{"_index":353,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/common",{"_index":1011,"title":{},"body":{"dependencies.html":{}}}],["angular/common/http",{"_index":197,"title":{},"body":{"injectables/AdminService.html":{},"injectables/AdminpanelDataService.html":{},"modules/AppModule.html":{},"interfaces/AuthToken.html":{},"interfaces/BatteryData.html":{},"interfaces/ImageData.html":{},"injectables/ImageService.html":{},"interfaces/RaspberryData.html":{},"interfaces/SolarData.html":{},"interfaces/TemperatureData.html":{},"interfaces/VolumeData.html":{},"injectables/WeatherDataService.html":{},"interfaces/WindData.html":{}}}],["angular/compiler",{"_index":1012,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":65,"title":{},"body":{"components/AdminComponent.html":{},"injectables/AdminService.html":{},"injectables/AdminpanelDataService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuardService.html":{},"injectables/AuthService.html":{},"interfaces/AuthToken.html":{},"interfaces/BatteryData.html":{},"components/GraphsComponent.html":{},"interfaces/ImageData.html":{},"injectables/ImageService.html":{},"classes/NgbdDropdownBasic.html":{},"interfaces/RaspberryData.html":{},"interfaces/SolarData.html":{},"interfaces/TemperatureData.html":{},"interfaces/VolumeData.html":{},"injectables/WeatherDataService.html":{},"components/WebcamComponent.html":{},"interfaces/WindData.html":{},"dependencies.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["angular/forms",{"_index":338,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/material",{"_index":1013,"title":{},"body":{"dependencies.html":{}}}],["angular/material/autocomplete",{"_index":355,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/badge",{"_index":357,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/bottom",{"_index":359,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/button",{"_index":362,"title":{},"body":{"modules/AppModule.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["angular/material/card",{"_index":324,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/checkbox",{"_index":366,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/chips",{"_index":368,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/core",{"_index":390,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/datepicker",{"_index":326,"title":{},"body":{"modules/AppModule.html":{},"components/GraphsComponent.html":{},"classes/NgbdDropdownBasic.html":{},"components/WebcamComponent.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["angular/material/dialog",{"_index":372,"title":{},"body":{"modules/AppModule.html":{},"classes/NgbdDropdownBasic.html":{},"components/WebcamComponent.html":{}}}],["angular/material/divider",{"_index":374,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/expansion",{"_index":376,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/form",{"_index":328,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/grid",{"_index":378,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/icon",{"_index":381,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/input",{"_index":383,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/list",{"_index":385,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/menu",{"_index":387,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/paginator",{"_index":392,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/progress",{"_index":394,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/radio",{"_index":399,"title":{},"body":{"modules/AppModule.html":{},"components/GraphsComponent.html":{}}}],["angular/material/select",{"_index":401,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/sidenav",{"_index":403,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/slide",{"_index":407,"title":{},"body":{"modules/AppModule.html":{},"components/GraphsComponent.html":{}}}],["angular/material/slider",{"_index":405,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/snack",{"_index":409,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/sort",{"_index":411,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/stepper",{"_index":370,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/table",{"_index":413,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/tabs",{"_index":415,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/toolbar",{"_index":417,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/tooltip",{"_index":419,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/tree",{"_index":421,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/platform",{"_index":317,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":67,"title":{},"body":{"components/AdminComponent.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuardService.html":{},"dependencies.html":{}}}],["animation",{"_index":1143,"title":{},"body":{"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["animationduration",{"_index":1146,"title":{},"body":{"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["anmelden",{"_index":96,"title":{},"body":{"components/AdminComponent.html":{}}}],["anwenden",{"_index":744,"title":{},"body":{"components/GraphsComponent.html":{}}}],["anzahl",{"_index":570,"title":{},"body":{"components/GraphsComponent.html":{}}}],["anzeigen",{"_index":949,"title":{},"body":{"components/WebcamComponent.html":{}}}],["apiurl",{"_index":183,"title":{},"body":{"injectables/AdminService.html":{},"injectables/AdminpanelDataService.html":{},"interfaces/AuthToken.html":{},"interfaces/BatteryData.html":{},"interfaces/ImageData.html":{},"injectables/ImageService.html":{},"interfaces/RaspberryData.html":{},"interfaces/SolarData.html":{},"interfaces/TemperatureData.html":{},"interfaces/VolumeData.html":{},"injectables/WeatherDataService.html":{},"interfaces/WindData.html":{}}}],["app",{"_index":15,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/GraphsComponent.html":{},"classes/NgbdDropdownBasic.html":{},"components/WebcamComponent.html":{},"index.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["app.component",{"_index":331,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.html",{"_index":286,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss",{"_index":285,"title":{},"body":{"components/AppComponent.html":{}}}],["appcomponent",{"_index":169,"title":{"components/AppComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/GraphsComponent.html":{},"components/WebcamComponent.html":{},"coverage.html":{},"overview.html":{}}}],["applytimeframe",{"_index":519,"title":{},"body":{"components/GraphsComponent.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["appmodule",{"_index":296,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["apppage",{"_index":439,"title":{"classes/AppPage.html":{}},"body":{"classes/AppPage.html":{},"coverage.html":{}}}],["approutingmodule",{"_index":308,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["arrowscontainer",{"_index":777,"title":{},"body":{"components/GraphsComponent.html":{}}}],["artifacts",{"_index":1058,"title":{},"body":{"index.html":{}}}],["aufgebaut",{"_index":548,"title":{},"body":{"components/GraphsComponent.html":{}}}],["aufgenommenen",{"_index":938,"title":{},"body":{"components/WebcamComponent.html":{}}}],["ausgewählt",{"_index":1109,"title":{},"body":{"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["auth",{"_index":428,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuardService.html":{}}}],["auth.service",{"_index":470,"title":{},"body":{"guards/AuthGuardService.html":{}}}],["auth0/angular",{"_index":481,"title":{},"body":{"injectables/AuthService.html":{},"dependencies.html":{}}}],["authguard",{"_index":456,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["authguardservice",{"_index":427,"title":{"guards/AuthGuardService.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuardService.html":{},"coverage.html":{}}}],["authservice",{"_index":467,"title":{"injectables/AuthService.html":{}},"body":{"guards/AuthGuardService.html":{},"injectables/AuthService.html":{},"coverage.html":{}}}],["authtoken",{"_index":61,"title":{"interfaces/AuthToken.html":{}},"body":{"components/AdminComponent.html":{},"injectables/AdminService.html":{},"interfaces/AuthToken.html":{},"coverage.html":{}}}],["auto",{"_index":124,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/GraphsComponent.html":{},"components/WebcamComponent.html":{}}}],["automatically",{"_index":1049,"title":{},"body":{"index.html":{}}}],["available",{"_index":1082,"title":{},"body":{"modules.html":{}}}],["b",{"_index":1094,"title":{},"body":{"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{},"miscellaneous/variables.html":{}}}],["background",{"_index":139,"title":{},"body":{"components/AdminComponent.html":{}}}],["backgroundcolor",{"_index":617,"title":{},"body":{"components/GraphsComponent.html":{}}}],["bar",{"_index":395,"title":{},"body":{"modules/AppModule.html":{}}}],["battery",{"_index":1160,"title":{},"body":{"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["battery/aggregate/?start='+this.formatdate(today",{"_index":265,"title":{},"body":{"injectables/AdminpanelDataService.html":{},"interfaces/BatteryData.html":{},"interfaces/RaspberryData.html":{},"interfaces/SolarData.html":{},"interfaces/VolumeData.html":{}}}],["batterychart",{"_index":1194,"title":{},"body":{"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["batterydata",{"_index":279,"title":{"interfaces/BatteryData.html":{}},"body":{"injectables/AdminpanelDataService.html":{},"interfaces/BatteryData.html":{},"interfaces/RaspberryData.html":{},"interfaces/SolarData.html":{},"interfaces/VolumeData.html":{},"coverage.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["beginatzero",{"_index":602,"title":{},"body":{"components/GraphsComponent.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["behaviorsubject",{"_index":68,"title":{},"body":{"components/AdminComponent.html":{},"components/GraphsComponent.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["behaviorsubject(false",{"_index":660,"title":{},"body":{"components/GraphsComponent.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["beim",{"_index":565,"title":{},"body":{"components/GraphsComponent.html":{}}}],["benutzername",{"_index":94,"title":{},"body":{"components/AdminComponent.html":{}}}],["beta.0",{"_index":1017,"title":{},"body":{"dependencies.html":{}}}],["bilder",{"_index":939,"title":{},"body":{"components/WebcamComponent.html":{}}}],["block",{"_index":115,"title":{},"body":{"components/AdminComponent.html":{},"components/GraphsComponent.html":{}}}],["body",{"_index":967,"title":{},"body":{"components/WebcamComponent.html":{}}}],["boolean",{"_index":54,"title":{},"body":{"components/AdminComponent.html":{},"guards/AuthGuardService.html":{},"injectables/AuthService.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["bootstrap",{"_index":300,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"overview.html":{}}}],["border",{"_index":116,"title":{},"body":{"components/AdminComponent.html":{},"components/GraphsComponent.html":{}}}],["bordercolor",{"_index":622,"title":{},"body":{"components/GraphsComponent.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["borderwidth",{"_index":623,"title":{},"body":{"components/GraphsComponent.html":{}}}],["both",{"_index":955,"title":{},"body":{"components/WebcamComponent.html":{}}}],["bottom",{"_index":748,"title":{},"body":{"components/GraphsComponent.html":{},"components/WebcamComponent.html":{}}}],["box",{"_index":120,"title":{},"body":{"components/AdminComponent.html":{},"components/GraphsComponent.html":{}}}],["breakpoint",{"_index":499,"title":{},"body":{"components/GraphsComponent.html":{}}}],["browse",{"_index":1080,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":318,"title":{},"body":{"modules/AppModule.html":{},"classes/AppPage.html":{},"dependencies.html":{},"modules.html":{}}}],["browser.get(browser.baseurl",{"_index":447,"title":{},"body":{"classes/AppPage.html":{}}}],["browser/animations",{"_index":336,"title":{},"body":{"modules/AppModule.html":{}}}],["browseranimationsmodule",{"_index":335,"title":{},"body":{"modules/AppModule.html":{}}}],["browsermodule",{"_index":316,"title":{},"body":{"modules/AppModule.html":{}}}],["build",{"_index":1057,"title":{},"body":{"index.html":{}}}],["buildchart(data",{"_index":1209,"title":{},"body":{"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["buildtempchart",{"_index":520,"title":{},"body":{"components/GraphsComponent.html":{}}}],["buildwindchart",{"_index":521,"title":{},"body":{"components/GraphsComponent.html":{}}}],["button",{"_index":133,"title":{},"body":{"components/AdminComponent.html":{},"components/GraphsComponent.html":{}}}],["byte",{"_index":1124,"title":{},"body":{"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["c",{"_index":614,"title":{},"body":{"components/GraphsComponent.html":{}}}],["canactivate",{"_index":455,"title":{},"body":{"modules/AppRoutingModule.html":{},"guards/AuthGuardService.html":{}}}],["cancel",{"_index":132,"title":{},"body":{"components/AdminComponent.html":{}}}],["cancelbtn",{"_index":135,"title":{},"body":{"components/AdminComponent.html":{}}}],["canvas",{"_index":750,"title":{},"body":{"components/GraphsComponent.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["card",{"_index":123,"title":{},"body":{"components/AdminComponent.html":{},"components/GraphsComponent.html":{},"components/WebcamComponent.html":{}}}],["catcherror",{"_index":198,"title":{},"body":{"injectables/AdminService.html":{},"interfaces/AuthToken.html":{}}}],["ccc",{"_index":119,"title":{},"body":{"components/AdminComponent.html":{}}}],["cdksteppermodule",{"_index":348,"title":{},"body":{"modules/AppModule.html":{}}}],["cdktablemodule",{"_index":350,"title":{},"body":{"modules/AppModule.html":{}}}],["cdktreemodule",{"_index":352,"title":{},"body":{"modules/AppModule.html":{}}}],["ce1a9e",{"_index":1137,"title":{},"body":{"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["center",{"_index":129,"title":{},"body":{"components/AdminComponent.html":{},"components/GraphsComponent.html":{}}}],["change",{"_index":151,"title":{},"body":{"components/AdminComponent.html":{},"index.html":{}}}],["changedetection",{"_index":822,"title":{},"body":{"classes/NgbdDropdownBasic.html":{},"components/WebcamComponent.html":{}}}],["changedetectionstrategy.onpush",{"_index":823,"title":{},"body":{"classes/NgbdDropdownBasic.html":{},"components/WebcamComponent.html":{}}}],["chart",{"_index":641,"title":{},"body":{"components/GraphsComponent.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["chart(canvas",{"_index":1218,"title":{},"body":{"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["chart.js",{"_index":654,"title":{},"body":{"components/GraphsComponent.html":{},"dependencies.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["chartdatasets",{"_index":1125,"title":{},"body":{"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["chartlabels",{"_index":1118,"title":{},"body":{"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["chartnames",{"_index":1114,"title":{},"body":{"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["chartoptions",{"_index":500,"title":{},"body":{"components/GraphsComponent.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["charttempdata",{"_index":501,"title":{},"body":{"components/GraphsComponent.html":{}}}],["chartwindata",{"_index":502,"title":{},"body":{"components/GraphsComponent.html":{}}}],["check",{"_index":485,"title":{},"body":{"injectables/AuthService.html":{},"index.html":{}}}],["chosenbtn",{"_index":503,"title":{},"body":{"components/GraphsComponent.html":{}}}],["class",{"_index":71,"title":{"classes/AppPage.html":{},"classes/NgbdDropdownBasic.html":{}},"body":{"components/AdminComponent.html":{},"injectables/AdminService.html":{},"injectables/AdminpanelDataService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuardService.html":{},"injectables/AuthService.html":{},"interfaces/AuthToken.html":{},"interfaces/BatteryData.html":{},"components/GraphsComponent.html":{},"interfaces/ImageData.html":{},"injectables/ImageService.html":{},"classes/NgbdDropdownBasic.html":{},"interfaces/RaspberryData.html":{},"interfaces/SolarData.html":{},"interfaces/TemperatureData.html":{},"interfaces/VolumeData.html":{},"injectables/WeatherDataService.html":{},"components/WebcamComponent.html":{},"interfaces/WindData.html":{},"coverage.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["classes",{"_index":440,"title":{},"body":{"classes/AppPage.html":{},"classes/NgbdDropdownBasic.html":{},"overview.html":{}}}],["clear",{"_index":954,"title":{},"body":{"components/WebcamComponent.html":{}}}],["cli",{"_index":1038,"title":{},"body":{"index.html":{}}}],["clipboardmodule",{"_index":339,"title":{},"body":{"modules/AppModule.html":{}}}],["closebtn",{"_index":961,"title":{},"body":{"components/WebcamComponent.html":{}}}],["cluster_appmodule",{"_index":303,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":306,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":304,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":305,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":307,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["code",{"_index":1052,"title":{},"body":{"index.html":{}}}],["color",{"_index":140,"title":{},"body":{"components/AdminComponent.html":{},"components/WebcamComponent.html":{}}}],["column",{"_index":754,"title":{},"body":{"components/GraphsComponent.html":{}}}],["component",{"_index":0,"title":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/GraphsComponent.html":{},"components/WebcamComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/GraphsComponent.html":{},"classes/NgbdDropdownBasic.html":{},"components/WebcamComponent.html":{},"coverage.html":{},"index.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["component,changedetectionstrategy",{"_index":809,"title":{},"body":{"classes/NgbdDropdownBasic.html":{},"components/WebcamComponent.html":{}}}],["component_template",{"_index":165,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/GraphsComponent.html":{},"components/WebcamComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/GraphsComponent.html":{},"components/WebcamComponent.html":{},"overview.html":{}}}],["console.log(\"fehler",{"_index":84,"title":{},"body":{"components/AdminComponent.html":{}}}],["console.log(\"token:\"+this.token",{"_index":93,"title":{},"body":{"components/AdminComponent.html":{}}}],["console.log(data",{"_index":673,"title":{},"body":{"components/GraphsComponent.html":{}}}],["console.log(datavol",{"_index":1180,"title":{},"body":{"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["console.log(enddate",{"_index":1246,"title":{},"body":{"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["console.log(event",{"_index":709,"title":{},"body":{"components/GraphsComponent.html":{}}}],["console.log(startdate",{"_index":722,"title":{},"body":{"components/GraphsComponent.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["console.log(this.chartdatasets",{"_index":1153,"title":{},"body":{"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["console.log(this.chartdatasets[0][0].data",{"_index":1224,"title":{},"body":{"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["console.log(this.charttempdata",{"_index":686,"title":{},"body":{"components/GraphsComponent.html":{}}}],["console.log(this.enddateevents",{"_index":717,"title":{},"body":{"components/GraphsComponent.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["console.log(this.gallery",{"_index":854,"title":{},"body":{"classes/NgbdDropdownBasic.html":{},"components/WebcamComponent.html":{}}}],["console.log(this.jwthelper.gettokenexpirationdate(\"eyj0exaioijkv1qilcjhbgcioijiuzi1nij9.eyj0b2tlbl90exblijoiywnjzxnziiwizxhwijoxntk1njawmjc2lcjqdgkioijkndi4mzuwowm4yjm0mzc3owe1zjkxmda4ymjlyza3msisinvzzxjfawqiojf9.yjnowg",{"_index":488,"title":{},"body":{"injectables/AuthService.html":{}}}],["console.log(this.jwthelper.gettokenexpirationdate(token",{"_index":491,"title":{},"body":{"injectables/AuthService.html":{}}}],["console.log(this.recentpics",{"_index":852,"title":{},"body":{"classes/NgbdDropdownBasic.html":{},"components/WebcamComponent.html":{}}}],["console.log(this.recentwindspeed",{"_index":668,"title":{},"body":{"components/GraphsComponent.html":{}}}],["console.log(this.startdateevents",{"_index":715,"title":{},"body":{"components/GraphsComponent.html":{},"classes/NgbdDropdownBasic.html":{},"components/WebcamComponent.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["console.log(token",{"_index":484,"title":{},"body":{"injectables/AuthService.html":{}}}],["const",{"_index":457,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/AuthService.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["constructor",{"_index":34,"title":{},"body":{"components/AdminComponent.html":{},"injectables/AdminService.html":{},"injectables/AdminpanelDataService.html":{},"guards/AuthGuardService.html":{},"injectables/AuthService.html":{},"components/GraphsComponent.html":{},"injectables/ImageService.html":{},"injectables/WeatherDataService.html":{},"components/WebcamComponent.html":{}}}],["constructor(adminpaneldataservice",{"_index":1150,"title":{},"body":{"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["constructor(adminservice",{"_index":35,"title":{},"body":{"components/AdminComponent.html":{}}}],["constructor(auth",{"_index":466,"title":{},"body":{"guards/AuthGuardService.html":{}}}],["constructor(http",{"_index":186,"title":{},"body":{"injectables/AdminService.html":{},"injectables/AdminpanelDataService.html":{},"interfaces/AuthToken.html":{},"interfaces/BatteryData.html":{},"interfaces/ImageData.html":{},"injectables/ImageService.html":{},"interfaces/RaspberryData.html":{},"interfaces/SolarData.html":{},"interfaces/TemperatureData.html":{},"interfaces/VolumeData.html":{},"injectables/WeatherDataService.html":{},"interfaces/WindData.html":{}}}],["constructor(imageservice",{"_index":834,"title":{},"body":{"classes/NgbdDropdownBasic.html":{},"components/WebcamComponent.html":{}}}],["constructor(public",{"_index":472,"title":{},"body":{"guards/AuthGuardService.html":{}}}],["constructor(weatherdataservice",{"_index":531,"title":{},"body":{"components/GraphsComponent.html":{}}}],["container",{"_index":144,"title":{},"body":{"components/AdminComponent.html":{},"components/GraphsComponent.html":{},"components/WebcamComponent.html":{}}}],["containers",{"_index":143,"title":{},"body":{"components/AdminComponent.html":{}}}],["content",{"_index":128,"title":{},"body":{"components/AdminComponent.html":{},"classes/AppPage.html":{},"components/GraphsComponent.html":{},"components/WebcamComponent.html":{}}}],["context",{"_index":1000,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["core",{"_index":1020,"title":{},"body":{"dependencies.html":{}}}],["cover",{"_index":847,"title":{},"body":{"classes/NgbdDropdownBasic.html":{},"components/WebcamComponent.html":{}}}],["coverage",{"_index":972,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["current",{"_index":276,"title":{},"body":{"injectables/AdminpanelDataService.html":{},"interfaces/BatteryData.html":{},"interfaces/RaspberryData.html":{},"interfaces/SolarData.html":{},"interfaces/VolumeData.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["cursor",{"_index":963,"title":{},"body":{"components/WebcamComponent.html":{}}}],["d",{"_index":247,"title":{},"body":{"injectables/AdminpanelDataService.html":{},"interfaces/BatteryData.html":{},"interfaces/ImageData.html":{},"injectables/ImageService.html":{},"interfaces/RaspberryData.html":{},"interfaces/SolarData.html":{},"interfaces/TemperatureData.html":{},"interfaces/VolumeData.html":{},"injectables/WeatherDataService.html":{},"interfaces/WindData.html":{}}}],["d.getdate",{"_index":254,"title":{},"body":{"injectables/AdminpanelDataService.html":{},"interfaces/BatteryData.html":{},"interfaces/ImageData.html":{},"injectables/ImageService.html":{},"interfaces/RaspberryData.html":{},"interfaces/SolarData.html":{},"interfaces/TemperatureData.html":{},"interfaces/VolumeData.html":{},"injectables/WeatherDataService.html":{},"interfaces/WindData.html":{}}}],["d.getfullyear",{"_index":256,"title":{},"body":{"injectables/AdminpanelDataService.html":{},"interfaces/BatteryData.html":{},"interfaces/ImageData.html":{},"injectables/ImageService.html":{},"interfaces/RaspberryData.html":{},"interfaces/SolarData.html":{},"interfaces/TemperatureData.html":{},"interfaces/VolumeData.html":{},"injectables/WeatherDataService.html":{},"interfaces/WindData.html":{}}}],["d.getmonth",{"_index":251,"title":{},"body":{"injectables/AdminpanelDataService.html":{},"interfaces/BatteryData.html":{},"interfaces/ImageData.html":{},"injectables/ImageService.html":{},"interfaces/RaspberryData.html":{},"interfaces/SolarData.html":{},"interfaces/TemperatureData.html":{},"interfaces/VolumeData.html":{},"injectables/WeatherDataService.html":{},"interfaces/WindData.html":{}}}],["dat",{"_index":1211,"title":{},"body":{"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["data",{"_index":266,"title":{},"body":{"injectables/AdminpanelDataService.html":{},"interfaces/BatteryData.html":{},"components/GraphsComponent.html":{},"classes/NgbdDropdownBasic.html":{},"interfaces/RaspberryData.html":{},"interfaces/SolarData.html":{},"interfaces/VolumeData.html":{},"components/WebcamComponent.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["data.current);//todo",{"_index":1231,"title":{},"body":{"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["data.degrees",{"_index":615,"title":{},"body":{"components/GraphsComponent.html":{}}}],["data.degrees)[data.length",{"_index":672,"title":{},"body":{"components/GraphsComponent.html":{}}}],["data.direction",{"_index":698,"title":{},"body":{"components/GraphsComponent.html":{}}}],["data.direction)[data.length",{"_index":667,"title":{},"body":{"components/GraphsComponent.html":{}}}],["data.map(data",{"_index":664,"title":{},"body":{"components/GraphsComponent.html":{}}}],["data.service",{"_index":423,"title":{},"body":{"modules/AppModule.html":{},"components/GraphsComponent.html":{},"classes/NgbdDropdownBasic.html":{},"components/WebcamComponent.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["data.service.ts",{"_index":212,"title":{},"body":{"injectables/AdminpanelDataService.html":{},"interfaces/BatteryData.html":{},"interfaces/ImageData.html":{},"injectables/ImageService.html":{},"interfaces/RaspberryData.html":{},"interfaces/SolarData.html":{},"interfaces/TemperatureData.html":{},"interfaces/VolumeData.html":{},"injectables/WeatherDataService.html":{},"interfaces/WindData.html":{},"coverage.html":{}}}],["data.service.ts:13",{"_index":806,"title":{},"body":{"injectables/ImageService.html":{}}}],["data.service.ts:15",{"_index":225,"title":{},"body":{"injectables/AdminpanelDataService.html":{},"injectables/WeatherDataService.html":{}}}],["data.service.ts:17",{"_index":800,"title":{},"body":{"injectables/ImageService.html":{}}}],["data.service.ts:29",{"_index":239,"title":{},"body":{"injectables/AdminpanelDataService.html":{},"injectables/WeatherDataService.html":{}}}],["data.service.ts:31",{"_index":803,"title":{},"body":{"injectables/ImageService.html":{}}}],["data.service.ts:36",{"_index":804,"title":{},"body":{"injectables/ImageService.html":{}}}],["data.service.ts:37",{"_index":228,"title":{},"body":{"injectables/AdminpanelDataService.html":{},"injectables/WeatherDataService.html":{}}}],["data.service.ts:42",{"_index":805,"title":{},"body":{"injectables/ImageService.html":{}}}],["data.service.ts:44",{"_index":906,"title":{},"body":{"injectables/WeatherDataService.html":{}}}],["data.service.ts:45",{"_index":235,"title":{},"body":{"injectables/AdminpanelDataService.html":{}}}],["data.service.ts:49",{"_index":904,"title":{},"body":{"injectables/WeatherDataService.html":{}}}],["data.service.ts:50",{"_index":802,"title":{},"body":{"injectables/ImageService.html":{}}}],["data.service.ts:53",{"_index":243,"title":{},"body":{"injectables/AdminpanelDataService.html":{}}}],["data.service.ts:54",{"_index":901,"title":{},"body":{"injectables/WeatherDataService.html":{}}}],["data.service.ts:61",{"_index":241,"title":{},"body":{"injectables/AdminpanelDataService.html":{}}}],["data.service.ts:65",{"_index":232,"title":{},"body":{"injectables/AdminpanelDataService.html":{}}}],["data.service.ts:69",{"_index":237,"title":{},"body":{"injectables/AdminpanelDataService.html":{}}}],["data.service.ts:73",{"_index":245,"title":{},"body":{"injectables/AdminpanelDataService.html":{}}}],["data.service.ts:8",{"_index":246,"title":{},"body":{"injectables/AdminpanelDataService.html":{},"injectables/ImageService.html":{},"injectables/WeatherDataService.html":{}}}],["data.service.ts:9",{"_index":222,"title":{},"body":{"injectables/AdminpanelDataService.html":{},"injectables/ImageService.html":{},"injectables/WeatherDataService.html":{}}}],["data.speed)[data.length",{"_index":665,"title":{},"body":{"components/GraphsComponent.html":{}}}],["data.voltage);//todo",{"_index":1229,"title":{},"body":{"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["data:this.charttempdata",{"_index":688,"title":{},"body":{"components/GraphsComponent.html":{}}}],["data:this.chartwindata",{"_index":695,"title":{},"body":{"components/GraphsComponent.html":{}}}],["data[i",{"_index":703,"title":{},"body":{"components/GraphsComponent.html":{}}}],["databattery",{"_index":1175,"title":{},"body":{"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["datarasp",{"_index":1178,"title":{},"body":{"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["dataset",{"_index":1215,"title":{},"body":{"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["datasets",{"_index":611,"title":{},"body":{"components/GraphsComponent.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["datasolar",{"_index":1172,"title":{},"body":{"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["datasolar.voltage",{"_index":1129,"title":{},"body":{"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["datavol",{"_index":1182,"title":{},"body":{"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["datavolume.image_size",{"_index":1140,"title":{},"body":{"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["datawind.speed",{"_index":629,"title":{},"body":{"components/GraphsComponent.html":{}}}],["date",{"_index":224,"title":{},"body":{"injectables/AdminpanelDataService.html":{},"interfaces/BatteryData.html":{},"interfaces/ImageData.html":{},"injectables/ImageService.html":{},"classes/NgbdDropdownBasic.html":{},"interfaces/RaspberryData.html":{},"interfaces/SolarData.html":{},"interfaces/TemperatureData.html":{},"interfaces/VolumeData.html":{},"injectables/WeatherDataService.html":{},"components/WebcamComponent.html":{},"interfaces/WindData.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["date(data.measure_time).tolocalestring([],{month:'2",{"_index":606,"title":{},"body":{"components/GraphsComponent.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["date(datawind.measure_time).tolocalestring",{"_index":626,"title":{},"body":{"components/GraphsComponent.html":{}}}],["date(datawind.measure_time).tolocalestring([],{hour:'2",{"_index":707,"title":{},"body":{"components/GraphsComponent.html":{}}}],["date(datawind.measure_time).tolocalestring([],{month:'2",{"_index":691,"title":{},"body":{"components/GraphsComponent.html":{}}}],["date(date",{"_index":249,"title":{},"body":{"injectables/AdminpanelDataService.html":{},"interfaces/BatteryData.html":{},"interfaces/ImageData.html":{},"injectables/ImageService.html":{},"interfaces/RaspberryData.html":{},"interfaces/SolarData.html":{},"interfaces/TemperatureData.html":{},"interfaces/VolumeData.html":{},"injectables/WeatherDataService.html":{},"interfaces/WindData.html":{}}}],["date(date.getfullyear",{"_index":1166,"title":{},"body":{"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["date(datesolar.measure_time).tolocalestring([],{month:'2",{"_index":1199,"title":{},"body":{"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["date(endstring",{"_index":726,"title":{},"body":{"components/GraphsComponent.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["date(startstring",{"_index":721,"title":{},"body":{"components/GraphsComponent.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["date.getmonth",{"_index":1167,"title":{},"body":{"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["dategallery",{"_index":907,"title":{},"body":{"components/WebcamComponent.html":{}}}],["dategallery:gallery",{"_index":838,"title":{},"body":{"classes/NgbdDropdownBasic.html":{},"components/WebcamComponent.html":{}}}],["dateimages",{"_index":831,"title":{},"body":{"classes/NgbdDropdownBasic.html":{},"components/WebcamComponent.html":{}}}],["daten",{"_index":553,"title":{},"body":{"components/GraphsComponent.html":{}}}],["datenmenge",{"_index":1123,"title":{},"body":{"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["datensatz",{"_index":541,"title":{},"body":{"components/GraphsComponent.html":{}}}],["datenverbrauch",{"_index":1117,"title":{},"body":{"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["datepics",{"_index":830,"title":{},"body":{"classes/NgbdDropdownBasic.html":{},"components/WebcamComponent.html":{}}}],["dates",{"_index":988,"title":{},"body":{"coverage.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{},"miscellaneous/variables.html":{}}}],["datum",{"_index":942,"title":{},"body":{"components/WebcamComponent.html":{}}}],["day",{"_index":253,"title":{},"body":{"injectables/AdminpanelDataService.html":{},"interfaces/BatteryData.html":{},"interfaces/ImageData.html":{},"injectables/ImageService.html":{},"interfaces/RaspberryData.html":{},"interfaces/SolarData.html":{},"interfaces/TemperatureData.html":{},"interfaces/VolumeData.html":{},"injectables/WeatherDataService.html":{},"interfaces/WindData.html":{}}}],["declarations",{"_index":299,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["default",{"_index":55,"title":{},"body":{"components/AdminComponent.html":{},"injectables/AdminService.html":{},"injectables/AdminpanelDataService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/GraphsComponent.html":{},"injectables/ImageService.html":{},"injectables/WeatherDataService.html":{},"components/WebcamComponent.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":37,"title":{},"body":{"components/AdminComponent.html":{},"injectables/AdminService.html":{},"injectables/AdminpanelDataService.html":{},"components/AppComponent.html":{},"classes/AppPage.html":{},"guards/AuthGuardService.html":{},"injectables/AuthService.html":{},"components/GraphsComponent.html":{},"injectables/ImageService.html":{},"injectables/WeatherDataService.html":{},"components/WebcamComponent.html":{}}}],["deg",{"_index":704,"title":{},"body":{"components/GraphsComponent.html":{}}}],["degrees",{"_index":280,"title":{},"body":{"injectables/AdminpanelDataService.html":{},"interfaces/BatteryData.html":{},"interfaces/RaspberryData.html":{},"interfaces/SolarData.html":{},"interfaces/TemperatureData.html":{},"interfaces/VolumeData.html":{},"injectables/WeatherDataService.html":{},"interfaces/WindData.html":{}}}],["den",{"_index":578,"title":{},"body":{"components/GraphsComponent.html":{}}}],["dependencies",{"_index":298,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"dependencies.html":{},"overview.html":{}}}],["der",{"_index":545,"title":{},"body":{"components/GraphsComponent.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["des",{"_index":568,"title":{},"body":{"components/GraphsComponent.html":{}}}],["description",{"_index":564,"title":{},"body":{"components/GraphsComponent.html":{}}}],["destroy",{"_index":832,"title":{},"body":{"classes/NgbdDropdownBasic.html":{},"components/WebcamComponent.html":{}}}],["dev",{"_index":1046,"title":{},"body":{"index.html":{}}}],["development",{"_index":1041,"title":{},"body":{"index.html":{}}}],["devkit/schematics",{"_index":1005,"title":{},"body":{"dependencies.html":{}}}],["diagramchange(event",{"_index":1154,"title":{},"body":{"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["dianame",{"_index":1210,"title":{},"body":{"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["die",{"_index":551,"title":{},"body":{"components/GraphsComponent.html":{},"components/WebcamComponent.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["dies",{"_index":935,"title":{},"body":{"components/WebcamComponent.html":{}}}],["digit",{"_index":610,"title":{},"body":{"components/GraphsComponent.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["digit',day:'2",{"_index":607,"title":{},"body":{"components/GraphsComponent.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["digit',hour:'2",{"_index":608,"title":{},"body":{"components/GraphsComponent.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["digit',minute:'2",{"_index":609,"title":{},"body":{"components/GraphsComponent.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["direction",{"_index":896,"title":{},"body":{"interfaces/TemperatureData.html":{},"injectables/WeatherDataService.html":{},"interfaces/WindData.html":{}}}],["directions",{"_index":770,"title":{},"body":{"components/GraphsComponent.html":{}}}],["directive",{"_index":163,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/GraphsComponent.html":{},"components/WebcamComponent.html":{}}}],["directives",{"_index":175,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/GraphsComponent.html":{},"components/WebcamComponent.html":{}}}],["directive|pipe|service|class|guard|interface|enum|module",{"_index":1056,"title":{},"body":{"index.html":{}}}],["directory",{"_index":1061,"title":{},"body":{"index.html":{}}}],["dirhours",{"_index":706,"title":{},"body":{"components/GraphsComponent.html":{}}}],["dirhours[i",{"_index":708,"title":{},"body":{"components/GraphsComponent.html":{}}}],["display",{"_index":114,"title":{},"body":{"components/AdminComponent.html":{},"components/GraphsComponent.html":{},"components/WebcamComponent.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["displayedlogcolumns",{"_index":1185,"title":{},"body":{"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["displayedsensorcolumns",{"_index":1187,"title":{},"body":{"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["dist",{"_index":1060,"title":{},"body":{"index.html":{}}}],["document",{"_index":933,"title":{},"body":{"components/WebcamComponent.html":{}}}],["document.getelementbyid(\"volsum\").innerhtml",{"_index":1239,"title":{},"body":{"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["document.getelementbyid('elecchart",{"_index":1214,"title":{},"body":{"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["document.getelementbyid(i",{"_index":700,"title":{},"body":{"components/GraphsComponent.html":{}}}],["document.getelementbyid(id",{"_index":705,"title":{},"body":{"components/GraphsComponent.html":{}}}],["documentation",{"_index":973,"title":{},"body":{"coverage.html":{}}}],["dom",{"_index":7,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/GraphsComponent.html":{},"components/WebcamComponent.html":{}}}],["draft",{"_index":289,"title":{},"body":{"components/AppComponent.html":{}}}],["dragdropmodule",{"_index":341,"title":{},"body":{"modules/AppModule.html":{}}}],["drop",{"_index":343,"title":{},"body":{"modules/AppModule.html":{}}}],["duration",{"_index":1144,"title":{},"body":{"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["dynamic",{"_index":1014,"title":{},"body":{"dependencies.html":{}}}],["e2e",{"_index":1072,"title":{},"body":{"index.html":{}}}],["e2e/src/app.po.ts",{"_index":441,"title":{},"body":{"classes/AppPage.html":{},"coverage.html":{}}}],["e2e/src/app.po.ts:4",{"_index":445,"title":{},"body":{"classes/AppPage.html":{}}}],["e2e/src/app.po.ts:8",{"_index":444,"title":{},"body":{"classes/AppPage.html":{}}}],["ein",{"_index":950,"title":{},"body":{"components/WebcamComponent.html":{}}}],["einem",{"_index":947,"title":{},"body":{"components/WebcamComponent.html":{}}}],["einen",{"_index":555,"title":{},"body":{"components/GraphsComponent.html":{}}}],["einzelnen",{"_index":1242,"title":{},"body":{"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["element",{"_index":162,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"classes/AppPage.html":{},"components/GraphsComponent.html":{},"components/WebcamComponent.html":{}}}],["element(by.css('app",{"_index":449,"title":{},"body":{"classes/AppPage.html":{}}}],["end",{"_index":231,"title":{},"body":{"injectables/AdminpanelDataService.html":{},"injectables/WeatherDataService.html":{},"index.html":{}}}],["end.setdate(date.getdate()+1",{"_index":796,"title":{},"body":{"interfaces/ImageData.html":{},"injectables/ImageService.html":{}}}],["end=new",{"_index":795,"title":{},"body":{"interfaces/ImageData.html":{},"injectables/ImageService.html":{}}}],["enddate",{"_index":725,"title":{},"body":{"components/GraphsComponent.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["enddate).subscribe((data",{"_index":728,"title":{},"body":{"components/GraphsComponent.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["enddateevents",{"_index":504,"title":{},"body":{"components/GraphsComponent.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["enddatum",{"_index":743,"title":{},"body":{"components/GraphsComponent.html":{}}}],["endpickform,.applydates,.startpickform",{"_index":780,"title":{},"body":{"components/GraphsComponent.html":{}}}],["endstring",{"_index":723,"title":{},"body":{"components/GraphsComponent.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["environment",{"_index":997,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["error",{"_index":81,"title":{},"body":{"components/AdminComponent.html":{},"injectables/AdminService.html":{},"interfaces/AuthToken.html":{}}}],["errors",{"_index":25,"title":{},"body":{"components/AdminComponent.html":{}}}],["erw",{"_index":741,"title":{},"body":{"components/GraphsComponent.html":{}}}],["erweiterten",{"_index":576,"title":{},"body":{"components/GraphsComponent.html":{}}}],["event",{"_index":536,"title":{},"body":{"components/GraphsComponent.html":{},"components/WebcamComponent.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["event.target.innerwidth",{"_index":729,"title":{},"body":{"components/GraphsComponent.html":{}}}],["event.value",{"_index":1156,"title":{},"body":{"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["eventhandles",{"_index":712,"title":{},"body":{"components/GraphsComponent.html":{},"classes/NgbdDropdownBasic.html":{},"components/WebcamComponent.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["example",{"_index":853,"title":{},"body":{"classes/NgbdDropdownBasic.html":{},"components/WebcamComponent.html":{}}}],["execute",{"_index":1069,"title":{},"body":{"index.html":{}}}],["expansion",{"_index":970,"title":{},"body":{"components/WebcamComponent.html":{}}}],["expired",{"_index":487,"title":{},"body":{"injectables/AuthService.html":{}}}],["export",{"_index":70,"title":{},"body":{"components/AdminComponent.html":{},"injectables/AdminService.html":{},"injectables/AdminpanelDataService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuardService.html":{},"injectables/AuthService.html":{},"interfaces/AuthToken.html":{},"interfaces/BatteryData.html":{},"components/GraphsComponent.html":{},"interfaces/ImageData.html":{},"injectables/ImageService.html":{},"classes/NgbdDropdownBasic.html":{},"interfaces/RaspberryData.html":{},"interfaces/SolarData.html":{},"interfaces/TemperatureData.html":{},"interfaces/VolumeData.html":{},"injectables/WeatherDataService.html":{},"components/WebcamComponent.html":{},"interfaces/WindData.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["exports",{"_index":302,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"overview.html":{}}}],["extendedmodestatus",{"_index":505,"title":{},"body":{"components/GraphsComponent.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["extra",{"_index":130,"title":{},"body":{"components/AdminComponent.html":{}}}],["f44336",{"_index":141,"title":{},"body":{"components/AdminComponent.html":{}}}],["false",{"_index":82,"title":{},"body":{"components/AdminComponent.html":{},"guards/AuthGuardService.html":{},"injectables/AuthService.html":{},"components/GraphsComponent.html":{},"classes/NgbdDropdownBasic.html":{},"components/WebcamComponent.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{},"miscellaneous/variables.html":{}}}],["fehlgeschlagen",{"_index":98,"title":{},"body":{"components/AdminComponent.html":{}}}],["ff0000",{"_index":1130,"title":{},"body":{"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["field",{"_index":329,"title":{},"body":{"modules/AppModule.html":{}}}],["file",{"_index":9,"title":{},"body":{"components/AdminComponent.html":{},"injectables/AdminService.html":{},"injectables/AdminpanelDataService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuardService.html":{},"injectables/AuthService.html":{},"interfaces/AuthToken.html":{},"interfaces/BatteryData.html":{},"components/GraphsComponent.html":{},"interfaces/ImageData.html":{},"injectables/ImageService.html":{},"classes/NgbdDropdownBasic.html":{},"interfaces/RaspberryData.html":{},"interfaces/SolarData.html":{},"interfaces/TemperatureData.html":{},"interfaces/VolumeData.html":{},"injectables/WeatherDataService.html":{},"components/WebcamComponent.html":{},"interfaces/WindData.html":{},"coverage.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["files",{"_index":1051,"title":{},"body":{"index.html":{}}}],["fill",{"_index":616,"title":{},"body":{"components/GraphsComponent.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["firstmonthday",{"_index":1165,"title":{},"body":{"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["flag",{"_index":1063,"title":{},"body":{"index.html":{}}}],["flex",{"_index":126,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/GraphsComponent.html":{}}}],["float",{"_index":148,"title":{},"body":{"components/AdminComponent.html":{},"components/GraphsComponent.html":{}}}],["font",{"_index":762,"title":{},"body":{"components/GraphsComponent.html":{},"components/WebcamComponent.html":{}}}],["fontsize",{"_index":1141,"title":{},"body":{"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["forgot",{"_index":146,"title":{},"body":{"components/AdminComponent.html":{}}}],["formatdate",{"_index":213,"title":{},"body":{"injectables/AdminpanelDataService.html":{},"injectables/ImageService.html":{},"injectables/WeatherDataService.html":{}}}],["formatdate(date",{"_index":223,"title":{},"body":{"injectables/AdminpanelDataService.html":{},"interfaces/BatteryData.html":{},"interfaces/ImageData.html":{},"injectables/ImageService.html":{},"interfaces/RaspberryData.html":{},"interfaces/SolarData.html":{},"interfaces/TemperatureData.html":{},"interfaces/VolumeData.html":{},"injectables/WeatherDataService.html":{},"interfaces/WindData.html":{}}}],["formsmodule",{"_index":337,"title":{},"body":{"modules/AppModule.html":{}}}],["frontend",{"_index":1035,"title":{},"body":{"index.html":{}}}],["full",{"_index":99,"title":{},"body":{"components/AdminComponent.html":{}}}],["further",{"_index":1073,"title":{},"body":{"index.html":{}}}],["für",{"_index":1106,"title":{},"body":{"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["gallerizemodule",{"_index":435,"title":{},"body":{"modules/AppModule.html":{}}}],["gallery",{"_index":815,"title":{},"body":{"classes/NgbdDropdownBasic.html":{},"components/WebcamComponent.html":{},"dependencies.html":{}}}],["gallery,public",{"_index":836,"title":{},"body":{"classes/NgbdDropdownBasic.html":{},"components/WebcamComponent.html":{}}}],["gallery/core",{"_index":432,"title":{},"body":{"modules/AppModule.html":{},"classes/NgbdDropdownBasic.html":{},"components/WebcamComponent.html":{},"dependencies.html":{}}}],["gallery/gallerize",{"_index":436,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["gallery/lightbox",{"_index":434,"title":{},"body":{"modules/AppModule.html":{},"classes/NgbdDropdownBasic.html":{},"components/WebcamComponent.html":{},"dependencies.html":{}}}],["galleryid",{"_index":872,"title":{},"body":{"classes/NgbdDropdownBasic.html":{},"components/WebcamComponent.html":{}}}],["galleryitem",{"_index":816,"title":{},"body":{"classes/NgbdDropdownBasic.html":{},"components/WebcamComponent.html":{}}}],["gallerymodule",{"_index":430,"title":{},"body":{"modules/AppModule.html":{}}}],["gefetchten",{"_index":552,"title":{},"body":{"components/GraphsComponent.html":{}}}],["generate",{"_index":1054,"title":{},"body":{"index.html":{}}}],["generated",{"_index":1037,"title":{},"body":{"index.html":{}}}],["generiert",{"_index":554,"title":{},"body":{"components/GraphsComponent.html":{}}}],["gestern",{"_index":941,"title":{},"body":{"components/WebcamComponent.html":{}}}],["getbatterydata",{"_index":214,"title":{},"body":{"injectables/AdminpanelDataService.html":{}}}],["getbatterydata(time",{"_index":226,"title":{},"body":{"injectables/AdminpanelDataService.html":{},"interfaces/BatteryData.html":{},"interfaces/RaspberryData.html":{},"interfaces/SolarData.html":{},"interfaces/VolumeData.html":{}}}],["getbatterydataframe",{"_index":215,"title":{},"body":{"injectables/AdminpanelDataService.html":{}}}],["getbatterydataframe(start",{"_index":230,"title":{},"body":{"injectables/AdminpanelDataService.html":{}}}],["getbatterydataframe(start:date,end:date",{"_index":270,"title":{},"body":{"injectables/AdminpanelDataService.html":{},"interfaces/BatteryData.html":{},"interfaces/RaspberryData.html":{},"interfaces/SolarData.html":{},"interfaces/VolumeData.html":{}}}],["getbatterydataset",{"_index":1226,"title":{},"body":{"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["getdateimages",{"_index":798,"title":{},"body":{"injectables/ImageService.html":{}}}],["getdateimages(date",{"_index":801,"title":{},"body":{"injectables/ImageService.html":{}}}],["getdateimages(date:date",{"_index":794,"title":{},"body":{"interfaces/ImageData.html":{},"injectables/ImageService.html":{}}}],["getraspberrydata",{"_index":216,"title":{},"body":{"injectables/AdminpanelDataService.html":{}}}],["getraspberrydata(time",{"_index":234,"title":{},"body":{"injectables/AdminpanelDataService.html":{},"interfaces/BatteryData.html":{},"interfaces/RaspberryData.html":{},"interfaces/SolarData.html":{},"interfaces/VolumeData.html":{}}}],["getraspberrydataframe",{"_index":217,"title":{},"body":{"injectables/AdminpanelDataService.html":{}}}],["getraspberrydataframe(start",{"_index":236,"title":{},"body":{"injectables/AdminpanelDataService.html":{}}}],["getraspberrydataframe(start:date,end:date",{"_index":272,"title":{},"body":{"injectables/AdminpanelDataService.html":{},"interfaces/BatteryData.html":{},"interfaces/RaspberryData.html":{},"interfaces/SolarData.html":{},"interfaces/VolumeData.html":{}}}],["getraspberrydataset",{"_index":1232,"title":{},"body":{"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["getrecentimages",{"_index":799,"title":{},"body":{"injectables/ImageService.html":{}}}],["getrecentvalues",{"_index":522,"title":{},"body":{"components/GraphsComponent.html":{}}}],["getrecentwind",{"_index":893,"title":{},"body":{"interfaces/TemperatureData.html":{},"injectables/WeatherDataService.html":{},"interfaces/WindData.html":{}}}],["getsolardata",{"_index":218,"title":{},"body":{"injectables/AdminpanelDataService.html":{}}}],["getsolardata(time",{"_index":238,"title":{},"body":{"injectables/AdminpanelDataService.html":{}}}],["getsolardataframe",{"_index":219,"title":{},"body":{"injectables/AdminpanelDataService.html":{}}}],["getsolardataframe(start",{"_index":240,"title":{},"body":{"injectables/AdminpanelDataService.html":{}}}],["getsolardataframe(start:date,end:date",{"_index":268,"title":{},"body":{"injectables/AdminpanelDataService.html":{},"interfaces/BatteryData.html":{},"interfaces/RaspberryData.html":{},"interfaces/SolarData.html":{},"interfaces/VolumeData.html":{}}}],["getsolardataset",{"_index":1222,"title":{},"body":{"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["gettemperatures",{"_index":897,"title":{},"body":{"injectables/WeatherDataService.html":{}}}],["gettemperatures(time",{"_index":902,"title":{},"body":{"injectables/WeatherDataService.html":{}}}],["gettemperaturesdataframe",{"_index":898,"title":{},"body":{"injectables/WeatherDataService.html":{}}}],["gettemperaturesdataframe(start",{"_index":903,"title":{},"body":{"injectables/WeatherDataService.html":{}}}],["gettemperaturesdataframe(start:date,end:date",{"_index":891,"title":{},"body":{"interfaces/TemperatureData.html":{},"injectables/WeatherDataService.html":{},"interfaces/WindData.html":{}}}],["getting",{"_index":1032,"title":{"index.html":{}},"body":{}}],["gettitletext",{"_index":442,"title":{},"body":{"classes/AppPage.html":{}}}],["gettodayimages",{"_index":788,"title":{},"body":{"interfaces/ImageData.html":{},"injectables/ImageService.html":{}}}],["gettoken",{"_index":31,"title":{},"body":{"components/AdminComponent.html":{}}}],["getvolumedata",{"_index":220,"title":{},"body":{"injectables/AdminpanelDataService.html":{}}}],["getvolumedata(time",{"_index":242,"title":{},"body":{"injectables/AdminpanelDataService.html":{},"interfaces/BatteryData.html":{},"interfaces/RaspberryData.html":{},"interfaces/SolarData.html":{},"interfaces/VolumeData.html":{}}}],["getvolumedataframe",{"_index":221,"title":{},"body":{"injectables/AdminpanelDataService.html":{}}}],["getvolumedataframe(start",{"_index":244,"title":{},"body":{"injectables/AdminpanelDataService.html":{}}}],["getvolumedataframe(start:date,end:date",{"_index":273,"title":{},"body":{"injectables/AdminpanelDataService.html":{},"interfaces/BatteryData.html":{},"interfaces/RaspberryData.html":{},"interfaces/SolarData.html":{},"interfaces/VolumeData.html":{}}}],["getvolumedataset",{"_index":1237,"title":{},"body":{"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["getwinddata",{"_index":899,"title":{},"body":{"injectables/WeatherDataService.html":{}}}],["getwinddata(time",{"_index":887,"title":{},"body":{"interfaces/TemperatureData.html":{},"injectables/WeatherDataService.html":{},"interfaces/WindData.html":{}}}],["getwinddataframe",{"_index":900,"title":{},"body":{"injectables/WeatherDataService.html":{}}}],["getwinddataframe(start",{"_index":905,"title":{},"body":{"injectables/WeatherDataService.html":{}}}],["getwinddataframe(start:date,end:date",{"_index":889,"title":{},"body":{"interfaces/TemperatureData.html":{},"injectables/WeatherDataService.html":{},"interfaces/WindData.html":{}}}],["getyesterdayimages",{"_index":790,"title":{},"body":{"interfaces/ImageData.html":{},"injectables/ImageService.html":{}}}],["gibt",{"_index":1105,"title":{},"body":{"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["go",{"_index":1076,"title":{},"body":{"index.html":{}}}],["graph",{"_index":1081,"title":{},"body":{"modules.html":{}}}],["graphen",{"_index":291,"title":{},"body":{"components/AppComponent.html":{},"components/GraphsComponent.html":{}}}],["graphs",{"_index":496,"title":{},"body":{"components/GraphsComponent.html":{}}}],["graphs'},{'name",{"_index":172,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/GraphsComponent.html":{},"components/WebcamComponent.html":{}}}],["graphs.component.html",{"_index":498,"title":{},"body":{"components/GraphsComponent.html":{}}}],["graphs.component.scss",{"_index":497,"title":{},"body":{"components/GraphsComponent.html":{}}}],["graphs/graphs.component",{"_index":332,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["graphscomponent",{"_index":171,"title":{"components/GraphsComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/GraphsComponent.html":{},"components/WebcamComponent.html":{},"coverage.html":{},"overview.html":{}}}],["guard",{"_index":461,"title":{"guards/AuthGuardService.html":{}},"body":{"coverage.html":{},"overview.html":{}}}],["guard.service",{"_index":429,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["guard.service.ts",{"_index":464,"title":{},"body":{"guards/AuthGuardService.html":{},"coverage.html":{}}}],["guard.service.ts:6",{"_index":468,"title":{},"body":{"guards/AuthGuardService.html":{}}}],["guard.service.ts:8",{"_index":469,"title":{},"body":{"guards/AuthGuardService.html":{}}}],["guards",{"_index":462,"title":{},"body":{"guards/AuthGuardService.html":{}}}],["h1",{"_index":773,"title":{},"body":{"components/GraphsComponent.html":{}}}],["hammerjs",{"_index":819,"title":{},"body":{"classes/NgbdDropdownBasic.html":{},"components/WebcamComponent.html":{},"dependencies.html":{}}}],["handler",{"_index":588,"title":{},"body":{"components/GraphsComponent.html":{}}}],["height",{"_index":758,"title":{},"body":{"components/GraphsComponent.html":{},"components/WebcamComponent.html":{}}}],["height:100",{"_index":747,"title":{},"body":{"components/GraphsComponent.html":{}}}],["height:55",{"_index":769,"title":{},"body":{"components/GraphsComponent.html":{}}}],["height:auto",{"_index":753,"title":{},"body":{"components/GraphsComponent.html":{}}}],["help",{"_index":1074,"title":{},"body":{"index.html":{}}}],["heute",{"_index":934,"title":{},"body":{"components/WebcamComponent.html":{}}}],["hidden",{"_index":1107,"title":{},"body":{"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["hover",{"_index":1145,"title":{},"body":{"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["html",{"_index":161,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/GraphsComponent.html":{},"components/WebcamComponent.html":{}}}],["http",{"_index":184,"title":{},"body":{"injectables/AdminService.html":{},"injectables/AdminpanelDataService.html":{},"interfaces/AuthToken.html":{},"interfaces/BatteryData.html":{},"interfaces/ImageData.html":{},"injectables/ImageService.html":{},"interfaces/RaspberryData.html":{},"interfaces/SolarData.html":{},"interfaces/TemperatureData.html":{},"interfaces/VolumeData.html":{},"injectables/WeatherDataService.html":{},"interfaces/WindData.html":{}}}],["http://127.0.0.1:8000/api",{"_index":885,"title":{},"body":{"interfaces/TemperatureData.html":{},"injectables/WeatherDataService.html":{},"interfaces/WindData.html":{}}}],["http://localhost:4200",{"_index":1048,"title":{},"body":{"index.html":{}}}],["http://localhost:8000/api",{"_index":193,"title":{},"body":{"injectables/AdminService.html":{},"injectables/AdminpanelDataService.html":{},"interfaces/AuthToken.html":{},"interfaces/BatteryData.html":{},"interfaces/ImageData.html":{},"injectables/ImageService.html":{},"interfaces/RaspberryData.html":{},"interfaces/SolarData.html":{},"interfaces/VolumeData.html":{}}}],["httpclient",{"_index":187,"title":{},"body":{"injectables/AdminService.html":{},"injectables/AdminpanelDataService.html":{},"modules/AppModule.html":{},"interfaces/AuthToken.html":{},"interfaces/BatteryData.html":{},"interfaces/ImageData.html":{},"injectables/ImageService.html":{},"interfaces/RaspberryData.html":{},"interfaces/SolarData.html":{},"interfaces/TemperatureData.html":{},"interfaces/VolumeData.html":{},"injectables/WeatherDataService.html":{},"interfaces/WindData.html":{}}}],["httpclientmodule",{"_index":424,"title":{},"body":{"modules/AppModule.html":{}}}],["httperrorresponse",{"_index":196,"title":{},"body":{"injectables/AdminService.html":{},"interfaces/AuthToken.html":{}}}],["https://cdn.jsdelivr.net/npm/chart.js@2.9.3/dist/chart.min.js",{"_index":731,"title":{},"body":{"components/GraphsComponent.html":{}}}],["id",{"_index":275,"title":{},"body":{"injectables/AdminpanelDataService.html":{},"interfaces/BatteryData.html":{},"components/GraphsComponent.html":{},"interfaces/ImageData.html":{},"injectables/ImageService.html":{},"interfaces/RaspberryData.html":{},"interfaces/SolarData.html":{},"interfaces/TemperatureData.html":{},"interfaces/VolumeData.html":{},"injectables/WeatherDataService.html":{},"interfaces/WindData.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["identifier",{"_index":974,"title":{},"body":{"coverage.html":{}}}],["if(this.chart!=undefined",{"_index":1212,"title":{},"body":{"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["if(this.lastevent",{"_index":1251,"title":{},"body":{"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["if(this.tempchart!=undefined",{"_index":681,"title":{},"body":{"components/GraphsComponent.html":{}}}],["im",{"_index":1244,"title":{},"body":{"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["image",{"_index":425,"title":{},"body":{"modules/AppModule.html":{},"interfaces/ImageData.html":{},"injectables/ImageService.html":{},"classes/NgbdDropdownBasic.html":{},"components/WebcamComponent.html":{}}}],["image_size",{"_index":283,"title":{},"body":{"injectables/AdminpanelDataService.html":{},"interfaces/BatteryData.html":{},"interfaces/RaspberryData.html":{},"interfaces/SolarData.html":{},"interfaces/VolumeData.html":{}}}],["imagecontainer",{"_index":775,"title":{},"body":{"components/GraphsComponent.html":{}}}],["imagedata",{"_index":783,"title":{"interfaces/ImageData.html":{}},"body":{"interfaces/ImageData.html":{},"injectables/ImageService.html":{},"classes/NgbdDropdownBasic.html":{},"components/WebcamComponent.html":{},"coverage.html":{}}}],["imageitem",{"_index":817,"title":{},"body":{"classes/NgbdDropdownBasic.html":{},"components/WebcamComponent.html":{}}}],["imageitem({src:data.image,thumb:data.image",{"_index":857,"title":{},"body":{"classes/NgbdDropdownBasic.html":{},"components/WebcamComponent.html":{}}}],["imageone",{"_index":951,"title":{},"body":{"components/WebcamComponent.html":{}}}],["images/?start='+this.formatdate(today",{"_index":789,"title":{},"body":{"interfaces/ImageData.html":{},"injectables/ImageService.html":{}}}],["images/?start='+this.formatdate(yesterday)+'&end='+this.formatdate(today",{"_index":793,"title":{},"body":{"interfaces/ImageData.html":{},"injectables/ImageService.html":{}}}],["images/recent",{"_index":787,"title":{},"body":{"interfaces/ImageData.html":{},"injectables/ImageService.html":{}}}],["imageservice",{"_index":309,"title":{"injectables/ImageService.html":{}},"body":{"modules/AppModule.html":{},"interfaces/ImageData.html":{},"injectables/ImageService.html":{},"classes/NgbdDropdownBasic.html":{},"components/WebcamComponent.html":{},"coverage.html":{},"overview.html":{}}}],["imageservice,public",{"_index":835,"title":{},"body":{"classes/NgbdDropdownBasic.html":{},"components/WebcamComponent.html":{}}}],["imagesize",{"_index":846,"title":{},"body":{"classes/NgbdDropdownBasic.html":{},"components/WebcamComponent.html":{}}}],["img",{"_index":699,"title":{},"body":{"components/GraphsComponent.html":{},"components/WebcamComponent.html":{}}}],["img.style.transform",{"_index":701,"title":{},"body":{"components/GraphsComponent.html":{}}}],["imgtext",{"_index":958,"title":{},"body":{"components/WebcamComponent.html":{}}}],["implements",{"_index":11,"title":{},"body":{"components/AdminComponent.html":{},"guards/AuthGuardService.html":{},"components/GraphsComponent.html":{},"classes/NgbdDropdownBasic.html":{},"components/WebcamComponent.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["import",{"_index":64,"title":{},"body":{"components/AdminComponent.html":{},"injectables/AdminService.html":{},"injectables/AdminpanelDataService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuardService.html":{},"injectables/AuthService.html":{},"interfaces/AuthToken.html":{},"interfaces/BatteryData.html":{},"components/GraphsComponent.html":{},"interfaces/ImageData.html":{},"injectables/ImageService.html":{},"classes/NgbdDropdownBasic.html":{},"interfaces/RaspberryData.html":{},"interfaces/SolarData.html":{},"interfaces/TemperatureData.html":{},"interfaces/VolumeData.html":{},"injectables/WeatherDataService.html":{},"components/WebcamComponent.html":{},"interfaces/WindData.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["important",{"_index":969,"title":{},"body":{"components/WebcamComponent.html":{}}}],["imports",{"_index":315,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["index",{"_index":21,"title":{"index.html":{}},"body":{"components/AdminComponent.html":{},"injectables/AdminService.html":{},"injectables/AdminpanelDataService.html":{},"components/AppComponent.html":{},"classes/AppPage.html":{},"guards/AuthGuardService.html":{},"injectables/AuthService.html":{},"interfaces/AuthToken.html":{},"interfaces/BatteryData.html":{},"components/GraphsComponent.html":{},"interfaces/ImageData.html":{},"injectables/ImageService.html":{},"interfaces/RaspberryData.html":{},"interfaces/SolarData.html":{},"interfaces/TemperatureData.html":{},"interfaces/VolumeData.html":{},"injectables/WeatherDataService.html":{},"components/WebcamComponent.html":{},"interfaces/WindData.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AdminComponent.html":{},"injectables/AdminService.html":{},"injectables/AdminpanelDataService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuardService.html":{},"injectables/AuthService.html":{},"interfaces/AuthToken.html":{},"interfaces/BatteryData.html":{},"components/GraphsComponent.html":{},"interfaces/ImageData.html":{},"injectables/ImageService.html":{},"classes/NgbdDropdownBasic.html":{},"interfaces/RaspberryData.html":{},"interfaces/SolarData.html":{},"interfaces/TemperatureData.html":{},"interfaces/VolumeData.html":{},"injectables/WeatherDataService.html":{},"components/WebcamComponent.html":{},"interfaces/WindData.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["initdata",{"_index":1164,"title":{},"body":{"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["initialisiert",{"_index":550,"title":{},"body":{"components/GraphsComponent.html":{}}}],["injectable",{"_index":180,"title":{"injectables/AdminService.html":{},"injectables/AdminpanelDataService.html":{},"injectables/AuthService.html":{},"injectables/ImageService.html":{},"injectables/WeatherDataService.html":{}},"body":{"injectables/AdminService.html":{},"injectables/AdminpanelDataService.html":{},"guards/AuthGuardService.html":{},"injectables/AuthService.html":{},"interfaces/AuthToken.html":{},"interfaces/BatteryData.html":{},"interfaces/ImageData.html":{},"injectables/ImageService.html":{},"interfaces/RaspberryData.html":{},"interfaces/SolarData.html":{},"interfaces/TemperatureData.html":{},"interfaces/VolumeData.html":{},"injectables/WeatherDataService.html":{},"interfaces/WindData.html":{},"coverage.html":{}}}],["injectable({providedin",{"_index":471,"title":{},"body":{"guards/AuthGuardService.html":{}}}],["injectables",{"_index":181,"title":{},"body":{"injectables/AdminService.html":{},"injectables/AdminpanelDataService.html":{},"injectables/AuthService.html":{},"injectables/ImageService.html":{},"injectables/WeatherDataService.html":{},"overview.html":{}}}],["inline",{"_index":953,"title":{},"body":{"components/WebcamComponent.html":{}}}],["input",{"_index":597,"title":{},"body":{"components/GraphsComponent.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["input[type=password",{"_index":103,"title":{},"body":{"components/AdminComponent.html":{}}}],["input[type=text",{"_index":102,"title":{},"body":{"components/AdminComponent.html":{}}}],["inputs",{"_index":101,"title":{},"body":{"components/AdminComponent.html":{}}}],["interface",{"_index":207,"title":{"interfaces/AuthToken.html":{},"interfaces/BatteryData.html":{},"interfaces/ImageData.html":{},"interfaces/RaspberryData.html":{},"interfaces/SolarData.html":{},"interfaces/TemperatureData.html":{},"interfaces/VolumeData.html":{},"interfaces/WindData.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}},"body":{"injectables/AdminService.html":{},"injectables/AdminpanelDataService.html":{},"interfaces/AuthToken.html":{},"interfaces/BatteryData.html":{},"interfaces/ImageData.html":{},"injectables/ImageService.html":{},"interfaces/RaspberryData.html":{},"interfaces/SolarData.html":{},"interfaces/TemperatureData.html":{},"interfaces/VolumeData.html":{},"injectables/WeatherDataService.html":{},"interfaces/WindData.html":{},"coverage.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["interfaces",{"_index":493,"title":{},"body":{"interfaces/AuthToken.html":{},"interfaces/BatteryData.html":{},"interfaces/ImageData.html":{},"interfaces/RaspberryData.html":{},"interfaces/SolarData.html":{},"interfaces/TemperatureData.html":{},"interfaces/VolumeData.html":{},"interfaces/WindData.html":{},"overview.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["isauthenticated",{"_index":477,"title":{},"body":{"injectables/AuthService.html":{}}}],["items",{"_index":776,"title":{},"body":{"components/GraphsComponent.html":{}}}],["js",{"_index":1021,"title":{},"body":{"dependencies.html":{}}}],["justify",{"_index":127,"title":{},"body":{"components/AdminComponent.html":{},"components/GraphsComponent.html":{}}}],["jwt",{"_index":482,"title":{},"body":{"injectables/AuthService.html":{},"dependencies.html":{}}}],["jwthelper",{"_index":476,"title":{},"body":{"injectables/AuthService.html":{}}}],["jwthelperservice",{"_index":480,"title":{},"body":{"injectables/AuthService.html":{}}}],["karma",{"_index":1071,"title":{},"body":{"index.html":{}}}],["konnte",{"_index":86,"title":{},"body":{"components/AdminComponent.html":{}}}],["label",{"_index":612,"title":{},"body":{"components/GraphsComponent.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["labels",{"_index":604,"title":{},"body":{"components/GraphsComponent.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["labelstring",{"_index":1149,"title":{},"body":{"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["ladestrom",{"_index":1101,"title":{},"body":{"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{},"miscellaneous/variables.html":{}}}],["lassen",{"_index":944,"title":{},"body":{"components/WebcamComponent.html":{}}}],["lastevent",{"_index":1104,"title":{},"body":{"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["lasthourswind",{"_index":506,"title":{},"body":{"components/GraphsComponent.html":{}}}],["lastleistung",{"_index":1135,"title":{},"body":{"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["lastmonthday",{"_index":1168,"title":{},"body":{"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["lastspannung",{"_index":1133,"title":{},"body":{"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["lazy",{"_index":849,"title":{},"body":{"classes/NgbdDropdownBasic.html":{},"components/WebcamComponent.html":{}}}],["left",{"_index":113,"title":{},"body":{"components/AdminComponent.html":{},"components/GraphsComponent.html":{},"components/WebcamComponent.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["legend",{"_index":160,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/GraphsComponent.html":{},"components/WebcamComponent.html":{},"overview.html":{}}}],["leistung",{"_index":1121,"title":{},"body":{"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["leistungsaufnahme",{"_index":1100,"title":{},"body":{"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{},"miscellaneous/variables.html":{}}}],["letzten",{"_index":737,"title":{},"body":{"components/GraphsComponent.html":{}}}],["lightbox",{"_index":818,"title":{},"body":{"classes/NgbdDropdownBasic.html":{},"components/WebcamComponent.html":{}}}],["lightboxmodule",{"_index":433,"title":{},"body":{"modules/AppModule.html":{}}}],["lightgray",{"_index":751,"title":{},"body":{"components/GraphsComponent.html":{}}}],["line",{"_index":1219,"title":{},"body":{"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["list",{"_index":379,"title":{},"body":{"modules/AppModule.html":{}}}],["loaddatepics",{"_index":873,"title":{},"body":{"classes/NgbdDropdownBasic.html":{},"components/WebcamComponent.html":{}}}],["loadingstrategy",{"_index":848,"title":{},"body":{"classes/NgbdDropdownBasic.html":{},"components/WebcamComponent.html":{}}}],["loadrecentpics",{"_index":855,"title":{},"body":{"classes/NgbdDropdownBasic.html":{},"components/WebcamComponent.html":{}}}],["loadtodaypics",{"_index":858,"title":{},"body":{"classes/NgbdDropdownBasic.html":{},"components/WebcamComponent.html":{}}}],["loadyesterdaypics",{"_index":864,"title":{},"body":{"classes/NgbdDropdownBasic.html":{},"components/WebcamComponent.html":{}}}],["localstorage.getitem('weathertoken",{"_index":483,"title":{},"body":{"injectables/AuthService.html":{}}}],["localstorage.removeitem(\"weathertoken",{"_index":92,"title":{},"body":{"components/AdminComponent.html":{}}}],["localstorage.setitem(\"weathertoken\",this.token[\"access",{"_index":91,"title":{},"body":{"components/AdminComponent.html":{}}}],["logdata",{"_index":989,"title":{},"body":{"coverage.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{},"miscellaneous/variables.html":{}}}],["login",{"_index":97,"title":{},"body":{"components/AdminComponent.html":{}}}],["loginerror",{"_index":26,"title":{},"body":{"components/AdminComponent.html":{}}}],["logtabledata",{"_index":1186,"title":{},"body":{"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["logtoken",{"_index":32,"title":{},"body":{"components/AdminComponent.html":{}}}],["logtoken(tok",{"_index":47,"title":{},"body":{"components/AdminComponent.html":{}}}],["lädt",{"_index":569,"title":{},"body":{"components/GraphsComponent.html":{}}}],["m/s",{"_index":628,"title":{},"body":{"components/GraphsComponent.html":{}}}],["margin",{"_index":108,"title":{},"body":{"components/AdminComponent.html":{},"components/GraphsComponent.html":{},"components/WebcamComponent.html":{}}}],["margin:0.25em",{"_index":781,"title":{},"body":{"components/GraphsComponent.html":{}}}],["mat",{"_index":122,"title":{},"body":{"components/AdminComponent.html":{},"components/GraphsComponent.html":{},"components/WebcamComponent.html":{}}}],["matautocompletemodule",{"_index":354,"title":{},"body":{"modules/AppModule.html":{}}}],["matbadgemodule",{"_index":356,"title":{},"body":{"modules/AppModule.html":{}}}],["matbottomsheetmodule",{"_index":358,"title":{},"body":{"modules/AppModule.html":{}}}],["matbuttonmodule",{"_index":361,"title":{},"body":{"modules/AppModule.html":{}}}],["matbuttontogglechange",{"_index":1088,"title":{},"body":{"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["matbuttontogglemodule",{"_index":363,"title":{},"body":{"modules/AppModule.html":{}}}],["matcardmodule",{"_index":323,"title":{},"body":{"modules/AppModule.html":{}}}],["matcheckboxmodule",{"_index":365,"title":{},"body":{"modules/AppModule.html":{}}}],["matching",{"_index":178,"title":{},"body":{"components/AdminComponent.html":{},"injectables/AdminService.html":{},"injectables/AdminpanelDataService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuardService.html":{},"injectables/AuthService.html":{},"interfaces/AuthToken.html":{},"interfaces/BatteryData.html":{},"interfaces/ImageData.html":{},"injectables/ImageService.html":{},"classes/NgbdDropdownBasic.html":{},"interfaces/RaspberryData.html":{},"interfaces/SolarData.html":{},"interfaces/TemperatureData.html":{},"interfaces/VolumeData.html":{},"injectables/WeatherDataService.html":{},"interfaces/WindData.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"interfaces/raspyActions.html":{},"routes.html":{},"interfaces/sensorActions.html":{},"miscellaneous/variables.html":{}}}],["matchipsmodule",{"_index":367,"title":{},"body":{"modules/AppModule.html":{}}}],["matdatepickerinputevent",{"_index":534,"title":{},"body":{"components/GraphsComponent.html":{},"classes/NgbdDropdownBasic.html":{},"components/WebcamComponent.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["matdatepickermodule",{"_index":325,"title":{},"body":{"modules/AppModule.html":{}}}],["matdialog",{"_index":814,"title":{},"body":{"classes/NgbdDropdownBasic.html":{},"components/WebcamComponent.html":{}}}],["matdialogmodule",{"_index":371,"title":{},"body":{"modules/AppModule.html":{}}}],["matdividermodule",{"_index":373,"title":{},"body":{"modules/AppModule.html":{}}}],["matexpansionmodule",{"_index":375,"title":{},"body":{"modules/AppModule.html":{}}}],["matformfieldmodule",{"_index":327,"title":{},"body":{"modules/AppModule.html":{}}}],["matgridlistmodule",{"_index":377,"title":{},"body":{"modules/AppModule.html":{}}}],["maticonmodule",{"_index":380,"title":{},"body":{"modules/AppModule.html":{}}}],["matinputmodule",{"_index":382,"title":{},"body":{"modules/AppModule.html":{}}}],["matlistmodule",{"_index":384,"title":{},"body":{"modules/AppModule.html":{}}}],["matmenumodule",{"_index":386,"title":{},"body":{"modules/AppModule.html":{}}}],["matnativedatemodule",{"_index":388,"title":{},"body":{"modules/AppModule.html":{}}}],["matpaginatormodule",{"_index":391,"title":{},"body":{"modules/AppModule.html":{}}}],["matprogressbarmodule",{"_index":393,"title":{},"body":{"modules/AppModule.html":{}}}],["matprogressspinnermodule",{"_index":396,"title":{},"body":{"modules/AppModule.html":{}}}],["matradiobutton",{"_index":655,"title":{},"body":{"components/GraphsComponent.html":{}}}],["matradiochange",{"_index":562,"title":{},"body":{"components/GraphsComponent.html":{}}}],["matradiomodule",{"_index":398,"title":{},"body":{"modules/AppModule.html":{}}}],["matripplemodule",{"_index":389,"title":{},"body":{"modules/AppModule.html":{}}}],["matselectmodule",{"_index":400,"title":{},"body":{"modules/AppModule.html":{}}}],["matsidenavmodule",{"_index":402,"title":{},"body":{"modules/AppModule.html":{}}}],["matslidermodule",{"_index":404,"title":{},"body":{"modules/AppModule.html":{}}}],["matslidetogglechange",{"_index":573,"title":{},"body":{"components/GraphsComponent.html":{}}}],["matslidetogglemodule",{"_index":406,"title":{},"body":{"modules/AppModule.html":{}}}],["matsnackbarmodule",{"_index":408,"title":{},"body":{"modules/AppModule.html":{}}}],["matsortmodule",{"_index":410,"title":{},"body":{"modules/AppModule.html":{}}}],["matsteppermodule",{"_index":369,"title":{},"body":{"modules/AppModule.html":{}}}],["mattablemodule",{"_index":412,"title":{},"body":{"modules/AppModule.html":{}}}],["mattabsmodule",{"_index":414,"title":{},"body":{"modules/AppModule.html":{}}}],["mattoolbarmodule",{"_index":416,"title":{},"body":{"modules/AppModule.html":{}}}],["mattooltipmodule",{"_index":418,"title":{},"body":{"modules/AppModule.html":{}}}],["mattreemodule",{"_index":420,"title":{},"body":{"modules/AppModule.html":{}}}],["max",{"_index":157,"title":{},"body":{"components/AdminComponent.html":{}}}],["md",{"_index":322,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["mdbbootstrapmodule",{"_index":320,"title":{},"body":{"modules/AppModule.html":{}}}],["mdbbootstrapmodule.forroot",{"_index":437,"title":{},"body":{"modules/AppModule.html":{}}}],["mdbootstrap",{"_index":1024,"title":{},"body":{"dependencies.html":{}}}],["measure_time",{"_index":278,"title":{},"body":{"injectables/AdminpanelDataService.html":{},"interfaces/BatteryData.html":{},"interfaces/RaspberryData.html":{},"interfaces/SolarData.html":{},"interfaces/TemperatureData.html":{},"interfaces/VolumeData.html":{},"injectables/WeatherDataService.html":{},"interfaces/WindData.html":{}}}],["measurement_time",{"_index":785,"title":{},"body":{"interfaces/ImageData.html":{},"injectables/ImageService.html":{}}}],["media",{"_index":155,"title":{},"body":{"components/AdminComponent.html":{}}}],["menu",{"_index":293,"title":{},"body":{"components/AppComponent.html":{}}}],["metadata",{"_index":13,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/GraphsComponent.html":{},"components/WebcamComponent.html":{}}}],["methods",{"_index":30,"title":{},"body":{"components/AdminComponent.html":{},"injectables/AdminService.html":{},"injectables/AdminpanelDataService.html":{},"classes/AppPage.html":{},"guards/AuthGuardService.html":{},"injectables/AuthService.html":{},"components/GraphsComponent.html":{},"injectables/ImageService.html":{},"injectables/WeatherDataService.html":{},"components/WebcamComponent.html":{}}}],["middle",{"_index":757,"title":{},"body":{"components/GraphsComponent.html":{}}}],["miscellaneous",{"_index":1254,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["module",{"_index":295,"title":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["modules",{"_index":297,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["modus",{"_index":577,"title":{},"body":{"components/GraphsComponent.html":{}}}],["month",{"_index":250,"title":{},"body":{"injectables/AdminpanelDataService.html":{},"interfaces/BatteryData.html":{},"interfaces/ImageData.html":{},"injectables/ImageService.html":{},"interfaces/RaspberryData.html":{},"interfaces/SolarData.html":{},"interfaces/TemperatureData.html":{},"interfaces/VolumeData.html":{},"injectables/WeatherDataService.html":{},"interfaces/WindData.html":{}}}],["month.length",{"_index":257,"title":{},"body":{"injectables/AdminpanelDataService.html":{},"interfaces/BatteryData.html":{},"interfaces/ImageData.html":{},"injectables/ImageService.html":{},"interfaces/RaspberryData.html":{},"interfaces/SolarData.html":{},"interfaces/TemperatureData.html":{},"interfaces/VolumeData.html":{},"injectables/WeatherDataService.html":{},"interfaces/WindData.html":{}}}],["more",{"_index":1075,"title":{},"body":{"index.html":{}}}],["name",{"_index":41,"title":{},"body":{"components/AdminComponent.html":{},"injectables/AdminService.html":{},"injectables/AdminpanelDataService.html":{},"components/AppComponent.html":{},"guards/AuthGuardService.html":{},"components/GraphsComponent.html":{},"injectables/ImageService.html":{},"injectables/WeatherDataService.html":{},"components/WebcamComponent.html":{},"index.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["navigate",{"_index":1047,"title":{},"body":{"index.html":{}}}],["navigateto",{"_index":443,"title":{},"body":{"classes/AppPage.html":{}}}],["neu",{"_index":547,"title":{},"body":{"components/GraphsComponent.html":{}}}],["neuen",{"_index":556,"title":{},"body":{"components/GraphsComponent.html":{}}}],["neuer",{"_index":540,"title":{},"body":{"components/GraphsComponent.html":{}}}],["new",{"_index":248,"title":{},"body":{"injectables/AdminpanelDataService.html":{},"injectables/AuthService.html":{},"interfaces/BatteryData.html":{},"components/GraphsComponent.html":{},"interfaces/ImageData.html":{},"injectables/ImageService.html":{},"classes/NgbdDropdownBasic.html":{},"interfaces/RaspberryData.html":{},"interfaces/SolarData.html":{},"interfaces/TemperatureData.html":{},"interfaces/VolumeData.html":{},"injectables/WeatherDataService.html":{},"components/WebcamComponent.html":{},"interfaces/WindData.html":{},"coverage.html":{},"index.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["ng",{"_index":1044,"title":{},"body":{"index.html":{}}}],["ngbddropdownbasic",{"_index":807,"title":{"classes/NgbdDropdownBasic.html":{}},"body":{"classes/NgbdDropdownBasic.html":{},"components/WebcamComponent.html":{},"coverage.html":{}}}],["ngmodule",{"_index":319,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["ngondestroy",{"_index":523,"title":{},"body":{"components/GraphsComponent.html":{},"classes/NgbdDropdownBasic.html":{},"components/WebcamComponent.html":{}}}],["ngoninit",{"_index":33,"title":{},"body":{"components/AdminComponent.html":{},"components/GraphsComponent.html":{},"classes/NgbdDropdownBasic.html":{},"components/WebcamComponent.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["ngx",{"_index":431,"title":{},"body":{"modules/AppModule.html":{},"classes/NgbdDropdownBasic.html":{},"components/WebcamComponent.html":{},"dependencies.html":{}}}],["nicht",{"_index":87,"title":{},"body":{"components/AdminComponent.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["none",{"_index":159,"title":{},"body":{"components/AdminComponent.html":{},"components/WebcamComponent.html":{}}}],["number",{"_index":227,"title":{},"body":{"injectables/AdminpanelDataService.html":{},"interfaces/BatteryData.html":{},"components/GraphsComponent.html":{},"interfaces/ImageData.html":{},"injectables/ImageService.html":{},"interfaces/RaspberryData.html":{},"interfaces/SolarData.html":{},"interfaces/TemperatureData.html":{},"interfaces/VolumeData.html":{},"injectables/WeatherDataService.html":{},"components/WebcamComponent.html":{},"interfaces/WindData.html":{}}}],["ob",{"_index":1108,"title":{},"body":{"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["object",{"_index":598,"title":{},"body":{"components/GraphsComponent.html":{},"miscellaneous/variables.html":{}}}],["observable",{"_index":810,"title":{},"body":{"classes/NgbdDropdownBasic.html":{},"components/WebcamComponent.html":{}}}],["oder",{"_index":1111,"title":{},"body":{"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["ok",{"_index":1095,"title":{},"body":{"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{},"miscellaneous/variables.html":{}}}],["onbtnchange",{"_index":524,"title":{},"body":{"components/GraphsComponent.html":{}}}],["onbtnchange(event",{"_index":561,"title":{},"body":{"components/GraphsComponent.html":{}}}],["onchange",{"_index":525,"title":{},"body":{"components/GraphsComponent.html":{}}}],["onchange(event",{"_index":572,"title":{},"body":{"components/GraphsComponent.html":{}}}],["onchanges,viewchild",{"_index":653,"title":{},"body":{"components/GraphsComponent.html":{}}}],["ondestroy",{"_index":495,"title":{},"body":{"components/GraphsComponent.html":{}}}],["onimageload",{"_index":526,"title":{},"body":{"components/GraphsComponent.html":{}}}],["onimageload(i",{"_index":580,"title":{},"body":{"components/GraphsComponent.html":{}}}],["oninit",{"_index":12,"title":{},"body":{"components/AdminComponent.html":{},"components/GraphsComponent.html":{},"classes/NgbdDropdownBasic.html":{},"components/WebcamComponent.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["onresize",{"_index":527,"title":{},"body":{"components/GraphsComponent.html":{}}}],["onresize(event",{"_index":585,"title":{},"body":{"components/GraphsComponent.html":{}}}],["openlightbox",{"_index":910,"title":{},"body":{"components/WebcamComponent.html":{}}}],["openlightbox(index",{"_index":919,"title":{},"body":{"components/WebcamComponent.html":{}}}],["openlightbox(index:number,galleryid:string",{"_index":870,"title":{},"body":{"classes/NgbdDropdownBasic.html":{},"components/WebcamComponent.html":{}}}],["optional",{"_index":43,"title":{},"body":{"components/AdminComponent.html":{},"injectables/AdminService.html":{},"injectables/AdminpanelDataService.html":{},"guards/AuthGuardService.html":{},"components/GraphsComponent.html":{},"injectables/ImageService.html":{},"injectables/WeatherDataService.html":{},"components/WebcamComponent.html":{}}}],["options",{"_index":1220,"title":{},"body":{"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["options:this.chartoptions",{"_index":689,"title":{},"body":{"components/GraphsComponent.html":{}}}],["out",{"_index":313,"title":{},"body":{"modules/AppModule.html":{},"index.html":{},"overview.html":{}}}],["overview",{"_index":1083,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["p0sktxgnn6dxz5rw3prvzz59pk6ei6oq",{"_index":489,"title":{},"body":{"injectables/AuthService.html":{}}}],["package",{"_index":1004,"title":{"dependencies.html":{}},"body":{}}],["padding",{"_index":105,"title":{},"body":{"components/AdminComponent.html":{}}}],["padding:0.5em",{"_index":766,"title":{},"body":{"components/GraphsComponent.html":{}}}],["panel",{"_index":971,"title":{},"body":{"components/WebcamComponent.html":{}}}],["panelopenstate",{"_index":833,"title":{},"body":{"classes/NgbdDropdownBasic.html":{},"components/WebcamComponent.html":{}}}],["param",{"_index":696,"title":{},"body":{"components/GraphsComponent.html":{}}}],["parameters",{"_index":39,"title":{},"body":{"components/AdminComponent.html":{},"injectables/AdminService.html":{},"injectables/AdminpanelDataService.html":{},"guards/AuthGuardService.html":{},"components/GraphsComponent.html":{},"injectables/ImageService.html":{},"injectables/WeatherDataService.html":{},"components/WebcamComponent.html":{}}}],["password",{"_index":27,"title":{},"body":{"components/AdminComponent.html":{}}}],["password\":pwd",{"_index":206,"title":{},"body":{"injectables/AdminService.html":{},"interfaces/AuthToken.html":{}}}],["passwort",{"_index":95,"title":{},"body":{"components/AdminComponent.html":{}}}],["path",{"_index":458,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["photovoltaik",{"_index":1099,"title":{},"body":{"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{},"miscellaneous/variables.html":{}}}],["pick",{"_index":745,"title":{},"body":{"components/GraphsComponent.html":{}}}],["pipe(takeuntil(this.destroy",{"_index":841,"title":{},"body":{"classes/NgbdDropdownBasic.html":{},"components/WebcamComponent.html":{}}}],["pointer",{"_index":964,"title":{},"body":{"components/WebcamComponent.html":{}}}],["portalmodule",{"_index":344,"title":{},"body":{"modules/AppModule.html":{}}}],["position",{"_index":760,"title":{},"body":{"components/GraphsComponent.html":{},"components/WebcamComponent.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["private",{"_index":72,"title":{},"body":{"components/AdminComponent.html":{},"injectables/AdminService.html":{},"injectables/AdminpanelDataService.html":{},"interfaces/AuthToken.html":{},"interfaces/BatteryData.html":{},"interfaces/ImageData.html":{},"injectables/ImageService.html":{},"interfaces/RaspberryData.html":{},"interfaces/SolarData.html":{},"interfaces/TemperatureData.html":{},"interfaces/VolumeData.html":{},"injectables/WeatherDataService.html":{},"interfaces/WindData.html":{}}}],["prod",{"_index":1062,"title":{},"body":{"index.html":{}}}],["production",{"_index":1064,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["project",{"_index":1036,"title":{},"body":{"index.html":{}}}],["promise",{"_index":448,"title":{},"body":{"classes/AppPage.html":{}}}],["properties",{"_index":22,"title":{},"body":{"components/AdminComponent.html":{},"injectables/AdminService.html":{},"injectables/AdminpanelDataService.html":{},"components/AppComponent.html":{},"guards/AuthGuardService.html":{},"injectables/AuthService.html":{},"interfaces/AuthToken.html":{},"interfaces/BatteryData.html":{},"components/GraphsComponent.html":{},"interfaces/ImageData.html":{},"injectables/ImageService.html":{},"interfaces/RaspberryData.html":{},"interfaces/SolarData.html":{},"interfaces/TemperatureData.html":{},"interfaces/VolumeData.html":{},"injectables/WeatherDataService.html":{},"components/WebcamComponent.html":{},"interfaces/WindData.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["protractor",{"_index":446,"title":{},"body":{"classes/AppPage.html":{},"index.html":{}}}],["providedin",{"_index":200,"title":{},"body":{"injectables/AdminService.html":{},"injectables/AdminpanelDataService.html":{},"injectables/AuthService.html":{},"interfaces/AuthToken.html":{},"interfaces/BatteryData.html":{},"interfaces/ImageData.html":{},"injectables/ImageService.html":{},"interfaces/RaspberryData.html":{},"interfaces/SolarData.html":{},"interfaces/TemperatureData.html":{},"interfaces/VolumeData.html":{},"injectables/WeatherDataService.html":{},"interfaces/WindData.html":{}}}],["providers",{"_index":301,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"overview.html":{}}}],["providetoken",{"_index":185,"title":{},"body":{"injectables/AdminService.html":{}}}],["providetoken(user",{"_index":189,"title":{},"body":{"injectables/AdminService.html":{},"interfaces/AuthToken.html":{}}}],["public",{"_index":465,"title":{},"body":{"guards/AuthGuardService.html":{},"injectables/AuthService.html":{},"classes/NgbdDropdownBasic.html":{},"components/WebcamComponent.html":{}}}],["pwd",{"_index":190,"title":{},"body":{"injectables/AdminService.html":{},"interfaces/AuthToken.html":{}}}],["radio",{"_index":765,"title":{},"body":{"components/GraphsComponent.html":{}}}],["radiobuttons",{"_index":579,"title":{},"body":{"components/GraphsComponent.html":{}}}],["raspberry",{"_index":1097,"title":{},"body":{"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{},"miscellaneous/variables.html":{}}}],["raspberrychart",{"_index":1200,"title":{},"body":{"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["raspberrydata",{"_index":281,"title":{"interfaces/RaspberryData.html":{}},"body":{"injectables/AdminpanelDataService.html":{},"interfaces/BatteryData.html":{},"interfaces/RaspberryData.html":{},"interfaces/SolarData.html":{},"interfaces/VolumeData.html":{},"coverage.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["raspi",{"_index":1132,"title":{},"body":{"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["raspyactions",{"_index":983,"title":{"interfaces/raspyActions.html":{}},"body":{"coverage.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{},"miscellaneous/variables.html":{}}}],["readme",{"_index":1077,"title":{},"body":{"index.html":{}}}],["recentdata",{"_index":767,"title":{},"body":{"components/GraphsComponent.html":{}}}],["recentimages",{"_index":827,"title":{},"body":{"classes/NgbdDropdownBasic.html":{},"components/WebcamComponent.html":{}}}],["recentpics",{"_index":826,"title":{},"body":{"classes/NgbdDropdownBasic.html":{},"components/WebcamComponent.html":{}}}],["recenttemp",{"_index":507,"title":{},"body":{"components/GraphsComponent.html":{}}}],["recenttemp}}°c",{"_index":733,"title":{},"body":{"components/GraphsComponent.html":{}}}],["recentwinddir",{"_index":508,"title":{},"body":{"components/GraphsComponent.html":{}}}],["recentwindspeed",{"_index":509,"title":{},"body":{"components/GraphsComponent.html":{}}}],["red",{"_index":134,"title":{},"body":{"components/AdminComponent.html":{}}}],["refresh",{"_index":208,"title":{},"body":{"injectables/AdminService.html":{},"interfaces/AuthToken.html":{}}}],["relative",{"_index":957,"title":{},"body":{"components/WebcamComponent.html":{}}}],["reload",{"_index":1050,"title":{},"body":{"index.html":{}}}],["requestet",{"_index":543,"title":{},"body":{"components/GraphsComponent.html":{}}}],["require",{"_index":1001,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["require.context",{"_index":1260,"title":{},"body":{"miscellaneous/variables.html":{}}}],["reset",{"_index":312,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["resize",{"_index":587,"title":{},"body":{"components/GraphsComponent.html":{}}}],["resizing",{"_index":589,"title":{},"body":{"components/GraphsComponent.html":{}}}],["responsiveanimationduration",{"_index":1147,"title":{},"body":{"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["result",{"_index":177,"title":{},"body":{"components/AdminComponent.html":{},"injectables/AdminService.html":{},"injectables/AdminpanelDataService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuardService.html":{},"injectables/AuthService.html":{},"interfaces/AuthToken.html":{},"interfaces/BatteryData.html":{},"interfaces/ImageData.html":{},"injectables/ImageService.html":{},"classes/NgbdDropdownBasic.html":{},"interfaces/RaspberryData.html":{},"interfaces/SolarData.html":{},"interfaces/TemperatureData.html":{},"interfaces/VolumeData.html":{},"injectables/WeatherDataService.html":{},"interfaces/WindData.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"interfaces/raspyActions.html":{},"routes.html":{},"interfaces/sensorActions.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":179,"title":{},"body":{"components/AdminComponent.html":{},"injectables/AdminService.html":{},"injectables/AdminpanelDataService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuardService.html":{},"injectables/AuthService.html":{},"interfaces/AuthToken.html":{},"interfaces/BatteryData.html":{},"interfaces/ImageData.html":{},"injectables/ImageService.html":{},"classes/NgbdDropdownBasic.html":{},"interfaces/RaspberryData.html":{},"interfaces/SolarData.html":{},"interfaces/TemperatureData.html":{},"interfaces/VolumeData.html":{},"injectables/WeatherDataService.html":{},"interfaces/WindData.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"interfaces/raspyActions.html":{},"routes.html":{},"interfaces/sensorActions.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":203,"title":{},"body":{"injectables/AdminService.html":{},"injectables/AdminpanelDataService.html":{},"classes/AppPage.html":{},"guards/AuthGuardService.html":{},"injectables/AuthService.html":{},"interfaces/AuthToken.html":{},"interfaces/BatteryData.html":{},"components/GraphsComponent.html":{},"interfaces/ImageData.html":{},"injectables/ImageService.html":{},"classes/NgbdDropdownBasic.html":{},"interfaces/RaspberryData.html":{},"interfaces/SolarData.html":{},"interfaces/TemperatureData.html":{},"interfaces/VolumeData.html":{},"injectables/WeatherDataService.html":{},"components/WebcamComponent.html":{},"interfaces/WindData.html":{}}}],["returns",{"_index":45,"title":{},"body":{"components/AdminComponent.html":{},"injectables/AdminService.html":{},"injectables/AdminpanelDataService.html":{},"classes/AppPage.html":{},"guards/AuthGuardService.html":{},"injectables/AuthService.html":{},"components/GraphsComponent.html":{},"injectables/ImageService.html":{},"injectables/WeatherDataService.html":{},"components/WebcamComponent.html":{}}}],["rgba(128",{"_index":630,"title":{},"body":{"components/GraphsComponent.html":{}}}],["rgba(255",{"_index":618,"title":{},"body":{"components/GraphsComponent.html":{}}}],["right",{"_index":149,"title":{},"body":{"components/AdminComponent.html":{},"components/GraphsComponent.html":{},"components/WebcamComponent.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["right:0.25em",{"_index":778,"title":{},"body":{"components/GraphsComponent.html":{}}}],["root",{"_index":201,"title":{},"body":{"injectables/AdminService.html":{},"injectables/AdminpanelDataService.html":{},"components/AppComponent.html":{},"classes/AppPage.html":{},"guards/AuthGuardService.html":{},"injectables/AuthService.html":{},"interfaces/AuthToken.html":{},"interfaces/BatteryData.html":{},"interfaces/ImageData.html":{},"injectables/ImageService.html":{},"interfaces/RaspberryData.html":{},"interfaces/SolarData.html":{},"interfaces/TemperatureData.html":{},"interfaces/VolumeData.html":{},"injectables/WeatherDataService.html":{},"interfaces/WindData.html":{}}}],["root'},{'name",{"_index":170,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/GraphsComponent.html":{},"components/WebcamComponent.html":{}}}],["rotate",{"_index":702,"title":{},"body":{"components/GraphsComponent.html":{}}}],["rotatedircardarrow",{"_index":528,"title":{},"body":{"components/GraphsComponent.html":{}}}],["rotatedircardarrow(angle",{"_index":590,"title":{},"body":{"components/GraphsComponent.html":{}}}],["rotierenden",{"_index":583,"title":{},"body":{"components/GraphsComponent.html":{}}}],["router",{"_index":36,"title":{},"body":{"components/AdminComponent.html":{},"guards/AuthGuardService.html":{}}}],["routermodule",{"_index":454,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routermodule.forroot(routes",{"_index":460,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routes",{"_index":453,"title":{"routes.html":{}},"body":{"modules/AppRoutingModule.html":{},"overview.html":{},"routes.html":{}}}],["routing.module",{"_index":330,"title":{},"body":{"modules/AppModule.html":{}}}],["routing.module.ts",{"_index":452,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["run",{"_index":1043,"title":{},"body":{"index.html":{}}}],["running",{"_index":1065,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":69,"title":{},"body":{"components/AdminComponent.html":{},"components/GraphsComponent.html":{},"classes/NgbdDropdownBasic.html":{},"components/WebcamComponent.html":{},"dependencies.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["rxjs/operators",{"_index":199,"title":{},"body":{"injectables/AdminService.html":{},"interfaces/AuthToken.html":{},"classes/NgbdDropdownBasic.html":{},"components/WebcamComponent.html":{}}}],["scaffolding",{"_index":1053,"title":{},"body":{"index.html":{}}}],["scalelabel",{"_index":1148,"title":{},"body":{"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["scales",{"_index":599,"title":{},"body":{"components/GraphsComponent.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["screen",{"_index":156,"title":{},"body":{"components/AdminComponent.html":{}}}],["screens",{"_index":154,"title":{},"body":{"components/AdminComponent.html":{}}}],["scrollingmodule",{"_index":346,"title":{},"body":{"modules/AppModule.html":{}}}],["se",{"_index":288,"title":{},"body":{"components/AppComponent.html":{}}}],["selector",{"_index":14,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/GraphsComponent.html":{},"classes/NgbdDropdownBasic.html":{},"components/WebcamComponent.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["selectorcard",{"_index":746,"title":{},"body":{"components/GraphsComponent.html":{}}}],["sensor",{"_index":1092,"title":{},"body":{"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{},"miscellaneous/variables.html":{}}}],["sensoractions",{"_index":985,"title":{"interfaces/sensorActions.html":{}},"body":{"coverage.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{},"miscellaneous/variables.html":{}}}],["sensordata",{"_index":990,"title":{},"body":{"coverage.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{},"miscellaneous/variables.html":{}}}],["sensortabledata",{"_index":1188,"title":{},"body":{"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["serve",{"_index":1045,"title":{},"body":{"index.html":{}}}],["server",{"_index":1042,"title":{},"body":{"index.html":{}}}],["sheet",{"_index":360,"title":{},"body":{"modules/AppModule.html":{}}}],["sich",{"_index":946,"title":{},"body":{"components/WebcamComponent.html":{}}}],["sidenav",{"_index":965,"title":{},"body":{"components/WebcamComponent.html":{}}}],["sie",{"_index":945,"title":{},"body":{"components/WebcamComponent.html":{}}}],["simplemodelabel",{"_index":764,"title":{},"body":{"components/GraphsComponent.html":{}}}],["sind",{"_index":936,"title":{},"body":{"components/WebcamComponent.html":{}}}],["size",{"_index":763,"title":{},"body":{"components/GraphsComponent.html":{},"components/WebcamComponent.html":{}}}],["sizing",{"_index":121,"title":{},"body":{"components/AdminComponent.html":{}}}],["small",{"_index":153,"title":{},"body":{"components/AdminComponent.html":{}}}],["solar",{"_index":1157,"title":{},"body":{"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["solarcell/aggregate/?start='+this.formatdate(today",{"_index":259,"title":{},"body":{"injectables/AdminpanelDataService.html":{},"interfaces/BatteryData.html":{},"interfaces/RaspberryData.html":{},"interfaces/SolarData.html":{},"interfaces/VolumeData.html":{}}}],["solarchart",{"_index":1189,"title":{},"body":{"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["solardata",{"_index":274,"title":{"interfaces/SolarData.html":{}},"body":{"injectables/AdminpanelDataService.html":{},"interfaces/BatteryData.html":{},"interfaces/RaspberryData.html":{},"interfaces/SolarData.html":{},"interfaces/VolumeData.html":{},"coverage.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["solarzelle",{"_index":1115,"title":{},"body":{"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["solid",{"_index":118,"title":{},"body":{"components/AdminComponent.html":{},"components/GraphsComponent.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AdminComponent.html":{},"injectables/AdminService.html":{},"injectables/AdminpanelDataService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuardService.html":{},"injectables/AuthService.html":{},"interfaces/AuthToken.html":{},"interfaces/BatteryData.html":{},"components/GraphsComponent.html":{},"interfaces/ImageData.html":{},"injectables/ImageService.html":{},"classes/NgbdDropdownBasic.html":{},"interfaces/RaspberryData.html":{},"interfaces/SolarData.html":{},"interfaces/TemperatureData.html":{},"interfaces/VolumeData.html":{},"injectables/WeatherDataService.html":{},"components/WebcamComponent.html":{},"interfaces/WindData.html":{},"index.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["spacer",{"_index":294,"title":{},"body":{"components/AppComponent.html":{}}}],["span",{"_index":152,"title":{},"body":{"components/AdminComponent.html":{}}}],["span')).gettext",{"_index":450,"title":{},"body":{"classes/AppPage.html":{}}}],["span.psw",{"_index":147,"title":{},"body":{"components/AdminComponent.html":{}}}],["spannung",{"_index":1096,"title":{},"body":{"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{},"miscellaneous/variables.html":{}}}],["spec\\.ts",{"_index":1261,"title":{},"body":{"miscellaneous/variables.html":{}}}],["speed",{"_index":895,"title":{},"body":{"interfaces/TemperatureData.html":{},"injectables/WeatherDataService.html":{},"interfaces/WindData.html":{}}}],["spinner",{"_index":397,"title":{},"body":{"modules/AppModule.html":{}}}],["src",{"_index":730,"title":{},"body":{"components/GraphsComponent.html":{}}}],["src/.../adminpanel.component.ts",{"_index":1256,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.prod.ts",{"_index":1258,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.ts",{"_index":1259,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../test.ts",{"_index":1257,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/admin.service.ts",{"_index":182,"title":{},"body":{"injectables/AdminService.html":{},"interfaces/AuthToken.html":{},"coverage.html":{}}}],["src/app/admin.service.ts:10",{"_index":194,"title":{},"body":{"injectables/AdminService.html":{}}}],["src/app/admin.service.ts:11",{"_index":195,"title":{},"body":{"injectables/AdminService.html":{}}}],["src/app/admin.service.ts:12",{"_index":188,"title":{},"body":{"injectables/AdminService.html":{}}}],["src/app/admin.service.ts:18",{"_index":191,"title":{},"body":{"injectables/AdminService.html":{}}}],["src/app/admin/admin.component.ts",{"_index":10,"title":{},"body":{"components/AdminComponent.html":{},"coverage.html":{}}}],["src/app/admin/admin.component.ts:15",{"_index":51,"title":{},"body":{"components/AdminComponent.html":{}}}],["src/app/admin/admin.component.ts:16",{"_index":53,"title":{},"body":{"components/AdminComponent.html":{}}}],["src/app/admin/admin.component.ts:17",{"_index":62,"title":{},"body":{"components/AdminComponent.html":{}}}],["src/app/admin/admin.component.ts:18",{"_index":63,"title":{},"body":{"components/AdminComponent.html":{}}}],["src/app/admin/admin.component.ts:19",{"_index":60,"title":{},"body":{"components/AdminComponent.html":{}}}],["src/app/admin/admin.component.ts:20",{"_index":58,"title":{},"body":{"components/AdminComponent.html":{}}}],["src/app/admin/admin.component.ts:21",{"_index":38,"title":{},"body":{"components/AdminComponent.html":{}}}],["src/app/admin/admin.component.ts:27",{"_index":50,"title":{},"body":{"components/AdminComponent.html":{}}}],["src/app/admin/admin.component.ts:31",{"_index":44,"title":{},"body":{"components/AdminComponent.html":{}}}],["src/app/admin/admin.component.ts:45",{"_index":48,"title":{},"body":{"components/AdminComponent.html":{}}}],["src/app/adminpanel",{"_index":211,"title":{},"body":{"injectables/AdminpanelDataService.html":{},"interfaces/BatteryData.html":{},"interfaces/RaspberryData.html":{},"interfaces/SolarData.html":{},"interfaces/VolumeData.html":{},"coverage.html":{}}}],["src/app/adminpanel/adminpanel.component.ts",{"_index":981,"title":{},"body":{"coverage.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{},"miscellaneous/variables.html":{}}}],["src/app/app",{"_index":451,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/app.component.ts",{"_index":284,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:11",{"_index":290,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.ts",{"_index":314,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/auth",{"_index":463,"title":{},"body":{"guards/AuthGuardService.html":{},"coverage.html":{}}}],["src/app/auth.service.ts",{"_index":475,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/app/auth.service.ts:11",{"_index":479,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth.service.ts:8",{"_index":478,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/graphs/graphs.component.ts",{"_index":494,"title":{},"body":{"components/GraphsComponent.html":{},"coverage.html":{}}}],["src/app/graphs/graphs.component.ts:101",{"_index":559,"title":{},"body":{"components/GraphsComponent.html":{}}}],["src/app/graphs/graphs.component.ts:107",{"_index":558,"title":{},"body":{"components/GraphsComponent.html":{}}}],["src/app/graphs/graphs.component.ts:129",{"_index":596,"title":{},"body":{"components/GraphsComponent.html":{}}}],["src/app/graphs/graphs.component.ts:142",{"_index":549,"title":{},"body":{"components/GraphsComponent.html":{}}}],["src/app/graphs/graphs.component.ts:157",{"_index":557,"title":{},"body":{"components/GraphsComponent.html":{}}}],["src/app/graphs/graphs.component.ts:173",{"_index":581,"title":{},"body":{"components/GraphsComponent.html":{}}}],["src/app/graphs/graphs.component.ts:180",{"_index":591,"title":{},"body":{"components/GraphsComponent.html":{}}}],["src/app/graphs/graphs.component.ts:184",{"_index":594,"title":{},"body":{"components/GraphsComponent.html":{}}}],["src/app/graphs/graphs.component.ts:193",{"_index":574,"title":{},"body":{"components/GraphsComponent.html":{}}}],["src/app/graphs/graphs.component.ts:20",{"_index":649,"title":{},"body":{"components/GraphsComponent.html":{}}}],["src/app/graphs/graphs.component.ts:203",{"_index":563,"title":{},"body":{"components/GraphsComponent.html":{}}}],["src/app/graphs/graphs.component.ts:208",{"_index":538,"title":{},"body":{"components/GraphsComponent.html":{}}}],["src/app/graphs/graphs.component.ts:21",{"_index":643,"title":{},"body":{"components/GraphsComponent.html":{}}}],["src/app/graphs/graphs.component.ts:214",{"_index":535,"title":{},"body":{"components/GraphsComponent.html":{}}}],["src/app/graphs/graphs.component.ts:22",{"_index":652,"title":{},"body":{"components/GraphsComponent.html":{}}}],["src/app/graphs/graphs.component.ts:222",{"_index":539,"title":{},"body":{"components/GraphsComponent.html":{}}}],["src/app/graphs/graphs.component.ts:23",{"_index":636,"title":{},"body":{"components/GraphsComponent.html":{}}}],["src/app/graphs/graphs.component.ts:24",{"_index":635,"title":{},"body":{"components/GraphsComponent.html":{}}}],["src/app/graphs/graphs.component.ts:246",{"_index":586,"title":{},"body":{"components/GraphsComponent.html":{}}}],["src/app/graphs/graphs.component.ts:27",{"_index":650,"title":{},"body":{"components/GraphsComponent.html":{}}}],["src/app/graphs/graphs.component.ts:30",{"_index":633,"title":{},"body":{"components/GraphsComponent.html":{}}}],["src/app/graphs/graphs.component.ts:31",{"_index":648,"title":{},"body":{"components/GraphsComponent.html":{}}}],["src/app/graphs/graphs.component.ts:32",{"_index":640,"title":{},"body":{"components/GraphsComponent.html":{}}}],["src/app/graphs/graphs.component.ts:33",{"_index":634,"title":{},"body":{"components/GraphsComponent.html":{}}}],["src/app/graphs/graphs.component.ts:36",{"_index":637,"title":{},"body":{"components/GraphsComponent.html":{}}}],["src/app/graphs/graphs.component.ts:37",{"_index":639,"title":{},"body":{"components/GraphsComponent.html":{}}}],["src/app/graphs/graphs.component.ts:38",{"_index":638,"title":{},"body":{"components/GraphsComponent.html":{}}}],["src/app/graphs/graphs.component.ts:40",{"_index":642,"title":{},"body":{"components/GraphsComponent.html":{}}}],["src/app/graphs/graphs.component.ts:41",{"_index":651,"title":{},"body":{"components/GraphsComponent.html":{}}}],["src/app/graphs/graphs.component.ts:42",{"_index":624,"title":{},"body":{"components/GraphsComponent.html":{}}}],["src/app/graphs/graphs.component.ts:56",{"_index":632,"title":{},"body":{"components/GraphsComponent.html":{}}}],["src/app/graphs/graphs.component.ts:71",{"_index":603,"title":{},"body":{"components/GraphsComponent.html":{}}}],["src/app/graphs/graphs.component.ts:81",{"_index":532,"title":{},"body":{"components/GraphsComponent.html":{}}}],["src/app/graphs/graphs.component.ts:89",{"_index":560,"title":{},"body":{"components/GraphsComponent.html":{}}}],["src/app/image",{"_index":784,"title":{},"body":{"interfaces/ImageData.html":{},"injectables/ImageService.html":{},"coverage.html":{}}}],["src/app/weather",{"_index":884,"title":{},"body":{"interfaces/TemperatureData.html":{},"injectables/WeatherDataService.html":{},"interfaces/WindData.html":{},"coverage.html":{}}}],["src/app/webcam/webcam.component.ts",{"_index":808,"title":{},"body":{"classes/NgbdDropdownBasic.html":{},"components/WebcamComponent.html":{},"coverage.html":{}}}],["src/app/webcam/webcam.component.ts:100",{"_index":920,"title":{},"body":{"components/WebcamComponent.html":{}}}],["src/app/webcam/webcam.component.ts:106",{"_index":913,"title":{},"body":{"components/WebcamComponent.html":{}}}],["src/app/webcam/webcam.component.ts:120",{"_index":912,"title":{},"body":{"components/WebcamComponent.html":{}}}],["src/app/webcam/webcam.component.ts:128",{"_index":917,"title":{},"body":{"components/WebcamComponent.html":{}}}],["src/app/webcam/webcam.component.ts:22",{"_index":930,"title":{},"body":{"components/WebcamComponent.html":{}}}],["src/app/webcam/webcam.component.ts:23",{"_index":929,"title":{},"body":{"components/WebcamComponent.html":{}}}],["src/app/webcam/webcam.component.ts:25",{"_index":927,"title":{},"body":{"components/WebcamComponent.html":{}}}],["src/app/webcam/webcam.component.ts:26",{"_index":926,"title":{},"body":{"components/WebcamComponent.html":{}}}],["src/app/webcam/webcam.component.ts:28",{"_index":932,"title":{},"body":{"components/WebcamComponent.html":{}}}],["src/app/webcam/webcam.component.ts:29",{"_index":931,"title":{},"body":{"components/WebcamComponent.html":{}}}],["src/app/webcam/webcam.component.ts:31",{"_index":923,"title":{},"body":{"components/WebcamComponent.html":{}}}],["src/app/webcam/webcam.component.ts:32",{"_index":922,"title":{},"body":{"components/WebcamComponent.html":{}}}],["src/app/webcam/webcam.component.ts:35",{"_index":925,"title":{},"body":{"components/WebcamComponent.html":{}}}],["src/app/webcam/webcam.component.ts:37",{"_index":924,"title":{},"body":{"components/WebcamComponent.html":{}}}],["src/app/webcam/webcam.component.ts:39",{"_index":928,"title":{},"body":{"components/WebcamComponent.html":{}}}],["src/app/webcam/webcam.component.ts:40",{"_index":911,"title":{},"body":{"components/WebcamComponent.html":{}}}],["src/app/webcam/webcam.component.ts:43",{"_index":921,"title":{},"body":{"components/WebcamComponent.html":{}}}],["src/app/webcam/webcam.component.ts:47",{"_index":918,"title":{},"body":{"components/WebcamComponent.html":{}}}],["src/app/webcam/webcam.component.ts:67",{"_index":914,"title":{},"body":{"components/WebcamComponent.html":{}}}],["src/app/webcam/webcam.component.ts:73",{"_index":915,"title":{},"body":{"components/WebcamComponent.html":{}}}],["src/app/webcam/webcam.component.ts:87",{"_index":916,"title":{},"body":{"components/WebcamComponent.html":{}}}],["src/environments/environment.prod.ts",{"_index":996,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.ts",{"_index":998,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/test.ts",{"_index":999,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["start",{"_index":233,"title":{},"body":{"injectables/AdminpanelDataService.html":{},"injectables/WeatherDataService.html":{}}}],["startdate",{"_index":720,"title":{},"body":{"components/GraphsComponent.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["startdateevents",{"_index":510,"title":{},"body":{"components/GraphsComponent.html":{},"classes/NgbdDropdownBasic.html":{},"components/WebcamComponent.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["startdatum",{"_index":742,"title":{},"body":{"components/GraphsComponent.html":{}}}],["started",{"_index":1033,"title":{"index.html":{}},"body":{}}],["startstring",{"_index":718,"title":{},"body":{"components/GraphsComponent.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["statements",{"_index":975,"title":{},"body":{"coverage.html":{}}}],["status",{"_index":1093,"title":{},"body":{"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{},"miscellaneous/variables.html":{}}}],["stored",{"_index":1059,"title":{},"body":{"index.html":{}}}],["string",{"_index":59,"title":{},"body":{"components/AdminComponent.html":{},"injectables/AdminService.html":{},"injectables/AdminpanelDataService.html":{},"components/AppComponent.html":{},"interfaces/AuthToken.html":{},"components/GraphsComponent.html":{},"interfaces/ImageData.html":{},"injectables/ImageService.html":{},"injectables/WeatherDataService.html":{},"components/WebcamComponent.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["strom",{"_index":1098,"title":{},"body":{"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{},"miscellaneous/variables.html":{}}}],["stromstärke",{"_index":1120,"title":{},"body":{"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["stunden",{"_index":738,"title":{},"body":{"components/GraphsComponent.html":{}}}],["style",{"_index":131,"title":{},"body":{"components/AdminComponent.html":{}}}],["styles",{"_index":6,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/GraphsComponent.html":{},"components/WebcamComponent.html":{}}}],["styleurls",{"_index":17,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/GraphsComponent.html":{},"classes/NgbdDropdownBasic.html":{},"components/WebcamComponent.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["subject",{"_index":811,"title":{},"body":{"classes/NgbdDropdownBasic.html":{},"components/WebcamComponent.html":{}}}],["subscribe((data",{"_index":842,"title":{},"body":{"classes/NgbdDropdownBasic.html":{},"components/WebcamComponent.html":{}}}],["subscription",{"_index":52,"title":{},"body":{"components/AdminComponent.html":{},"components/GraphsComponent.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["summe",{"_index":1241,"title":{},"body":{"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["support",{"_index":1078,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":1079,"title":{},"body":{"modules.html":{}}}],["tab",{"_index":966,"title":{},"body":{"components/WebcamComponent.html":{}}}],["table",{"_index":1003,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1002,"title":{},"body":{"coverage.html":{}}}],["tag",{"_index":948,"title":{},"body":{"components/WebcamComponent.html":{}}}],["tage",{"_index":571,"title":{},"body":{"components/GraphsComponent.html":{}}}],["tagesanzahl",{"_index":567,"title":{},"body":{"components/GraphsComponent.html":{}}}],["takeuntil",{"_index":812,"title":{},"body":{"classes/NgbdDropdownBasic.html":{},"components/WebcamComponent.html":{}}}],["tby",{"_index":490,"title":{},"body":{"injectables/AuthService.html":{}}}],["tempcanvas=document.getelementbyid('temp",{"_index":685,"title":{},"body":{"components/GraphsComponent.html":{}}}],["tempchart",{"_index":511,"title":{},"body":{"components/GraphsComponent.html":{}}}],["tempchart:chart",{"_index":656,"title":{},"body":{"components/GraphsComponent.html":{}}}],["temperatur",{"_index":613,"title":{},"body":{"components/GraphsComponent.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{},"miscellaneous/variables.html":{}}}],["temperaturedata",{"_index":512,"title":{"interfaces/TemperatureData.html":{}},"body":{"components/GraphsComponent.html":{},"interfaces/TemperatureData.html":{},"injectables/WeatherDataService.html":{},"interfaces/WindData.html":{},"coverage.html":{}}}],["temperaturgraph",{"_index":546,"title":{},"body":{"components/GraphsComponent.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/GraphsComponent.html":{},"components/WebcamComponent.html":{}}}],["templateurl",{"_index":19,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/GraphsComponent.html":{},"classes/NgbdDropdownBasic.html":{},"components/WebcamComponent.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["temps/aggregate/?start='+this.formatdate(today",{"_index":886,"title":{},"body":{"interfaces/TemperatureData.html":{},"injectables/WeatherDataService.html":{},"interfaces/WindData.html":{}}}],["test",{"_index":1068,"title":{},"body":{"index.html":{}}}],["tests",{"_index":1067,"title":{},"body":{"index.html":{}}}],["text",{"_index":111,"title":{},"body":{"components/AdminComponent.html":{},"components/GraphsComponent.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["this.adminpaneldataservice",{"_index":1151,"title":{},"body":{"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["this.adminpaneldataservice.getbatterydata(input).subscribe((databattery",{"_index":1173,"title":{},"body":{"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["this.adminpaneldataservice.getbatterydataframe(startdate",{"_index":1248,"title":{},"body":{"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["this.adminpaneldataservice.getraspberrydata(input).subscribe((datarasp",{"_index":1176,"title":{},"body":{"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["this.adminpaneldataservice.getraspberrydataframe(startdate",{"_index":1249,"title":{},"body":{"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["this.adminpaneldataservice.getsolardata(input).subscribe((datasolar",{"_index":1170,"title":{},"body":{"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["this.adminpaneldataservice.getsolardataframe(startdate",{"_index":1247,"title":{},"body":{"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["this.adminpaneldataservice.getvolumedataframe(firstmonthday,lastmonthday).subscribe((datavol",{"_index":1179,"title":{},"body":{"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["this.adminpaneldataservice.getvolumedataframe(startdate",{"_index":1250,"title":{},"body":{"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["this.adminpaneldatasubscription",{"_index":1169,"title":{},"body":{"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["this.adminservice",{"_index":73,"title":{},"body":{"components/AdminComponent.html":{}}}],["this.adminservice.providetoken(this.username",{"_index":76,"title":{},"body":{"components/AdminComponent.html":{}}}],["this.adminsubscription",{"_index":75,"title":{},"body":{"components/AdminComponent.html":{}}}],["this.apiurl",{"_index":258,"title":{},"body":{"injectables/AdminpanelDataService.html":{},"interfaces/BatteryData.html":{},"interfaces/ImageData.html":{},"injectables/ImageService.html":{},"interfaces/RaspberryData.html":{},"interfaces/SolarData.html":{},"interfaces/TemperatureData.html":{},"interfaces/VolumeData.html":{},"injectables/WeatherDataService.html":{},"interfaces/WindData.html":{}}}],["this.auth.isauthenticated",{"_index":473,"title":{},"body":{"guards/AuthGuardService.html":{}}}],["this.batterychart",{"_index":1161,"title":{},"body":{"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["this.batterydata",{"_index":1174,"title":{},"body":{"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["this.batterydata.map(data",{"_index":1228,"title":{},"body":{"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["this.batterydata.map(datesolar",{"_index":1198,"title":{},"body":{"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["this.breakpoint",{"_index":661,"title":{},"body":{"components/GraphsComponent.html":{}}}],["this.buildchart(this.chartdatasets[0",{"_index":1191,"title":{},"body":{"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["this.buildchart(this.chartdatasets[1",{"_index":1196,"title":{},"body":{"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["this.buildchart(this.chartdatasets[2",{"_index":1202,"title":{},"body":{"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["this.buildchart(this.chartdatasets[3",{"_index":1207,"title":{},"body":{"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["this.buildtempchart",{"_index":680,"title":{},"body":{"components/GraphsComponent.html":{}}}],["this.buildwindchart",{"_index":677,"title":{},"body":{"components/GraphsComponent.html":{}}}],["this.chart",{"_index":1217,"title":{},"body":{"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["this.chart.destroy",{"_index":1213,"title":{},"body":{"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["this.chartdatasets[0][0].data",{"_index":1223,"title":{},"body":{"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["this.chartdatasets[0][1].data",{"_index":1225,"title":{},"body":{"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["this.chartdatasets[1][0].data",{"_index":1227,"title":{},"body":{"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["this.chartdatasets[1][1].data",{"_index":1230,"title":{},"body":{"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["this.chartdatasets[2][0].data",{"_index":1233,"title":{},"body":{"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["this.chartdatasets[2][1].data",{"_index":1235,"title":{},"body":{"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["this.chartdatasets[3][0].data.reduce(add).tostring",{"_index":1240,"title":{},"body":{"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["this.chartdatasets[3][0].data=this.volumedata.map(datavolume",{"_index":1238,"title":{},"body":{"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["this.chartlabels",{"_index":1184,"title":{},"body":{"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["this.chartnames[0",{"_index":1192,"title":{},"body":{"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["this.chartnames[1",{"_index":1197,"title":{},"body":{"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["this.chartnames[2",{"_index":1203,"title":{},"body":{"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["this.chartnames[3",{"_index":1208,"title":{},"body":{"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["this.chartoptions",{"_index":1221,"title":{},"body":{"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["this.chartoptions.title.text=dianame",{"_index":1216,"title":{},"body":{"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["this.charttempdata.datasets[0].data=this.temperaturedata.map(data",{"_index":684,"title":{},"body":{"components/GraphsComponent.html":{}}}],["this.charttempdata.labels=this.temperaturedata.map(data",{"_index":683,"title":{},"body":{"components/GraphsComponent.html":{}}}],["this.chartwindata.datasets[0].data=this.winddata.map(datawind",{"_index":692,"title":{},"body":{"components/GraphsComponent.html":{}}}],["this.chartwindata.labels=this.winddata.map(datawind",{"_index":690,"title":{},"body":{"components/GraphsComponent.html":{}}}],["this.dateimages=data",{"_index":875,"title":{},"body":{"classes/NgbdDropdownBasic.html":{},"components/WebcamComponent.html":{}}}],["this.datepics=this.dateimages.map(data",{"_index":876,"title":{},"body":{"classes/NgbdDropdownBasic.html":{},"components/WebcamComponent.html":{}}}],["this.destroy$.next(true",{"_index":882,"title":{},"body":{"classes/NgbdDropdownBasic.html":{},"components/WebcamComponent.html":{}}}],["this.destroy$.unsubscribe",{"_index":883,"title":{},"body":{"classes/NgbdDropdownBasic.html":{},"components/WebcamComponent.html":{}}}],["this.diagramchange(this.lastevent",{"_index":1253,"title":{},"body":{"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["this.enddateevents.push(`${event.value",{"_index":716,"title":{},"body":{"components/GraphsComponent.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["this.enddateevents[this.enddateevents.length",{"_index":724,"title":{},"body":{"components/GraphsComponent.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["this.errors",{"_index":83,"title":{},"body":{"components/AdminComponent.html":{}}}],["this.extendedmodestatus",{"_index":659,"title":{},"body":{"components/GraphsComponent.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["this.extendedmodestatus.next(event.checked",{"_index":710,"title":{},"body":{"components/GraphsComponent.html":{}}}],["this.gallery.ref('lightbox",{"_index":845,"title":{},"body":{"classes/NgbdDropdownBasic.html":{},"components/WebcamComponent.html":{}}}],["this.gallery.ref('yesterday",{"_index":868,"title":{},"body":{"classes/NgbdDropdownBasic.html":{},"components/WebcamComponent.html":{}}}],["this.getbatterydataset",{"_index":1195,"title":{},"body":{"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["this.getraspberrydataset",{"_index":1201,"title":{},"body":{"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["this.getsolardataset",{"_index":1190,"title":{},"body":{"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["this.getvolumedataset",{"_index":1206,"title":{},"body":{"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["this.http",{"_index":202,"title":{},"body":{"injectables/AdminService.html":{},"injectables/AdminpanelDataService.html":{},"interfaces/AuthToken.html":{},"interfaces/BatteryData.html":{},"interfaces/ImageData.html":{},"injectables/ImageService.html":{},"interfaces/RaspberryData.html":{},"interfaces/SolarData.html":{},"interfaces/TemperatureData.html":{},"interfaces/VolumeData.html":{},"injectables/WeatherDataService.html":{},"interfaces/WindData.html":{}}}],["this.http.get(this.apiurl",{"_index":264,"title":{},"body":{"injectables/AdminpanelDataService.html":{},"interfaces/BatteryData.html":{},"interfaces/ImageData.html":{},"injectables/ImageService.html":{},"interfaces/RaspberryData.html":{},"interfaces/SolarData.html":{},"interfaces/TemperatureData.html":{},"interfaces/VolumeData.html":{},"injectables/WeatherDataService.html":{},"interfaces/WindData.html":{}}}],["this.http.get(this.apiurl+'battery/aggregate/?start='+this.formatdate(start)+'&end='+this.formatdate(end",{"_index":271,"title":{},"body":{"injectables/AdminpanelDataService.html":{},"interfaces/BatteryData.html":{},"interfaces/RaspberryData.html":{},"interfaces/SolarData.html":{},"interfaces/VolumeData.html":{}}}],["this.http.get(this.apiurl+'images/?start='+this.formatdate(date)+'&end='+this.formatdate(end",{"_index":797,"title":{},"body":{"interfaces/ImageData.html":{},"injectables/ImageService.html":{}}}],["this.http.get(this.apiurl+'solarcell/aggregate/?start='+this.formatdate(start)+'&end='+this.formatdate(end",{"_index":269,"title":{},"body":{"injectables/AdminpanelDataService.html":{},"interfaces/BatteryData.html":{},"interfaces/RaspberryData.html":{},"interfaces/SolarData.html":{},"interfaces/VolumeData.html":{}}}],["this.http.get(this.apiurl+'temps/aggregate/?start='+this.formatdate(start)+'&end='+this.formatdate(end",{"_index":892,"title":{},"body":{"interfaces/TemperatureData.html":{},"injectables/WeatherDataService.html":{},"interfaces/WindData.html":{}}}],["this.http.get(this.apiurl+'wind/recent",{"_index":894,"title":{},"body":{"interfaces/TemperatureData.html":{},"injectables/WeatherDataService.html":{},"interfaces/WindData.html":{}}}],["this.http.get(this.apiurl+'wind/recent/?start='+this.formatdate(start)+'&end='+this.formatdate(end",{"_index":890,"title":{},"body":{"interfaces/TemperatureData.html":{},"injectables/WeatherDataService.html":{},"interfaces/WindData.html":{}}}],["this.http.post(this.apiurl",{"_index":204,"title":{},"body":{"injectables/AdminService.html":{},"interfaces/AuthToken.html":{}}}],["this.imageservice",{"_index":839,"title":{},"body":{"classes/NgbdDropdownBasic.html":{},"components/WebcamComponent.html":{}}}],["this.imageservice.getdateimages(this.startdateevents",{"_index":874,"title":{},"body":{"classes/NgbdDropdownBasic.html":{},"components/WebcamComponent.html":{}}}],["this.imageservice.getrecentimages",{"_index":840,"title":{},"body":{"classes/NgbdDropdownBasic.html":{},"components/WebcamComponent.html":{}}}],["this.imageservice.gettodayimages",{"_index":859,"title":{},"body":{"classes/NgbdDropdownBasic.html":{},"components/WebcamComponent.html":{}}}],["this.imageservice.getyesterdayimages",{"_index":865,"title":{},"body":{"classes/NgbdDropdownBasic.html":{},"components/WebcamComponent.html":{}}}],["this.initdata",{"_index":1152,"title":{},"body":{"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["this.jwthelper.istokenexpired(token",{"_index":492,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.lastevent",{"_index":1155,"title":{},"body":{"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["this.lasthourswind",{"_index":675,"title":{},"body":{"components/GraphsComponent.html":{}}}],["this.lightbox.open(index",{"_index":871,"title":{},"body":{"classes/NgbdDropdownBasic.html":{},"components/WebcamComponent.html":{}}}],["this.loaddatepics",{"_index":881,"title":{},"body":{"classes/NgbdDropdownBasic.html":{},"components/WebcamComponent.html":{}}}],["this.loadrecentpics",{"_index":844,"title":{},"body":{"classes/NgbdDropdownBasic.html":{},"components/WebcamComponent.html":{}}}],["this.loginerror",{"_index":79,"title":{},"body":{"components/AdminComponent.html":{}}}],["this.logtoken(tokendata",{"_index":80,"title":{},"body":{"components/AdminComponent.html":{}}}],["this.password).subscribe",{"_index":77,"title":{},"body":{"components/AdminComponent.html":{}}}],["this.raspberrychart",{"_index":1162,"title":{},"body":{"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["this.raspberrydata",{"_index":1177,"title":{},"body":{"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["this.raspberrydata.map(datesolar",{"_index":1204,"title":{},"body":{"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["this.recentimages",{"_index":843,"title":{},"body":{"classes/NgbdDropdownBasic.html":{},"components/WebcamComponent.html":{}}}],["this.recentpics=this.recentimages.map(data",{"_index":856,"title":{},"body":{"classes/NgbdDropdownBasic.html":{},"components/WebcamComponent.html":{}}}],["this.recenttemp",{"_index":671,"title":{},"body":{"components/GraphsComponent.html":{}}}],["this.recentwinddir",{"_index":666,"title":{},"body":{"components/GraphsComponent.html":{}}}],["this.recentwindspeed",{"_index":663,"title":{},"body":{"components/GraphsComponent.html":{}}}],["this.router.navigate(['admin",{"_index":474,"title":{},"body":{"guards/AuthGuardService.html":{}}}],["this.router.navigate(['adminpanel",{"_index":74,"title":{},"body":{"components/AdminComponent.html":{}}}],["this.solarchart",{"_index":1159,"title":{},"body":{"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["this.solardata",{"_index":1171,"title":{},"body":{"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["this.solardata.map(data",{"_index":1193,"title":{},"body":{"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["this.solardata.map(datasolar",{"_index":1128,"title":{},"body":{"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["this.startdateevents.push(`${event.value",{"_index":714,"title":{},"body":{"components/GraphsComponent.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["this.startdateevents=event.value",{"_index":880,"title":{},"body":{"classes/NgbdDropdownBasic.html":{},"components/WebcamComponent.html":{}}}],["this.startdateevents[this.startdateevents.length",{"_index":719,"title":{},"body":{"components/GraphsComponent.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["this.tempchart.destroy",{"_index":682,"title":{},"body":{"components/GraphsComponent.html":{}}}],["this.tempchart=chart.line(tempcanvas",{"_index":687,"title":{},"body":{"components/GraphsComponent.html":{}}}],["this.temperaturedata",{"_index":679,"title":{},"body":{"components/GraphsComponent.html":{}}}],["this.temperaturedata.map(data",{"_index":605,"title":{},"body":{"components/GraphsComponent.html":{}}}],["this.today.ref('dategallery",{"_index":877,"title":{},"body":{"classes/NgbdDropdownBasic.html":{},"components/WebcamComponent.html":{}}}],["this.today.ref('today",{"_index":862,"title":{},"body":{"classes/NgbdDropdownBasic.html":{},"components/WebcamComponent.html":{}}}],["this.todayimages=data",{"_index":860,"title":{},"body":{"classes/NgbdDropdownBasic.html":{},"components/WebcamComponent.html":{}}}],["this.todaypics=this.todayimages.map(data",{"_index":861,"title":{},"body":{"classes/NgbdDropdownBasic.html":{},"components/WebcamComponent.html":{}}}],["this.token=tok",{"_index":90,"title":{},"body":{"components/AdminComponent.html":{}}}],["this.updategraphs(event.value",{"_index":711,"title":{},"body":{"components/GraphsComponent.html":{}}}],["this.volistoggled",{"_index":1158,"title":{},"body":{"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["this.volumechart",{"_index":1163,"title":{},"body":{"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["this.volumedata",{"_index":1181,"title":{},"body":{"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["this.volumedata.map(datavolume",{"_index":1139,"title":{},"body":{"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["this.weatherdataservice",{"_index":658,"title":{},"body":{"components/GraphsComponent.html":{}}}],["this.weatherdataservice.getrecentwind().subscribe((data",{"_index":674,"title":{},"body":{"components/GraphsComponent.html":{}}}],["this.weatherdataservice.gettemperatures(1).subscribe((data",{"_index":670,"title":{},"body":{"components/GraphsComponent.html":{}}}],["this.weatherdataservice.gettemperatures(input).subscribe((data",{"_index":678,"title":{},"body":{"components/GraphsComponent.html":{}}}],["this.weatherdataservice.gettemperaturesdataframe(startdate",{"_index":727,"title":{},"body":{"components/GraphsComponent.html":{}}}],["this.weatherdatasubscription",{"_index":669,"title":{},"body":{"components/GraphsComponent.html":{}}}],["this.windchart=chart.line(windcanvas",{"_index":694,"title":{},"body":{"components/GraphsComponent.html":{}}}],["this.winddata",{"_index":676,"title":{},"body":{"components/GraphsComponent.html":{}}}],["this.winddata.map(data",{"_index":697,"title":{},"body":{"components/GraphsComponent.html":{}}}],["this.winddata.map(datawind",{"_index":625,"title":{},"body":{"components/GraphsComponent.html":{}}}],["this.yesterdayimages=data",{"_index":866,"title":{},"body":{"classes/NgbdDropdownBasic.html":{},"components/WebcamComponent.html":{}}}],["this.yesterdaypics=this.yesterdayimages.map(data",{"_index":867,"title":{},"body":{"classes/NgbdDropdownBasic.html":{},"components/WebcamComponent.html":{}}}],["throttletime",{"_index":813,"title":{},"body":{"classes/NgbdDropdownBasic.html":{},"components/WebcamComponent.html":{}}}],["thumbposition",{"_index":850,"title":{},"body":{"classes/NgbdDropdownBasic.html":{},"components/WebcamComponent.html":{}}}],["ticks",{"_index":601,"title":{},"body":{"components/GraphsComponent.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["time",{"_index":229,"title":{},"body":{"injectables/AdminpanelDataService.html":{},"interfaces/BatteryData.html":{},"interfaces/RaspberryData.html":{},"interfaces/SolarData.html":{},"interfaces/VolumeData.html":{},"injectables/WeatherDataService.html":{}}}],["timeframe",{"_index":713,"title":{},"body":{"components/GraphsComponent.html":{},"classes/NgbdDropdownBasic.html":{},"components/WebcamComponent.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["timepickers",{"_index":513,"title":{},"body":{"components/GraphsComponent.html":{}}}],["title",{"_index":287,"title":{},"body":{"components/AppComponent.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["today",{"_index":260,"title":{},"body":{"injectables/AdminpanelDataService.html":{},"interfaces/BatteryData.html":{},"injectables/ImageService.html":{},"classes/NgbdDropdownBasic.html":{},"interfaces/RaspberryData.html":{},"interfaces/SolarData.html":{},"interfaces/TemperatureData.html":{},"interfaces/VolumeData.html":{},"injectables/WeatherDataService.html":{},"components/WebcamComponent.html":{},"interfaces/WindData.html":{}}}],["today.getdate",{"_index":262,"title":{},"body":{"injectables/AdminpanelDataService.html":{},"interfaces/BatteryData.html":{},"interfaces/RaspberryData.html":{},"interfaces/SolarData.html":{},"interfaces/VolumeData.html":{}}}],["today.setdate(yesterday",{"_index":263,"title":{},"body":{"injectables/AdminpanelDataService.html":{},"interfaces/BatteryData.html":{},"interfaces/RaspberryData.html":{},"interfaces/SolarData.html":{},"interfaces/VolumeData.html":{}}}],["today=new",{"_index":786,"title":{},"body":{"interfaces/ImageData.html":{},"injectables/ImageService.html":{}}}],["todayimages",{"_index":825,"title":{},"body":{"classes/NgbdDropdownBasic.html":{},"components/WebcamComponent.html":{}}}],["todaypics",{"_index":908,"title":{},"body":{"components/WebcamComponent.html":{}}}],["todaypics:galleryitem",{"_index":824,"title":{},"body":{"classes/NgbdDropdownBasic.html":{},"components/WebcamComponent.html":{}}}],["toggle",{"_index":364,"title":{},"body":{"modules/AppModule.html":{},"components/GraphsComponent.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["toggleslider",{"_index":759,"title":{},"body":{"components/GraphsComponent.html":{}}}],["tok",{"_index":49,"title":{},"body":{"components/AdminComponent.html":{}}}],["token",{"_index":28,"title":{},"body":{"components/AdminComponent.html":{},"injectables/AdminService.html":{},"injectables/AuthService.html":{},"interfaces/AuthToken.html":{}}}],["tokendata",{"_index":78,"title":{},"body":{"components/AdminComponent.html":{}}}],["top",{"_index":150,"title":{},"body":{"components/AdminComponent.html":{},"components/GraphsComponent.html":{},"components/WebcamComponent.html":{}}}],["top'}).load(this.datepics",{"_index":878,"title":{},"body":{"classes/NgbdDropdownBasic.html":{},"components/WebcamComponent.html":{}}}],["top'}).load(this.recentpics",{"_index":851,"title":{},"body":{"classes/NgbdDropdownBasic.html":{},"components/WebcamComponent.html":{}}}],["top'}).load(this.todaypics",{"_index":863,"title":{},"body":{"classes/NgbdDropdownBasic.html":{},"components/WebcamComponent.html":{}}}],["top'}).load(this.yesterdaypics",{"_index":869,"title":{},"body":{"classes/NgbdDropdownBasic.html":{},"components/WebcamComponent.html":{}}}],["transform",{"_index":968,"title":{},"body":{"components/WebcamComponent.html":{}}}],["transformdirectiondates",{"_index":529,"title":{},"body":{"components/GraphsComponent.html":{}}}],["transformdirectiondates(i",{"_index":593,"title":{},"body":{"components/GraphsComponent.html":{}}}],["transformdirectiondates(indexofelement",{"_index":739,"title":{},"body":{"components/GraphsComponent.html":{}}}],["tree",{"_index":8,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/GraphsComponent.html":{},"components/WebcamComponent.html":{}}}],["true",{"_index":57,"title":{},"body":{"components/AdminComponent.html":{},"guards/AuthGuardService.html":{},"injectables/AuthService.html":{},"components/GraphsComponent.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{},"miscellaneous/variables.html":{}}}],["tslib",{"_index":1028,"title":{},"body":{"dependencies.html":{}}}],["type",{"_index":42,"title":{},"body":{"components/AdminComponent.html":{},"injectables/AdminService.html":{},"injectables/AdminpanelDataService.html":{},"components/AppComponent.html":{},"guards/AuthGuardService.html":{},"interfaces/AuthToken.html":{},"interfaces/BatteryData.html":{},"components/GraphsComponent.html":{},"interfaces/ImageData.html":{},"injectables/ImageService.html":{},"interfaces/RaspberryData.html":{},"interfaces/SolarData.html":{},"interfaces/TemperatureData.html":{},"interfaces/VolumeData.html":{},"injectables/WeatherDataService.html":{},"components/WebcamComponent.html":{},"interfaces/WindData.html":{},"coverage.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{},"miscellaneous/variables.html":{}}}],["uhr",{"_index":740,"title":{},"body":{"components/GraphsComponent.html":{}}}],["und",{"_index":544,"title":{},"body":{"components/GraphsComponent.html":{}}}],["undefined",{"_index":1252,"title":{},"body":{"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["unit",{"_index":1066,"title":{},"body":{"index.html":{}}}],["updatechartlabels",{"_index":1183,"title":{},"body":{"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["updategraphs",{"_index":530,"title":{},"body":{"components/GraphsComponent.html":{}}}],["updategraphs(input",{"_index":595,"title":{},"body":{"components/GraphsComponent.html":{}}}],["use",{"_index":1055,"title":{},"body":{"index.html":{}}}],["user",{"_index":192,"title":{},"body":{"injectables/AdminService.html":{}}}],["username",{"_index":29,"title":{},"body":{"components/AdminComponent.html":{}}}],["username\":user",{"_index":205,"title":{},"body":{"injectables/AdminService.html":{},"interfaces/AuthToken.html":{}}}],["value",{"_index":56,"title":{},"body":{"components/AdminComponent.html":{},"injectables/AdminService.html":{},"injectables/AdminpanelDataService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/GraphsComponent.html":{},"injectables/ImageService.html":{},"injectables/WeatherDataService.html":{},"components/WebcamComponent.html":{},"miscellaneous/variables.html":{}}}],["var",{"_index":164,"title":{},"body":{"components/AdminComponent.html":{},"injectables/AdminpanelDataService.html":{},"components/AppComponent.html":{},"interfaces/BatteryData.html":{},"components/GraphsComponent.html":{},"interfaces/ImageData.html":{},"injectables/ImageService.html":{},"interfaces/RaspberryData.html":{},"interfaces/SolarData.html":{},"interfaces/TemperatureData.html":{},"interfaces/VolumeData.html":{},"injectables/WeatherDataService.html":{},"components/WebcamComponent.html":{},"interfaces/WindData.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["variable",{"_index":986,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1255,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":1039,"title":{},"body":{"index.html":{}}}],["vertical",{"_index":756,"title":{},"body":{"components/GraphsComponent.html":{}}}],["via",{"_index":1070,"title":{},"body":{"index.html":{}}}],["void",{"_index":46,"title":{},"body":{"components/AdminComponent.html":{},"components/GraphsComponent.html":{},"components/WebcamComponent.html":{}}}],["volistoggled",{"_index":1112,"title":{},"body":{"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["volt",{"_index":1119,"title":{},"body":{"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["voltage",{"_index":277,"title":{},"body":{"injectables/AdminpanelDataService.html":{},"interfaces/BatteryData.html":{},"interfaces/RaspberryData.html":{},"interfaces/SolarData.html":{},"interfaces/VolumeData.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["volume",{"_index":1138,"title":{},"body":{"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["volume/?start='+this.formatdate(today",{"_index":267,"title":{},"body":{"injectables/AdminpanelDataService.html":{},"interfaces/BatteryData.html":{},"interfaces/RaspberryData.html":{},"interfaces/SolarData.html":{},"interfaces/VolumeData.html":{}}}],["volumechart",{"_index":1205,"title":{},"body":{"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["volumedata",{"_index":282,"title":{"interfaces/VolumeData.html":{}},"body":{"injectables/AdminpanelDataService.html":{},"interfaces/BatteryData.html":{},"interfaces/RaspberryData.html":{},"interfaces/SolarData.html":{},"interfaces/VolumeData.html":{},"coverage.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["von",{"_index":940,"title":{},"body":{"components/WebcamComponent.html":{}}}],["wartung",{"_index":292,"title":{},"body":{"components/AppComponent.html":{}}}],["watt",{"_index":1122,"title":{},"body":{"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["weather",{"_index":422,"title":{},"body":{"modules/AppModule.html":{},"components/GraphsComponent.html":{}}}],["weatherdataservice",{"_index":310,"title":{"injectables/WeatherDataService.html":{}},"body":{"modules/AppModule.html":{},"components/GraphsComponent.html":{},"interfaces/TemperatureData.html":{},"injectables/WeatherDataService.html":{},"interfaces/WindData.html":{},"coverage.html":{},"overview.html":{}}}],["weatherdataservice,imageservice",{"_index":438,"title":{},"body":{"modules/AppModule.html":{}}}],["weatherdatasubscription",{"_index":514,"title":{},"body":{"components/GraphsComponent.html":{}}}],["webcam",{"_index":174,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/GraphsComponent.html":{},"classes/NgbdDropdownBasic.html":{},"components/WebcamComponent.html":{}}}],["webcam.component.html",{"_index":820,"title":{},"body":{"classes/NgbdDropdownBasic.html":{},"components/WebcamComponent.html":{}}}],["webcam.component.scss",{"_index":821,"title":{},"body":{"classes/NgbdDropdownBasic.html":{},"components/WebcamComponent.html":{}}}],["webcam/webcam.component",{"_index":333,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["webcamcomponent",{"_index":173,"title":{"components/WebcamComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/GraphsComponent.html":{},"classes/NgbdDropdownBasic.html":{},"components/WebcamComponent.html":{},"coverage.html":{},"overview.html":{}}}],["wechsel",{"_index":566,"title":{},"body":{"components/GraphsComponent.html":{}}}],["werden",{"_index":89,"title":{},"body":{"components/AdminComponent.html":{}}}],["werte",{"_index":1243,"title":{},"body":{"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["wetterstation",{"_index":1034,"title":{},"body":{"index.html":{}}}],["whether",{"_index":486,"title":{},"body":{"injectables/AuthService.html":{}}}],["white",{"_index":960,"title":{},"body":{"components/WebcamComponent.html":{}}}],["width",{"_index":100,"title":{},"body":{"components/AdminComponent.html":{},"components/GraphsComponent.html":{},"components/WebcamComponent.html":{}}}],["width:85",{"_index":768,"title":{},"body":{"components/GraphsComponent.html":{}}}],["wind",{"_index":627,"title":{},"body":{"components/GraphsComponent.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{},"miscellaneous/variables.html":{}}}],["wind/recent/?start='+this.formatdate(today",{"_index":888,"title":{},"body":{"interfaces/TemperatureData.html":{},"injectables/WeatherDataService.html":{},"interfaces/WindData.html":{}}}],["windcanvas=document.getelementbyid('wind",{"_index":693,"title":{},"body":{"components/GraphsComponent.html":{}}}],["windchart",{"_index":515,"title":{},"body":{"components/GraphsComponent.html":{}}}],["windchart:chart",{"_index":657,"title":{},"body":{"components/GraphsComponent.html":{}}}],["winddata",{"_index":516,"title":{"interfaces/WindData.html":{}},"body":{"components/GraphsComponent.html":{},"interfaces/TemperatureData.html":{},"injectables/WeatherDataService.html":{},"interfaces/WindData.html":{},"coverage.html":{}}}],["winddirtime",{"_index":779,"title":{},"body":{"components/GraphsComponent.html":{}}}],["windgeschwindigkeit",{"_index":734,"title":{},"body":{"components/GraphsComponent.html":{}}}],["window.innerwidth",{"_index":662,"title":{},"body":{"components/GraphsComponent.html":{}}}],["windrichtung",{"_index":735,"title":{},"body":{"components/GraphsComponent.html":{}}}],["windrichtungen",{"_index":736,"title":{},"body":{"components/GraphsComponent.html":{}}}],["windrichtungpfeils",{"_index":584,"title":{},"body":{"components/GraphsComponent.html":{}}}],["wird",{"_index":542,"title":{},"body":{"components/GraphsComponent.html":{}}}],["wurde",{"_index":1110,"title":{},"body":{"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["wählen",{"_index":943,"title":{},"body":{"components/WebcamComponent.html":{}}}],["yaxes",{"_index":600,"title":{},"body":{"components/GraphsComponent.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["yaxisid",{"_index":1127,"title":{},"body":{"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["year",{"_index":255,"title":{},"body":{"injectables/AdminpanelDataService.html":{},"interfaces/BatteryData.html":{},"interfaces/ImageData.html":{},"injectables/ImageService.html":{},"interfaces/RaspberryData.html":{},"interfaces/SolarData.html":{},"interfaces/TemperatureData.html":{},"interfaces/VolumeData.html":{},"injectables/WeatherDataService.html":{},"interfaces/WindData.html":{}}}],["yesterday",{"_index":261,"title":{},"body":{"injectables/AdminpanelDataService.html":{},"interfaces/BatteryData.html":{},"interfaces/RaspberryData.html":{},"interfaces/SolarData.html":{},"interfaces/VolumeData.html":{},"components/WebcamComponent.html":{}}}],["yesterday.setdate(today.getdate",{"_index":792,"title":{},"body":{"interfaces/ImageData.html":{},"injectables/ImageService.html":{}}}],["yesterday:gallery,public",{"_index":837,"title":{},"body":{"classes/NgbdDropdownBasic.html":{},"components/WebcamComponent.html":{}}}],["yesterday=new",{"_index":791,"title":{},"body":{"interfaces/ImageData.html":{},"injectables/ImageService.html":{}}}],["yesterdayimages",{"_index":829,"title":{},"body":{"classes/NgbdDropdownBasic.html":{},"components/WebcamComponent.html":{}}}],["yesterdaypics",{"_index":828,"title":{},"body":{"classes/NgbdDropdownBasic.html":{},"components/WebcamComponent.html":{}}}],["zeitraum",{"_index":1245,"title":{},"body":{"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["zone.js",{"_index":1030,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":311,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["zu",{"_index":582,"title":{},"body":{"components/GraphsComponent.html":{}}}],["zugeordnet",{"_index":88,"title":{},"body":{"components/AdminComponent.html":{}}}],["zwischen",{"_index":575,"title":{},"body":{"components/GraphsComponent.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AdminComponent.html":{"url":"components/AdminComponent.html","title":"component - AdminComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AdminComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/admin/admin.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-admin\n            \n\n            \n                styleUrls\n                ./admin.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./admin.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                adminService\n                            \n                            \n                                adminSubscription\n                            \n                            \n                                errors\n                            \n                            \n                                loginError\n                            \n                            \n                                password\n                            \n                            \n                                token\n                            \n                            \n                                username\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getToken\n                            \n                            \n                                logToken\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(adminService: AdminService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/admin/admin.component.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        adminService\n                                                  \n                                                        \n                                                                        AdminService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getToken\n                        \n                        \n                    \n                \n            \n            \n                \ngetToken()\n                \n            \n\n\n            \n                \n                    Defined in src/app/admin/admin.component.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            logToken\n                        \n                        \n                    \n                \n            \n            \n                \nlogToken(tok)\n                \n            \n\n\n            \n                \n                    Defined in src/app/admin/admin.component.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    tok\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/admin/admin.component.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            adminService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         AdminService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/admin/admin.component.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            adminSubscription\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/admin/admin.component.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            errors\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/admin/admin.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loginError\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/admin/admin.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            password\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/admin/admin.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            token\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         AuthToken[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/admin/admin.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            username\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/admin/admin.component.ts:18\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { AuthToken, AdminService } from \"../admin.service\";\nimport { Router } from '@angular/router';\nimport { BehaviorSubject, Subscription } from 'rxjs';\n\n\n@Component({\n  selector: 'app-admin',\n  templateUrl: './admin.component.html',\n  styleUrls: ['./admin.component.scss']\n  \n})\nexport class AdminComponent implements OnInit {\n\n  adminService: AdminService;\n  adminSubscription: Subscription;\n  token: AuthToken[] = [];\n  username: string;\n  password: string;\n  loginError: boolean = true;\n  errors;\n\n  constructor(adminService: AdminService, private router: Router){\n    this.adminService = adminService;\n  }\n\n  ngOnInit() {\n    this.router.navigate(['adminpanel']);\n  }\n\n  getToken(){\n    this.adminSubscription =\n      this.adminService.provideToken(this.username, this.password).subscribe(\n        (tokendata) => {\n          this.loginError = true;\n          this.logToken(tokendata);\n        }, error => {\n          this.loginError = false;\n          this.errors = error; \n          console.log(\"Fehler: Account konnte nicht zugeordnet werden\");\n        }\n      );\n  }\n\n  logToken(tok){\n    this.token=tok;\n    localStorage.setItem(\"weatherToken\",this.token[\"access\"]);\n    //localStorage.removeItem(\"weatherToken\");\n    console.log(\"Token:\"+this.token);\n    this.router.navigate(['adminpanel']);\n  }\n  \n}\n\n    \n\n    \n        \n\n\n  \n  \n    Benutzername\n    \n\n    Passwort\n    \n\n    \n      Anmelden\n    \n    \n    \n\n\n  \n  Login fehlgeschlagen!\n\n\n\n\n    \n\n    \n                \n                    ./admin.component.scss\n                \n                \n\n/* Full-width inputs */\ninput[type=text], input[type=password] {\n  width: 100%;\n  padding: 12px 20px;\n  margin: 8px 0;\n  text-align: left;\n  display: block;\n  border: 1px solid #ccc;\n  box-sizing: border-box;\n}\n\nmat-card {\n  margin: 0 auto;\n  width: 30%;\n}\n\n.login{\n  display: flex;\n  justify-content: center;\n  margin: 0 auto;\n}\n/* Extra style for the cancel button (red) */\n.cancelbtn {\n  width: 3em;\n  padding: 10px 18px;\n  background-color: #f44336;\n}\n\n/* Add padding to containers */\n.container {\n  padding: 16px;\n}\n\n/* The \"Forgot password\" text */\nspan.psw {\n  float: right;\n  padding-top: 16px;\n}\n\n/* Change styles for span and cancel button on extra small screens */\n@media screen and (max-width: 300px) {\n  span.psw {\n    display: block;\n    float: none;\n  }\n  .cancelbtn {\n    width: 100%;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '        Benutzername        Passwort              Anmelden                Login fehlgeschlagen!'\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AdminpanelComponent', 'selector': 'app-adminpanel'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'GraphsComponent', 'selector': 'app-graphs'},{'name': 'WebcamComponent', 'selector': 'app-webcam'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AdminComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AdminService.html":{"url":"injectables/AdminService.html","title":"injectable - AdminService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AdminService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/admin.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                apiUrl\n                            \n                            \n                                    Private\n                                error\n                            \n                            \n                                    Private\n                                http\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                provideToken\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/admin.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            provideToken\n                        \n                        \n                    \n                \n            \n            \n                \nprovideToken(user, pwd)\n                \n            \n\n\n            \n                \n                    Defined in src/app/admin.service.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    pwd\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            apiUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'http://localhost:8000/api/'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/admin.service.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            error\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/admin.service.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            http\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         HttpClient\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/admin.service.ts:11\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {HttpClient, HttpErrorResponse} from \"@angular/common/http\";\nimport { catchError } from 'rxjs/operators'; \n\n@Injectable({\n    providedIn: 'root'\n})\n\nexport class AdminService {\n    private apiUrl = 'http://localhost:8000/api/';\n    private http: HttpClient;\n    private error;\n\n    constructor(http: HttpClient) {\n      this.http = http;\n    }\n\n    provideToken(user, pwd){\n        return this.http.post(this.apiUrl + 'token/', {\"username\":user, \"password\":pwd});;\n    }\n}\n\nexport interface AuthToken {\n    refresh: String;\n    access: String;\n  }\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AdminpanelDataService.html":{"url":"injectables/AdminpanelDataService.html","title":"injectable - AdminpanelDataService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AdminpanelDataService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/adminpanel-data.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                apiUrl\n                            \n                            \n                                    Private\n                                http\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                formatDate\n                            \n                            \n                                getBatteryData\n                            \n                            \n                                getBatteryDataFrame\n                            \n                            \n                                getRaspberryData\n                            \n                            \n                                getRaspberryDataFrame\n                            \n                            \n                                getSolarData\n                            \n                            \n                                getSolarDataFrame\n                            \n                            \n                                getVolumeData\n                            \n                            \n                                getVolumeDataFrame\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/adminpanel-data.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            formatDate\n                        \n                        \n                    \n                \n            \n            \n                \nformatDate(date: Date)\n                \n            \n\n\n            \n                \n                    Defined in src/app/adminpanel-data.service.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    date\n                                    \n                                                Date\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getBatteryData\n                        \n                        \n                    \n                \n            \n            \n                \ngetBatteryData(time: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/adminpanel-data.service.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    time\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getBatteryDataFrame\n                        \n                        \n                    \n                \n            \n            \n                \ngetBatteryDataFrame(start: Date, end: Date)\n                \n            \n\n\n            \n                \n                    Defined in src/app/adminpanel-data.service.ts:65\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    start\n                                    \n                                                Date\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    end\n                                    \n                                                Date\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getRaspberryData\n                        \n                        \n                    \n                \n            \n            \n                \ngetRaspberryData(time: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/adminpanel-data.service.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    time\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getRaspberryDataFrame\n                        \n                        \n                    \n                \n            \n            \n                \ngetRaspberryDataFrame(start: Date, end: Date)\n                \n            \n\n\n            \n                \n                    Defined in src/app/adminpanel-data.service.ts:69\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    start\n                                    \n                                                Date\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    end\n                                    \n                                                Date\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getSolarData\n                        \n                        \n                    \n                \n            \n            \n                \ngetSolarData(time: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/adminpanel-data.service.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    time\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getSolarDataFrame\n                        \n                        \n                    \n                \n            \n            \n                \ngetSolarDataFrame(start: Date, end: Date)\n                \n            \n\n\n            \n                \n                    Defined in src/app/adminpanel-data.service.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    start\n                                    \n                                                Date\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    end\n                                    \n                                                Date\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getVolumeData\n                        \n                        \n                    \n                \n            \n            \n                \ngetVolumeData(time: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/adminpanel-data.service.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    time\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getVolumeDataFrame\n                        \n                        \n                    \n                \n            \n            \n                \ngetVolumeDataFrame(start: Date, end: Date)\n                \n            \n\n\n            \n                \n                    Defined in src/app/adminpanel-data.service.ts:73\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    start\n                                    \n                                                Date\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    end\n                                    \n                                                Date\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            apiUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'http://localhost:8000/api/'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/adminpanel-data.service.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            http\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         HttpClient\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/adminpanel-data.service.ts:9\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {HttpClient} from \"@angular/common/http\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AdminpanelDataService {\n  private apiUrl = 'http://localhost:8000/api/';\n  private http: HttpClient;\n\n  constructor(http: HttpClient) {\n    this.http = http;\n  }\n\n  formatDate(date: Date) {\n    var d = new Date(date),\n        month = '' + (d.getMonth() + 1),\n        day = '' + d.getDate(),\n        year = d.getFullYear();\n\n    if (month.length (this.apiUrl + 'solarcell/aggregate/?start='+this.formatDate(today));\n  }\n\n  getBatteryData(time: number){\n    let today=  new Date();\n    let yesterday = today.getDate()-time;\n    today.setDate(yesterday);\n  \n  return  this.http.get(this.apiUrl + 'battery/aggregate/?start='+this.formatDate(today));\n  }\n\n  getRaspberryData(time: number){\n    let today=  new Date();\n    let yesterday = today.getDate()-time;\n    today.setDate(yesterday);\n  \n  return  this.http.get(this.apiUrl + 'solarcell/aggregate/?start='+this.formatDate(today));\n  }\n\n  getVolumeData(time: number){\n    let today=  new Date();\n    let yesterday = today.getDate()-time;\n    today.setDate(yesterday);\n  \n  return  this.http.get(this.apiUrl + 'data-volume/?start='+this.formatDate(today));\n  }\n\n  getSolarDataFrame(start:Date,end:Date){\n    return this.http.get(this.apiUrl+'solarcell/aggregate/?start='+this.formatDate(start)+'&end='+this.formatDate(end));\n  }\n\n  getBatteryDataFrame(start:Date,end:Date){\n    return this.http.get(this.apiUrl+'battery/aggregate/?start='+this.formatDate(start)+'&end='+this.formatDate(end));\n  }\n\n  getRaspberryDataFrame(start:Date,end:Date){\n    return this.http.get(this.apiUrl+'solarcell/aggregate/?start='+this.formatDate(start)+'&end='+this.formatDate(end));\n  }\n\n  getVolumeDataFrame(start:Date,end:Date){\n    return this.http.get(this.apiUrl+'solarcell/aggregate/?start='+this.formatDate(start)+'&end='+this.formatDate(end));\n  }\n}\n\nexport interface SolarData {\n  id: Number,\n  current: Number,\n  voltage: Number,\n  measure_time: Date\n}\n\nexport interface BatteryData {\n  id: Number,\n  current: Number,\n  voltage: Number,\n  degrees: Number,\n  measure_time: Date\n}\n\nexport interface RaspberryData {\n  id: Number,\n  current: Number,\n  voltage: Number,\n  measure_time: Date\n}\n\nexport interface VolumeData {\n  id: Number,\n  image_size: Number\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                ./app.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'SE-draft'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:11\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'SE-draft';\n}\n\n    \n\n    \n        \n\n  \n    \n      \n          \n      \n      \n      \n      \n         Graphen \n         Webcam \n         Wartung \n      \n    \n  \n\n\n\n\n  \n\n\n    \n\n    \n                \n                    ./app.component.scss\n                \n                .menu-spacer{\n    flex: 1 1 auto;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                       Graphen          Webcam          Wartung               '\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AdminpanelComponent', 'selector': 'app-adminpanel'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'GraphsComponent', 'selector': 'app-graphs'},{'name': 'WebcamComponent', 'selector': 'app-webcam'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAdminComponent\n\nAdminComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAdminComponent->AppModule\n\n\n\n\n\nAdminpanelComponent\n\nAdminpanelComponent\n\nAppModule -->\n\nAdminpanelComponent->AppModule\n\n\n\n\n\nAppComponent\n\nAppComponent\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nGraphsComponent\n\nGraphsComponent\n\nAppModule -->\n\nGraphsComponent->AppModule\n\n\n\n\n\nWebcamComponent\n\nWebcamComponent\n\nAppModule -->\n\nWebcamComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nImageService\n\nImageService\n\nAppModule -->\n\nImageService->AppModule\n\n\n\n\n\nWeatherDataService\n\nWeatherDataService\n\nAppModule -->\n\nWeatherDataService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AdminComponent\n                        \n                        \n                            AdminpanelComponent\n                        \n                        \n                            AppComponent\n                        \n                        \n                            GraphsComponent\n                        \n                        \n                            WebcamComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            ImageService\n                        \n                        \n                            WeatherDataService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppRoutingModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {BrowserModule} from '@angular/platform-browser';\nimport {NgModule} from '@angular/core';\nimport {MDBBootstrapModule,} from 'angular-bootstrap-md';\nimport {MatCardModule} from '@angular/material/card';\nimport {MatDatepickerModule} from '@angular/material/datepicker';\nimport {MatFormFieldModule} from '@angular/material/form-field';\nimport {AppRoutingModule} from './app-routing.module';\nimport {AppComponent} from './app.component';\nimport {GraphsComponent} from './graphs/graphs.component';\nimport {WebcamComponent} from './webcam/webcam.component';\nimport {AdminComponent} from './admin/admin.component';\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\n\nimport {FormsModule} from '@angular/forms';\nimport {ClipboardModule} from '@angular/cdk/clipboard';\nimport {DragDropModule} from '@angular/cdk/drag-drop';\nimport {PortalModule} from '@angular/cdk/portal';\nimport {ScrollingModule} from '@angular/cdk/scrolling';\nimport {CdkStepperModule} from '@angular/cdk/stepper';\nimport {CdkTableModule} from '@angular/cdk/table';\nimport {CdkTreeModule} from '@angular/cdk/tree';\nimport {MatAutocompleteModule} from '@angular/material/autocomplete';\nimport {MatBadgeModule} from '@angular/material/badge';\nimport {MatBottomSheetModule} from '@angular/material/bottom-sheet';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatButtonToggleModule} from '@angular/material/button-toggle';\n\n\nimport {MatCheckboxModule} from '@angular/material/checkbox';\nimport {MatChipsModule} from '@angular/material/chips';\nimport {MatStepperModule} from '@angular/material/stepper';\nimport {MatDialogModule} from '@angular/material/dialog';\nimport {MatDividerModule} from '@angular/material/divider';\nimport {MatExpansionModule} from '@angular/material/expansion';\nimport {MatGridListModule} from '@angular/material/grid-list';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatListModule} from '@angular/material/list';\nimport {MatMenuModule} from '@angular/material/menu';\nimport {MatNativeDateModule, MatRippleModule} from '@angular/material/core';\nimport {MatPaginatorModule} from '@angular/material/paginator';\nimport {MatProgressBarModule} from '@angular/material/progress-bar';\nimport {MatProgressSpinnerModule} from '@angular/material/progress-spinner';\nimport {MatRadioModule} from '@angular/material/radio';\nimport {MatSelectModule} from '@angular/material/select';\nimport {MatSidenavModule} from '@angular/material/sidenav';\nimport {MatSliderModule} from '@angular/material/slider';\nimport {MatSlideToggleModule} from '@angular/material/slide-toggle';\nimport {MatSnackBarModule} from '@angular/material/snack-bar';\nimport {MatSortModule} from '@angular/material/sort';\nimport {MatTableModule} from '@angular/material/table';\nimport {MatTabsModule} from '@angular/material/tabs';\nimport {MatToolbarModule} from '@angular/material/toolbar';\nimport {MatTooltipModule} from '@angular/material/tooltip';\nimport {MatTreeModule} from '@angular/material/tree';\nimport {WeatherDataService} from \"./weather-data.service\";\nimport {HttpClient, HttpClientModule} from \"@angular/common/http\";\nimport { ImageService } from './image-data.service';\nimport { AdminpanelComponent } from './adminpanel/adminpanel.component';\nimport { AuthGuardService} from './auth-guard.service';\nimport { GalleryModule } from '@ngx-gallery/core';\nimport { LightboxModule } from '@ngx-gallery/lightbox'\nimport { GallerizeModule } from '@ngx-gallery/gallerize';\n;\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    GraphsComponent,\n    WebcamComponent,\n    AdminComponent,\n    AdminpanelComponent\n  ],\n  imports: [\n    GallerizeModule,\n    GalleryModule,\n    LightboxModule,\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    MDBBootstrapModule.forRoot(),\n    FormsModule,\n    BrowserAnimationsModule,\n    MatCardModule,\n    MatDatepickerModule,\n    MatFormFieldModule,\n    ClipboardModule,\n    CdkStepperModule,\n    CdkTableModule,\n    CdkTreeModule,\n    DragDropModule,\n    MatAutocompleteModule,\n    MatBadgeModule,\n    MatBottomSheetModule,\n    MatButtonModule,\n    MatButtonToggleModule,\n    MatCardModule,\n    MatCheckboxModule,\n    MatChipsModule,\n    MatStepperModule,\n    MatDatepickerModule,\n    MatDialogModule,\n    MatDividerModule,\n    MatExpansionModule,\n    MatGridListModule,\n    MatIconModule,\n    MatInputModule,\n    MatListModule,\n    MatMenuModule,\n    MatNativeDateModule,\n    MatPaginatorModule,\n    MatProgressBarModule,\n    MatProgressSpinnerModule,\n    MatRadioModule,\n    MatRippleModule,\n    MatSelectModule,\n    MatSidenavModule,\n    MatSliderModule,\n    MatSlideToggleModule,\n    MatSnackBarModule,\n    MatSortModule,\n    MatTableModule,\n    MatTabsModule,\n    MatToolbarModule,\n    MatTooltipModule,\n    MatTreeModule,\n    PortalModule,\n    ScrollingModule,\n\n  ],\n  providers: [WeatherDataService,ImageService, HttpClient, AuthGuardService],\n  bootstrap: [AppComponent]\n\n})\nexport class AppModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AppPage.html":{"url":"classes/AppPage.html","title":"class - AppPage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AppPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            e2e/src/app.po.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getTitleText\n                            \n                            \n                                navigateTo\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getTitleText\n                        \n                        \n                    \n                \n            \n            \n                \ngetTitleText()\n                \n            \n\n\n            \n                \n                    Defined in e2e/src/app.po.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            navigateTo\n                        \n                        \n                    \n                \n            \n            \n                \nnavigateTo()\n                \n            \n\n\n            \n                \n                    Defined in e2e/src/app.po.ts:4\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { browser, by, element } from 'protractor';\n\nexport class AppPage {\n  navigateTo() {\n    return browser.get(browser.baseUrl) as Promise;\n  }\n\n  getTitleText() {\n    return element(by.css('app-root .content span')).getText() as Promise;\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule, CanActivate } from '@angular/router';\nimport { AuthGuardService as AuthGuard} from './auth-guard.service';\n\nimport { GraphsComponent } from './graphs/graphs.component'; \nimport { WebcamComponent } from './webcam/webcam.component'; \nimport { AdminComponent } from './admin/admin.component';\nimport { AdminpanelComponent } from './adminpanel/adminpanel.component'; // Add this\n\nconst routes: Routes = [\n  { path: '', component: GraphsComponent },              // Add this\n  { path: 'webcam', component: WebcamComponent },\n  { path: 'admin', component: AdminComponent },\n  { path: 'adminpanel', component: AdminpanelComponent, canActivate: [AuthGuard] }\n\n\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule],\n  providers: [AuthGuard]\n})\nexport class AppRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/AuthGuardService.html":{"url":"guards/AuthGuardService.html","title":"guard - AuthGuardService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    AuthGuardService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/auth-guard.service.ts\n            \n\n\n\n\n\n                \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                auth\n                            \n                            \n                                    Public\n                                router\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(auth: AuthService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth-guard.service.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        auth\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            canActivate\n                        \n                        \n                    \n                \n            \n            \n                \ncanActivate()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth-guard.service.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable } from '@angular/core';\nimport { Router, CanActivate } from '@angular/router';\nimport { AuthService } from './auth.service';\n\n@Injectable({providedIn: 'root'})\nexport class AuthGuardService implements CanActivate {\n  constructor(public auth: AuthService, public router: Router) {}\n  canActivate(): boolean {\n    if (!this.auth.isAuthenticated()) {\n      this.router.navigate(['admin']);\n      return false;\n    }\n    return true;\n  }\n}\n        \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/auth.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                jwtHelper\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                isAuthenticated\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/auth.service.ts:8\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            isAuthenticated\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isAuthenticated()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth.service.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            jwtHelper\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new JwtHelperService()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth.service.ts:8\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { JwtHelperService } from '@auth0/angular-jwt';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class AuthService {\n  public jwtHelper = new JwtHelperService();\n  constructor() {}\n  // ...\n  public isAuthenticated(): boolean {\n    const token = localStorage.getItem('weatherToken');\n    console.log(token);\n    // Check whether the token is expired and return\n    // true or false\n    //console.log(this.jwtHelper.getTokenExpirationDate(\"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ0b2tlbl90eXBlIjoiYWNjZXNzIiwiZXhwIjoxNTk1NjAwMjc2LCJqdGkiOiJkNDI4MzUwOWM4YjM0Mzc3OWE1ZjkxMDA4YmJlYzA3MSIsInVzZXJfaWQiOjF9.yJNowg-P0SkTXgnN6dxz5rw3PRVZZ59Pk6EI6oq-TBY\"));\n    console.log(this.jwtHelper.getTokenExpirationDate(token));\n    return !this.jwtHelper.isTokenExpired(token);\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AuthToken.html":{"url":"interfaces/AuthToken.html","title":"interface - AuthToken","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  AuthToken\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/admin.service.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        access\n                                \n                                \n                                        refresh\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        access\n                                    \n                                \n                                \n                                    \n                                        access:         String\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         String\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        refresh\n                                    \n                                \n                                \n                                    \n                                        refresh:         String\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         String\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {HttpClient, HttpErrorResponse} from \"@angular/common/http\";\nimport { catchError } from 'rxjs/operators'; \n\n@Injectable({\n    providedIn: 'root'\n})\n\nexport class AdminService {\n    private apiUrl = 'http://localhost:8000/api/';\n    private http: HttpClient;\n    private error;\n\n    constructor(http: HttpClient) {\n      this.http = http;\n    }\n\n    provideToken(user, pwd){\n        return this.http.post(this.apiUrl + 'token/', {\"username\":user, \"password\":pwd});;\n    }\n}\n\nexport interface AuthToken {\n    refresh: String;\n    access: String;\n  }\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/BatteryData.html":{"url":"interfaces/BatteryData.html","title":"interface - BatteryData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  BatteryData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/adminpanel-data.service.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        current\n                                \n                                \n                                        degrees\n                                \n                                \n                                        id\n                                \n                                \n                                        measure_time\n                                \n                                \n                                        voltage\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        current\n                                    \n                                \n                                \n                                    \n                                        current:         Number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        degrees\n                                    \n                                \n                                \n                                    \n                                        degrees:         Number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         Number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        measure_time\n                                    \n                                \n                                \n                                    \n                                        measure_time:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        voltage\n                                    \n                                \n                                \n                                    \n                                        voltage:         Number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {HttpClient} from \"@angular/common/http\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AdminpanelDataService {\n  private apiUrl = 'http://localhost:8000/api/';\n  private http: HttpClient;\n\n  constructor(http: HttpClient) {\n    this.http = http;\n  }\n\n  formatDate(date: Date) {\n    var d = new Date(date),\n        month = '' + (d.getMonth() + 1),\n        day = '' + d.getDate(),\n        year = d.getFullYear();\n\n    if (month.length (this.apiUrl + 'solarcell/aggregate/?start='+this.formatDate(today));\n  }\n\n  getBatteryData(time: number){\n    let today=  new Date();\n    let yesterday = today.getDate()-time;\n    today.setDate(yesterday);\n  \n  return  this.http.get(this.apiUrl + 'battery/aggregate/?start='+this.formatDate(today));\n  }\n\n  getRaspberryData(time: number){\n    let today=  new Date();\n    let yesterday = today.getDate()-time;\n    today.setDate(yesterday);\n  \n  return  this.http.get(this.apiUrl + 'solarcell/aggregate/?start='+this.formatDate(today));\n  }\n\n  getVolumeData(time: number){\n    let today=  new Date();\n    let yesterday = today.getDate()-time;\n    today.setDate(yesterday);\n  \n  return  this.http.get(this.apiUrl + 'data-volume/?start='+this.formatDate(today));\n  }\n\n  getSolarDataFrame(start:Date,end:Date){\n    return this.http.get(this.apiUrl+'solarcell/aggregate/?start='+this.formatDate(start)+'&end='+this.formatDate(end));\n  }\n\n  getBatteryDataFrame(start:Date,end:Date){\n    return this.http.get(this.apiUrl+'battery/aggregate/?start='+this.formatDate(start)+'&end='+this.formatDate(end));\n  }\n\n  getRaspberryDataFrame(start:Date,end:Date){\n    return this.http.get(this.apiUrl+'solarcell/aggregate/?start='+this.formatDate(start)+'&end='+this.formatDate(end));\n  }\n\n  getVolumeDataFrame(start:Date,end:Date){\n    return this.http.get(this.apiUrl+'solarcell/aggregate/?start='+this.formatDate(start)+'&end='+this.formatDate(end));\n  }\n}\n\nexport interface SolarData {\n  id: Number,\n  current: Number,\n  voltage: Number,\n  measure_time: Date\n}\n\nexport interface BatteryData {\n  id: Number,\n  current: Number,\n  voltage: Number,\n  degrees: Number,\n  measure_time: Date\n}\n\nexport interface RaspberryData {\n  id: Number,\n  current: Number,\n  voltage: Number,\n  measure_time: Date\n}\n\nexport interface VolumeData {\n  id: Number,\n  image_size: Number\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/GraphsComponent.html":{"url":"components/GraphsComponent.html","title":"component - GraphsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  GraphsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/graphs/graphs.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-graphs\n            \n\n            \n                styleUrls\n                ./graphs.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./graphs.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                breakpoint\n                            \n                            \n                                chartoptions\n                            \n                            \n                                charttempdata\n                            \n                            \n                                chartwindata\n                            \n                            \n                                chosenbtn\n                            \n                            \n                                enddateEvents\n                            \n                            \n                                extendedModeStatus\n                            \n                            \n                                lastHoursWind\n                            \n                            \n                                recentTemp\n                            \n                            \n                                recentWindDir\n                            \n                            \n                                recentWindSpeed\n                            \n                            \n                                startdateEvents\n                            \n                            \n                                tempchart\n                            \n                            \n                                temperatureData\n                            \n                            \n                                timepickers\n                            \n                            \n                                weatherDataService\n                            \n                            \n                                weatherDataSubscription\n                            \n                            \n                                windchart\n                            \n                            \n                                windData\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addEndEvent\n                            \n                            \n                                addStartEvent\n                            \n                            \n                                applyTimeframe\n                            \n                            \n                                buildTempChart\n                            \n                            \n                                buildWindChart\n                            \n                            \n                                getRecentValues\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onbtnChange\n                            \n                            \n                                onChange\n                            \n                            \n                                onImageLoad\n                            \n                            \n                                onResize\n                            \n                            \n                                rotateDirCardArrow\n                            \n                            \n                                transformDirectionDates\n                            \n                            \n                                updateGraphs\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(weatherDataService: WeatherDataService)\n                    \n                \n                        \n                            \n                                Defined in src/app/graphs/graphs.component.ts:81\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        weatherDataService\n                                                  \n                                                        \n                                                                        WeatherDataService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            addEndEvent\n                        \n                        \n                    \n                \n            \n            \n                \naddEndEvent(event: MatDatepickerInputEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/app/graphs/graphs.component.ts:214\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                            MatDatepickerInputEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            addStartEvent\n                        \n                        \n                    \n                \n            \n            \n                \naddStartEvent(event: MatDatepickerInputEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/app/graphs/graphs.component.ts:208\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                            MatDatepickerInputEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            applyTimeframe\n                        \n                        \n                    \n                \n            \n            \n                \napplyTimeframe()\n                \n            \n\n\n            \n                \n                    Defined in src/app/graphs/graphs.component.ts:222\n                \n            \n\n\n            \n                \n                    Neuer Datensatz wird requestet und der Temperaturgraph neu aufgebaut\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            buildTempChart\n                        \n                        \n                    \n                \n            \n            \n                \nbuildTempChart()\n                \n            \n\n\n            \n                \n                    Defined in src/app/graphs/graphs.component.ts:142\n                \n            \n\n\n            \n                \n                    Initialisiert die gefetchten Daten und generiert einen neuen Graphen \n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            buildWindChart\n                        \n                        \n                    \n                \n            \n            \n                \nbuildWindChart()\n                \n            \n\n\n            \n                \n                    Defined in src/app/graphs/graphs.component.ts:157\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getRecentValues\n                        \n                        \n                    \n                \n            \n            \n                \ngetRecentValues()\n                \n            \n\n\n            \n                \n                    Defined in src/app/graphs/graphs.component.ts:107\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/graphs/graphs.component.ts:101\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/graphs/graphs.component.ts:89\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onbtnChange\n                        \n                        \n                    \n                \n            \n            \n                \nonbtnChange(event: MatRadioChange)\n                \n            \n\n\n            \n                \n                    Defined in src/app/graphs/graphs.component.ts:203\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                            MatRadioChange\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Event beim Wechsel der Tagesanzahl des Graphen\nLädt die Graphen beim Wechsel der Anzahl der Tage neu.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onChange\n                        \n                        \n                    \n                \n            \n            \n                \nonChange(event: MatSlideToggleChange)\n                \n            \n\n\n            \n                \n                    Defined in src/app/graphs/graphs.component.ts:193\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                            MatSlideToggleChange\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Event beim Wechsel zwischen \"Erweiterten Modus\" und den Radiobuttons\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onImageLoad\n                        \n                        \n                    \n                \n            \n            \n                \nonImageLoad(i)\n                \n            \n\n\n            \n                \n                    Defined in src/app/graphs/graphs.component.ts:173\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    i\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Index des zu Rotierenden Windrichtungpfeils\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onResize\n                        \n                        \n                    \n                \n            \n            \n                \nonResize(event)\n                \n            \n\n\n            \n                \n                    Defined in src/app/graphs/graphs.component.ts:246\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    event\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Resize Event\nHandler for Resizing\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            rotateDirCardArrow\n                        \n                        \n                    \n                \n            \n            \n                \nrotateDirCardArrow(angle, id)\n                \n            \n\n\n            \n                \n                    Defined in src/app/graphs/graphs.component.ts:180\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    angle\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    id\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            transformDirectionDates\n                        \n                        \n                    \n                \n            \n            \n                \ntransformDirectionDates(i)\n                \n            \n\n\n            \n                \n                    Defined in src/app/graphs/graphs.component.ts:184\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    i\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateGraphs\n                        \n                        \n                    \n                \n            \n            \n                \nupdateGraphs(input)\n                \n            \n\n\n            \n                \n                    Defined in src/app/graphs/graphs.component.ts:129\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    input\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            breakpoint\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/graphs/graphs.component.ts:81\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            chartoptions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    scales: {\n      yAxes: [{\n        ticks: {\n          beginAtZero: false\n        }\n      }]\n    }\n  }\n                        \n                    \n                        \n                            \n                                    Defined in src/app/graphs/graphs.component.ts:71\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            charttempdata\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n      labels: this.temperatureData.map(data => new Date(data.measure_time).toLocaleString([],{month:'2-digit',day:'2-digit',hour:'2-digit',minute:'2-digit'})),\n      datasets: [{\n        label: 'Temperatur in C°',\n        data: this.temperatureData.map(data => data.degrees),\n        fill: true,\n        backgroundColor: \n          'rgba(255, 99, 132, 0.2)',\n        borderColor:\n          'rgba(255, 99, 132, 1)',\n        borderWidth: 0\n      }]\n    }\n                        \n                    \n                        \n                            \n                                    Defined in src/app/graphs/graphs.component.ts:42\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            chartwindata\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    labels: this.windData.map(datawind => new Date(datawind.measure_time).toLocaleString()),\n    datasets: [{\n      label: 'Wind in m/s',\n      data: this.windData.map(datawind => datawind.speed),\n      fill: true,\n      backgroundColor:\n        'rgba(128, 255, 132, 0.2)'\n      ,\n      borderColor:\n        'rgba(128, 255, 132, 1)',\n      borderWidth: 0\n    }]\n}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/graphs/graphs.component.ts:56\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            chosenbtn\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 1\n                        \n                    \n                        \n                            \n                                    Defined in src/app/graphs/graphs.component.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            enddateEvents\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/graphs/graphs.component.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            extendedModeStatus\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     BehaviorSubject\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/graphs/graphs.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            lastHoursWind\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         WindData[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/graphs/graphs.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            recentTemp\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/graphs/graphs.component.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            recentWindDir\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/graphs/graphs.component.ts:38\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            recentWindSpeed\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/graphs/graphs.component.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            startdateEvents\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/graphs/graphs.component.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            tempchart\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Chart\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/graphs/graphs.component.ts:40\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            temperatureData\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         TemperatureData[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/graphs/graphs.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            timepickers\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     number[]\n\n                        \n                    \n                    \n                        \n                            Default value : [1, 3, 7, 14, 21]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/graphs/graphs.component.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            weatherDataService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         WeatherDataService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/graphs/graphs.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            weatherDataSubscription\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/graphs/graphs.component.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            windchart\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Chart\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/graphs/graphs.component.ts:41\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            windData\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         WindData[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/graphs/graphs.component.ts:22\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, OnDestroy, OnChanges,ViewChild } from '@angular/core';\n\nimport { Chart } from 'chart.js';\nimport { TemperatureData, WeatherDataService, WindData } from \"../weather-data.service\";\nimport { BehaviorSubject, Subscription } from 'rxjs';\nimport { MatSlideToggleChange } from '@angular/material/slide-toggle';\nimport { MatRadioChange, MatRadioButton } from '@angular/material/radio';\nimport { MatDatepickerInputEvent } from '@angular/material/datepicker';\n\n\n\n\n\n@Component({\n  selector: 'app-graphs',\n  templateUrl: './graphs.component.html',\n  styleUrls: ['./graphs.component.scss']\n})\nexport class GraphsComponent implements OnInit, OnDestroy {\n  weatherDataService: WeatherDataService;\n  temperatureData: TemperatureData[] = [];\n  windData: WindData[] = [];\n  lastHoursWind: WindData[] = [];\n  extendedModeStatus: BehaviorSubject;\n\n\n  weatherDataSubscription: Subscription;\n\n\n  chosenbtn: number = 1;\n  timepickers: number[] = [1, 3, 7, 14, 21];\n  startdateEvents: string[] = [];\n  enddateEvents: string[] = [];\n\n\n  recentTemp: Number;\n  recentWindSpeed: Number;\n  recentWindDir: Number;\n\n  tempchart:Chart;\n  windchart:Chart;\n  charttempdata={\n      labels: this.temperatureData.map(data => new Date(data.measure_time).toLocaleString([],{month:'2-digit',day:'2-digit',hour:'2-digit',minute:'2-digit'})),\n      datasets: [{\n        label: 'Temperatur in C°',\n        data: this.temperatureData.map(data => data.degrees),\n        fill: true,\n        backgroundColor: \n          'rgba(255, 99, 132, 0.2)',\n        borderColor:\n          'rgba(255, 99, 132, 1)',\n        borderWidth: 0\n      }]\n    }\n  \nchartwindata={\n    labels: this.windData.map(datawind => new Date(datawind.measure_time).toLocaleString()),\n    datasets: [{\n      label: 'Wind in m/s',\n      data: this.windData.map(datawind => datawind.speed),\n      fill: true,\n      backgroundColor:\n        'rgba(128, 255, 132, 0.2)'\n      ,\n      borderColor:\n        'rgba(128, 255, 132, 1)',\n      borderWidth: 0\n    }]\n}\n\n  chartoptions={\n    scales: {\n      yAxes: [{\n        ticks: {\n          beginAtZero: false\n        }\n      }]\n    }\n  }\n\n  breakpoint: number;\n\n  constructor(weatherDataService: WeatherDataService) {\n    this.weatherDataService = weatherDataService\n    this.extendedModeStatus = new BehaviorSubject(false)\n\n  }\n\n  ngOnInit() {\n    this.breakpoint = (window.innerWidth  {\n      \n      this.recentWindSpeed = data.map(data => data.speed)[data.length - 1];\n      this.recentWindDir = data.map(data => data.direction)[data.length - 1];\n      console.log(this.recentWindSpeed)\n    });\n\n    this.weatherDataSubscription =\n      this.weatherDataService.getTemperatures(1).subscribe((data) => {\n        this.recentTemp = data.map(data => data.degrees)[data.length - 1];\n        console.log(data);\n      });\n\n    this.weatherDataService.getRecentWind().subscribe((data) => {\n      this.lastHoursWind = data;\n      this.windData = data;\n      this.buildWindChart();\n    });\n  }\n\n\n  updateGraphs(input) {\n    this.weatherDataSubscription =\n    this.weatherDataService.getTemperatures(input).subscribe((data) => {\n      this.temperatureData = data;\n      this.buildTempChart();\n      \n    });\n    \n  }\n\n/**\n * Initialisiert die gefetchten Daten und generiert einen neuen Graphen \n */\n  buildTempChart(){\n    if(this.tempchart!=undefined){\n      this.tempchart.destroy();\n    }\n\n    this.charttempdata.labels=this.temperatureData.map(data => new Date(data.measure_time).toLocaleString([],{month:'2-digit',day:'2-digit',hour:'2-digit',minute:'2-digit'}));\n    this.charttempdata.datasets[0].data=this.temperatureData.map(data => data.degrees);\n    let tempcanvas=document.getElementById('temp');\n    console.log(this.charttempdata)\n    this.tempchart=Chart.Line(tempcanvas,{\n      data:this.charttempdata,\n      options:this.chartoptions\n    })\n  }\n\n  buildWindChart() {\n  \n    this.chartwindata.labels=this.windData.map(datawind => new Date(datawind.measure_time).toLocaleString([],{month:'2-digit',day:'2-digit',hour:'2-digit',minute:'2-digit'}));\n    this.chartwindata.datasets[0].data=this.windData.map(datawind => datawind.speed)\n    let windcanvas=document.getElementById('wind');\n    this.windchart=Chart.Line(windcanvas,{\n      data:this.chartwindata,\n      options:this.chartoptions\n    })\n  }\n\n  /**\n   * @param i Index des zu Rotierenden Windrichtungpfeils\n   *  \n   */\n\n  onImageLoad(i) {\n    var data = this.windData.map(data => data.direction);\n    var img = document.getElementById(i);\n    img.style.transform = 'rotate(' + data[i] + 'deg)';\n\n  }\n\n  rotateDirCardArrow(angle, id) {\n    var img = document.getElementById(id);\n    img.style.transform = 'rotate(' + angle + 'deg)';\n  }\n  transformDirectionDates(i) {\n    let dirhours = this.windData.map(datawind => new Date(datawind.measure_time).toLocaleString([],{hour:'2-digit',minute:'2-digit'}));\n    return dirhours[i];\n  }\n\n/**\n * \n * @param event Event beim Wechsel zwischen \"Erweiterten Modus\" und den Radiobuttons\n */\n  onChange(event: MatSlideToggleChange) {\n    console.log(event);\n    this.extendedModeStatus.next(event.checked)\n  }\n\n  /**\n   * \n   * @param event Event beim Wechsel der Tagesanzahl des Graphen\n   * Lädt die Graphen beim Wechsel der Anzahl der Tage neu.\n   */\n  onbtnChange(event: MatRadioChange) {\n    this.updateGraphs(event.value);\n  }\n\n  /*Eventhandles for Timeframe */\n  addStartEvent(event: MatDatepickerInputEvent) {\n    this.startdateEvents.push(`${event.value}`);\n    console.log(this.startdateEvents)\n\n  }\n\n  addEndEvent(event: MatDatepickerInputEvent) {\n    this.enddateEvents.push(`${event.value}`);\n    console.log(this.enddateEvents)\n\n  }\n/**\n * Neuer Datensatz wird requestet und der Temperaturgraph neu aufgebaut\n */\n  applyTimeframe() {\n    let startstring = this.startdateEvents[this.startdateEvents.length - 1]\n    let startdate = new Date(startstring);\n    console.log(startdate);\n\n    let endstring = this.enddateEvents[this.enddateEvents.length - 1]\n    let enddate = new Date(endstring);\n\n\n    if (enddate > startdate) {\n      this.weatherDataSubscription =\n        this.weatherDataService.getTemperaturesDataFrame(startdate, enddate).subscribe((data) => {\n          this.temperatureData = data;\n          this.buildTempChart();\n        });\n\n    }\n  }\n\n\n/** \n * @param event Resize Event\n* Handler for Resizing\n*/\nonResize(event) {\n  this.breakpoint = (event.target.innerWidth \n    \n\n    \n        \n\n\n\n   src = \"https://cdn.jsdelivr.net/npm/chart.js@2.9.3/dist/Chart.min.js\" \n\n\n\n\n  \n  \n    \n      \n        \n          Aktuelle Temperatur:\n          {{recentTemp}}°C\n        \n      \n    \n    \n      \n        \n          Windgeschwindigkeit:\n          {{recentWindSpeed}} m/s\n        \n      \n    \n    \n      \n        \n          Aktuelle Windrichtung\n          \n            \n          \n        \n      \n    \n  \n  \n\n  \n    Windrichtungen der letzten 3 Stunden:\n    \n    \n      \n      {{transformDirectionDates(indexOfelement)}} Uhr\n    \n  \n\n\n  \n    \n      \n    \n  \n\n\n\n\n  \n    \n    erw. Modus\n  \n    \n     \n      \n        Startdatum\n        \n        \n        \n      \n   \n\n      \n        Enddatum\n        \n        \n        \n      \n    \n      Anwenden\n    \n\n\n    \n      Anzahl der Tage:\n      \n        \n          {{pick}}\n        \n\n      \n    \n  \n  \n\n\n\n  \n    \n      \n    \n  \n\n\n\n\n\n\n\n\n\n    \n\n    \n                \n                    ./graphs.component.scss\n                \n                \n.selectorcard{\n    \n    height:100%;\n    margin-bottom: 0.5em;\n    margin-top: 0.5em;\n\n}\n\n.canvas-container {\n    display: flex;\n    box-align: center;\n    border: 1px solid lightgray;\n    margin-bottom: 0em;\n    width: auto;\n    height:auto\n    }\n\n.column {\n    margin-top: 0.5rem;\n   \n    vertical-align: middle;\n    width: 100%;\n    height: 100%;\n    \n  }\n\n.toggleslider{\n  position: absolute;\n  top: 8px;\n  right: 20px;\n  font-size: 18px;\n\n}\n.simplemodelabel{\n  text-align: left;\n \n}\n\n.mat-radio-button{\n  padding:0.5em;\n}\n\n\n.recentData{\nwidth:85%;\nheight:55%;\ntext-align: center;\n}\n\n.directions-card{\n  margin-top: 1em;\n  margin-bottom: 0.5em;\n  height: 4em;\n  text-align: center;\n  \n}\n\n.mat-h1{\n  text-align: center;\n  margin-top: 0.8em;\n  \n}\n\n\n.imagecontainer{\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: auto;\n  \n}\n\n.arrowscontainer{\n  float: left;\n  margin-right:0.25em ;\n}\n\n.windDirTime{\n  display: block;\n}\n.endpickform,.applydates,.startpickform{\nmargin:0.25em 0.25em 0.25em 0.25em;\n}\n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '   src = \"https://cdn.jsdelivr.net/npm/chart.js@2.9.3/dist/Chart.min.js\"                                 Aktuelle Temperatur:          {{recentTemp}}°C                                              Windgeschwindigkeit:          {{recentWindSpeed}} m/s                                              Aktuelle Windrichtung                                                            Windrichtungen der letzten 3 Stunden:                    {{transformDirectionDates(indexOfelement)}} Uhr                                  erw. Modus                         Startdatum                                               Enddatum                                        Anwenden              Anzahl der Tage:                        {{pick}}                                        '\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AdminpanelComponent', 'selector': 'app-adminpanel'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'GraphsComponent', 'selector': 'app-graphs'},{'name': 'WebcamComponent', 'selector': 'app-webcam'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'GraphsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   "},"interfaces/ImageData.html":{"url":"interfaces/ImageData.html","title":"interface - ImageData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ImageData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/image-data.service.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        id\n                                \n                                \n                                        image\n                                \n                                \n                                        measurement_time\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         Number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        image\n                                    \n                                \n                                \n                                    \n                                        image:         String\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         String\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        measurement_time\n                                    \n                                \n                                \n                                    \n                                        measurement_time:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {HttpClient} from \"@angular/common/http\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ImageService {\n  private apiUrl = 'http://localhost:8000/api/';\n  private http: HttpClient;\n  constructor(http: HttpClient) {\n    this.http = http;\n  }\n  today=new Date;\n  \n\n\n  formatDate(date: Date) {\n    var d = new Date(date),\n        month = '' + (d.getMonth() + 1),\n        day = '' + d.getDate(),\n        year = d.getFullYear();\n\n    if (month.length (this.apiUrl + 'images/recent/');\n}\n\n\n  getTodayImages() {\n    let today=new Date;\n    return this.http.get(this.apiUrl + 'images/?start='+this.formatDate(today));\n  }\n \n\n  getYesterdayImages(){\n    let today=new Date;\n    let yesterday=new Date();\n    yesterday.setDate(today.getDate()-1)\n   \n    return this.http.get(this.apiUrl + 'images/?start='+this.formatDate(yesterday)+'&end='+this.formatDate(today));\n  }\n\n getDateImages(date:Date){\n  let end=new Date() \n  end.setDate(date.getDate()+1)\n   \n  return this.http.get(this.apiUrl+'images/?start='+this.formatDate(date)+'&end='+this.formatDate(end));\n\n }\n\n\n}\n\nexport interface ImageData {\n  id: Number,\n  image: String,\n  measurement_time: Date\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ImageService.html":{"url":"injectables/ImageService.html","title":"injectable - ImageService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ImageService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/image-data.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                apiUrl\n                            \n                            \n                                    Private\n                                http\n                            \n                            \n                                today\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                formatDate\n                            \n                            \n                                getDateImages\n                            \n                            \n                                getrecentImages\n                            \n                            \n                                getTodayImages\n                            \n                            \n                                getYesterdayImages\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/image-data.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            formatDate\n                        \n                        \n                    \n                \n            \n            \n                \nformatDate(date: Date)\n                \n            \n\n\n            \n                \n                    Defined in src/app/image-data.service.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    date\n                                    \n                                                Date\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getDateImages\n                        \n                        \n                    \n                \n            \n            \n                \ngetDateImages(date: Date)\n                \n            \n\n\n            \n                \n                    Defined in src/app/image-data.service.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    date\n                                    \n                                                Date\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getrecentImages\n                        \n                        \n                    \n                \n            \n            \n                \ngetrecentImages()\n                \n            \n\n\n            \n                \n                    Defined in src/app/image-data.service.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getTodayImages\n                        \n                        \n                    \n                \n            \n            \n                \ngetTodayImages()\n                \n            \n\n\n            \n                \n                    Defined in src/app/image-data.service.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getYesterdayImages\n                        \n                        \n                    \n                \n            \n            \n                \ngetYesterdayImages()\n                \n            \n\n\n            \n                \n                    Defined in src/app/image-data.service.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            apiUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'http://localhost:8000/api/'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/image-data.service.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            http\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         HttpClient\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/image-data.service.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            today\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Date\n                        \n                    \n                        \n                            \n                                    Defined in src/app/image-data.service.ts:13\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {HttpClient} from \"@angular/common/http\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ImageService {\n  private apiUrl = 'http://localhost:8000/api/';\n  private http: HttpClient;\n  constructor(http: HttpClient) {\n    this.http = http;\n  }\n  today=new Date;\n  \n\n\n  formatDate(date: Date) {\n    var d = new Date(date),\n        month = '' + (d.getMonth() + 1),\n        day = '' + d.getDate(),\n        year = d.getFullYear();\n\n    if (month.length (this.apiUrl + 'images/recent/');\n}\n\n\n  getTodayImages() {\n    let today=new Date;\n    return this.http.get(this.apiUrl + 'images/?start='+this.formatDate(today));\n  }\n \n\n  getYesterdayImages(){\n    let today=new Date;\n    let yesterday=new Date();\n    yesterday.setDate(today.getDate()-1)\n   \n    return this.http.get(this.apiUrl + 'images/?start='+this.formatDate(yesterday)+'&end='+this.formatDate(today));\n  }\n\n getDateImages(date:Date){\n  let end=new Date() \n  end.setDate(date.getDate()+1)\n   \n  return this.http.get(this.apiUrl+'images/?start='+this.formatDate(date)+'&end='+this.formatDate(end));\n\n }\n\n\n}\n\nexport interface ImageData {\n  id: Number,\n  image: String,\n  measurement_time: Date\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/NgbdDropdownBasic.html":{"url":"classes/NgbdDropdownBasic.html","title":"class - NgbdDropdownBasic","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  NgbdDropdownBasic\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/webcam/webcam.component.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Component,ChangeDetectionStrategy, OnInit, } from \"@angular/core\";\nimport { ImageData, ImageService } from \"../image-data.service\";\nimport { Observable, Subject } from \"rxjs\";\nimport { takeUntil, throttleTime } from \"rxjs/operators\";\nimport { MatDialog } from '@angular/material/dialog';\nimport { MatDatepickerInputEvent } from '@angular/material/datepicker';\nimport { Gallery, GalleryItem, ImageItem } from '@ngx-gallery/core';\nimport { Lightbox } from '@ngx-gallery/lightbox';\n\nimport 'hammerjs';\n\n\n\n@Component({\n  selector: \"app-webcam\",\n  templateUrl: \"./webcam.component.html\",\n  styleUrls: [\"./webcam.component.scss\"],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class WebcamComponent implements OnInit {\n  \n  todayPics:GalleryItem[];\n  TodayImages: ImageData[] =[];\n\n  recentPics: GalleryItem[];\n  RecentImages: ImageData[] = [];\n\n  yesterdayPics: GalleryItem[];\n  YesterdayImages: ImageData[] = [];\n\n  DatePics: GalleryItem[];\n  DateImages: ImageData[] = [];\n\n\n  ImageService: ImageService;\n\n  destroy$: Subject = new Subject();\n  \n  startdateEvents: Date;\n  panelOpenState = false;\n\n\n  constructor(ImageService: ImageService,public gallery: Gallery,public today: Gallery,public yesterday:Gallery,public dategallery:Gallery, public lightbox: Lightbox) {\n    this.ImageService = ImageService;\n  }\n\n  ngOnInit() {\n    \n    this.ImageService.getrecentImages()\n    .pipe(takeUntil(this.destroy$))\n      .subscribe((data) => {\n        this.RecentImages = data;\n        this.loadrecentPics();\n      })\n      this.gallery.ref('lightbox', {imageSize: 'cover', loadingStrategy: 'lazy', thumbPosition: 'top'}).load(this.recentPics);\n      console.log(this.recentPics)\n\n\n \n      // This is for Lightbox example\n      \n      console.log(this.gallery)\n\n    }\n  \n\n    loadrecentPics(){\n      this.recentPics=this.RecentImages.map(data => {\n        return new ImageItem({src:data.image,thumb:data.image})\n      });\n    }\n    \n    loadtodayPics(){\n      this.ImageService.getTodayImages()\n      .pipe(takeUntil(this.destroy$))\n      .subscribe((data)=>{\n        this.TodayImages=data;\n        this.todayPics=this.TodayImages.map(data=>{\n          return new ImageItem({src:data.image,thumb:data.image})\n        });\n      this.today.ref('today', {imageSize: 'cover', loadingStrategy: 'lazy', thumbPosition: 'top'}).load(this.todayPics);\n        \n      })\n \n    }\n\n    loadyesterdayPics(){\n      this.ImageService.getYesterdayImages()\n      .pipe(takeUntil(this.destroy$))\n      .subscribe((data)=>{\n        this.YesterdayImages=data;\n        this.yesterdayPics=this.YesterdayImages.map(data=>{\n          return new ImageItem({src:data.image,thumb:data.image})\n        });\n        this.gallery.ref('yesterday', {imageSize: 'cover', loadingStrategy: 'lazy', thumbPosition: 'top'}).load(this.yesterdayPics);\n      })\n    }\n\n    \n    openLightbox(index:number,galleryid:string) {\n     \n      this.lightbox.open(index, galleryid);\n    }\n    \n    \n    loaddatePics(){\n      this.ImageService.getDateImages(this.startdateEvents)\n      .pipe(takeUntil(this.destroy$))\n      .subscribe((data)=>{\n        this.DateImages=data;\n        this.DatePics=this.DateImages.map(data=>{\n          return new ImageItem({src:data.image,thumb:data.image})\n        });\n        this.today.ref('dategallery', {imageSize: 'cover', loadingStrategy: 'lazy', thumbPosition: 'top'}).load(this.DatePics);\n      })\n    }\n\n\n    /*Eventhandles for Timeframe */\n    addDateEvent(event: MatDatepickerInputEvent) {\n      this.startdateEvents=event.value;\n    console.log(this.startdateEvents)\n      this.loaddatePics();\n\n  }\n  \n\n  ngOnDestroy() {\n    this.destroy$.next(true);\n    this.destroy$.unsubscribe();\n  }\n\n\n  }\n\nexport class NgbdDropdownBasic {\n  \n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/RaspberryData.html":{"url":"interfaces/RaspberryData.html","title":"interface - RaspberryData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  RaspberryData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/adminpanel-data.service.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        current\n                                \n                                \n                                        id\n                                \n                                \n                                        measure_time\n                                \n                                \n                                        voltage\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        current\n                                    \n                                \n                                \n                                    \n                                        current:         Number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         Number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        measure_time\n                                    \n                                \n                                \n                                    \n                                        measure_time:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        voltage\n                                    \n                                \n                                \n                                    \n                                        voltage:         Number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {HttpClient} from \"@angular/common/http\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AdminpanelDataService {\n  private apiUrl = 'http://localhost:8000/api/';\n  private http: HttpClient;\n\n  constructor(http: HttpClient) {\n    this.http = http;\n  }\n\n  formatDate(date: Date) {\n    var d = new Date(date),\n        month = '' + (d.getMonth() + 1),\n        day = '' + d.getDate(),\n        year = d.getFullYear();\n\n    if (month.length (this.apiUrl + 'solarcell/aggregate/?start='+this.formatDate(today));\n  }\n\n  getBatteryData(time: number){\n    let today=  new Date();\n    let yesterday = today.getDate()-time;\n    today.setDate(yesterday);\n  \n  return  this.http.get(this.apiUrl + 'battery/aggregate/?start='+this.formatDate(today));\n  }\n\n  getRaspberryData(time: number){\n    let today=  new Date();\n    let yesterday = today.getDate()-time;\n    today.setDate(yesterday);\n  \n  return  this.http.get(this.apiUrl + 'solarcell/aggregate/?start='+this.formatDate(today));\n  }\n\n  getVolumeData(time: number){\n    let today=  new Date();\n    let yesterday = today.getDate()-time;\n    today.setDate(yesterday);\n  \n  return  this.http.get(this.apiUrl + 'data-volume/?start='+this.formatDate(today));\n  }\n\n  getSolarDataFrame(start:Date,end:Date){\n    return this.http.get(this.apiUrl+'solarcell/aggregate/?start='+this.formatDate(start)+'&end='+this.formatDate(end));\n  }\n\n  getBatteryDataFrame(start:Date,end:Date){\n    return this.http.get(this.apiUrl+'battery/aggregate/?start='+this.formatDate(start)+'&end='+this.formatDate(end));\n  }\n\n  getRaspberryDataFrame(start:Date,end:Date){\n    return this.http.get(this.apiUrl+'solarcell/aggregate/?start='+this.formatDate(start)+'&end='+this.formatDate(end));\n  }\n\n  getVolumeDataFrame(start:Date,end:Date){\n    return this.http.get(this.apiUrl+'solarcell/aggregate/?start='+this.formatDate(start)+'&end='+this.formatDate(end));\n  }\n}\n\nexport interface SolarData {\n  id: Number,\n  current: Number,\n  voltage: Number,\n  measure_time: Date\n}\n\nexport interface BatteryData {\n  id: Number,\n  current: Number,\n  voltage: Number,\n  degrees: Number,\n  measure_time: Date\n}\n\nexport interface RaspberryData {\n  id: Number,\n  current: Number,\n  voltage: Number,\n  measure_time: Date\n}\n\nexport interface VolumeData {\n  id: Number,\n  image_size: Number\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SolarData.html":{"url":"interfaces/SolarData.html","title":"interface - SolarData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  SolarData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/adminpanel-data.service.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        current\n                                \n                                \n                                        id\n                                \n                                \n                                        measure_time\n                                \n                                \n                                        voltage\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        current\n                                    \n                                \n                                \n                                    \n                                        current:         Number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         Number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        measure_time\n                                    \n                                \n                                \n                                    \n                                        measure_time:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        voltage\n                                    \n                                \n                                \n                                    \n                                        voltage:         Number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {HttpClient} from \"@angular/common/http\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AdminpanelDataService {\n  private apiUrl = 'http://localhost:8000/api/';\n  private http: HttpClient;\n\n  constructor(http: HttpClient) {\n    this.http = http;\n  }\n\n  formatDate(date: Date) {\n    var d = new Date(date),\n        month = '' + (d.getMonth() + 1),\n        day = '' + d.getDate(),\n        year = d.getFullYear();\n\n    if (month.length (this.apiUrl + 'solarcell/aggregate/?start='+this.formatDate(today));\n  }\n\n  getBatteryData(time: number){\n    let today=  new Date();\n    let yesterday = today.getDate()-time;\n    today.setDate(yesterday);\n  \n  return  this.http.get(this.apiUrl + 'battery/aggregate/?start='+this.formatDate(today));\n  }\n\n  getRaspberryData(time: number){\n    let today=  new Date();\n    let yesterday = today.getDate()-time;\n    today.setDate(yesterday);\n  \n  return  this.http.get(this.apiUrl + 'solarcell/aggregate/?start='+this.formatDate(today));\n  }\n\n  getVolumeData(time: number){\n    let today=  new Date();\n    let yesterday = today.getDate()-time;\n    today.setDate(yesterday);\n  \n  return  this.http.get(this.apiUrl + 'data-volume/?start='+this.formatDate(today));\n  }\n\n  getSolarDataFrame(start:Date,end:Date){\n    return this.http.get(this.apiUrl+'solarcell/aggregate/?start='+this.formatDate(start)+'&end='+this.formatDate(end));\n  }\n\n  getBatteryDataFrame(start:Date,end:Date){\n    return this.http.get(this.apiUrl+'battery/aggregate/?start='+this.formatDate(start)+'&end='+this.formatDate(end));\n  }\n\n  getRaspberryDataFrame(start:Date,end:Date){\n    return this.http.get(this.apiUrl+'solarcell/aggregate/?start='+this.formatDate(start)+'&end='+this.formatDate(end));\n  }\n\n  getVolumeDataFrame(start:Date,end:Date){\n    return this.http.get(this.apiUrl+'solarcell/aggregate/?start='+this.formatDate(start)+'&end='+this.formatDate(end));\n  }\n}\n\nexport interface SolarData {\n  id: Number,\n  current: Number,\n  voltage: Number,\n  measure_time: Date\n}\n\nexport interface BatteryData {\n  id: Number,\n  current: Number,\n  voltage: Number,\n  degrees: Number,\n  measure_time: Date\n}\n\nexport interface RaspberryData {\n  id: Number,\n  current: Number,\n  voltage: Number,\n  measure_time: Date\n}\n\nexport interface VolumeData {\n  id: Number,\n  image_size: Number\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TemperatureData.html":{"url":"interfaces/TemperatureData.html","title":"interface - TemperatureData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  TemperatureData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/weather-data.service.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        degrees\n                                \n                                \n                                        id\n                                \n                                \n                                        measure_time\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        degrees\n                                    \n                                \n                                \n                                    \n                                        degrees:         Number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         Number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        measure_time\n                                    \n                                \n                                \n                                    \n                                        measure_time:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {HttpClient} from \"@angular/common/http\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class WeatherDataService {\n  private apiUrl = 'http://127.0.0.1:8000/api/';\n  private http: HttpClient;\n\n  constructor(http: HttpClient) {\n    this.http = http;\n  }\n\n  formatDate(date: Date) {\n    var d = new Date(date),\n        month = '' + (d.getMonth() + 1),\n        day = '' + d.getDate(),\n        year = d.getFullYear();\n\n    if (month.length (this.apiUrl + 'temps/aggregate/?start='+this.formatDate(today));\n\n  }  \n  getWindData(time: number){\n    let today=  new Date();\n \n  \n  return  this.http.get(this.apiUrl + 'wind/recent/?start='+this.formatDate(today));\n}\n\ngetWindDataFrame(start:Date,end:Date){\n  return this.http.get(this.apiUrl+'wind/recent/?start='+this.formatDate(start)+'&end='+this.formatDate(end));\n\n}\n\ngetTemperaturesDataFrame(start:Date,end:Date){\n  \n  return this.http.get(this.apiUrl+'temps/aggregate/?start='+this.formatDate(start)+'&end='+this.formatDate(end));\n\n}\ngetRecentWind(){\n  return this.http.get(this.apiUrl+'wind/recent')\n}\n\n\n}\n\nexport interface WindData {\n  id: Number,\n  speed: Number,\n  direction: Number,\n  measure_time: Date\n\n}\n\nexport interface TemperatureData {\n  id: Number,\n  degrees: Number,\n  measure_time: Date\n}\n\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/VolumeData.html":{"url":"interfaces/VolumeData.html","title":"interface - VolumeData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  VolumeData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/adminpanel-data.service.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        id\n                                \n                                \n                                        image_size\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         Number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        image_size\n                                    \n                                \n                                \n                                    \n                                        image_size:         Number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {HttpClient} from \"@angular/common/http\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AdminpanelDataService {\n  private apiUrl = 'http://localhost:8000/api/';\n  private http: HttpClient;\n\n  constructor(http: HttpClient) {\n    this.http = http;\n  }\n\n  formatDate(date: Date) {\n    var d = new Date(date),\n        month = '' + (d.getMonth() + 1),\n        day = '' + d.getDate(),\n        year = d.getFullYear();\n\n    if (month.length (this.apiUrl + 'solarcell/aggregate/?start='+this.formatDate(today));\n  }\n\n  getBatteryData(time: number){\n    let today=  new Date();\n    let yesterday = today.getDate()-time;\n    today.setDate(yesterday);\n  \n  return  this.http.get(this.apiUrl + 'battery/aggregate/?start='+this.formatDate(today));\n  }\n\n  getRaspberryData(time: number){\n    let today=  new Date();\n    let yesterday = today.getDate()-time;\n    today.setDate(yesterday);\n  \n  return  this.http.get(this.apiUrl + 'solarcell/aggregate/?start='+this.formatDate(today));\n  }\n\n  getVolumeData(time: number){\n    let today=  new Date();\n    let yesterday = today.getDate()-time;\n    today.setDate(yesterday);\n  \n  return  this.http.get(this.apiUrl + 'data-volume/?start='+this.formatDate(today));\n  }\n\n  getSolarDataFrame(start:Date,end:Date){\n    return this.http.get(this.apiUrl+'solarcell/aggregate/?start='+this.formatDate(start)+'&end='+this.formatDate(end));\n  }\n\n  getBatteryDataFrame(start:Date,end:Date){\n    return this.http.get(this.apiUrl+'battery/aggregate/?start='+this.formatDate(start)+'&end='+this.formatDate(end));\n  }\n\n  getRaspberryDataFrame(start:Date,end:Date){\n    return this.http.get(this.apiUrl+'solarcell/aggregate/?start='+this.formatDate(start)+'&end='+this.formatDate(end));\n  }\n\n  getVolumeDataFrame(start:Date,end:Date){\n    return this.http.get(this.apiUrl+'solarcell/aggregate/?start='+this.formatDate(start)+'&end='+this.formatDate(end));\n  }\n}\n\nexport interface SolarData {\n  id: Number,\n  current: Number,\n  voltage: Number,\n  measure_time: Date\n}\n\nexport interface BatteryData {\n  id: Number,\n  current: Number,\n  voltage: Number,\n  degrees: Number,\n  measure_time: Date\n}\n\nexport interface RaspberryData {\n  id: Number,\n  current: Number,\n  voltage: Number,\n  measure_time: Date\n}\n\nexport interface VolumeData {\n  id: Number,\n  image_size: Number\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/WeatherDataService.html":{"url":"injectables/WeatherDataService.html","title":"injectable - WeatherDataService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  WeatherDataService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/weather-data.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                apiUrl\n                            \n                            \n                                    Private\n                                http\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                formatDate\n                            \n                            \n                                getRecentWind\n                            \n                            \n                                getTemperatures\n                            \n                            \n                                getTemperaturesDataFrame\n                            \n                            \n                                getWindData\n                            \n                            \n                                getWindDataFrame\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/weather-data.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            formatDate\n                        \n                        \n                    \n                \n            \n            \n                \nformatDate(date: Date)\n                \n            \n\n\n            \n                \n                    Defined in src/app/weather-data.service.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    date\n                                    \n                                                Date\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getRecentWind\n                        \n                        \n                    \n                \n            \n            \n                \ngetRecentWind()\n                \n            \n\n\n            \n                \n                    Defined in src/app/weather-data.service.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getTemperatures\n                        \n                        \n                    \n                \n            \n            \n                \ngetTemperatures(time: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/weather-data.service.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    time\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getTemperaturesDataFrame\n                        \n                        \n                    \n                \n            \n            \n                \ngetTemperaturesDataFrame(start: Date, end: Date)\n                \n            \n\n\n            \n                \n                    Defined in src/app/weather-data.service.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    start\n                                    \n                                                Date\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    end\n                                    \n                                                Date\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getWindData\n                        \n                        \n                    \n                \n            \n            \n                \ngetWindData(time: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/weather-data.service.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    time\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getWindDataFrame\n                        \n                        \n                    \n                \n            \n            \n                \ngetWindDataFrame(start: Date, end: Date)\n                \n            \n\n\n            \n                \n                    Defined in src/app/weather-data.service.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    start\n                                    \n                                                Date\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    end\n                                    \n                                                Date\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            apiUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'http://127.0.0.1:8000/api/'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/weather-data.service.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            http\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         HttpClient\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/weather-data.service.ts:9\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {HttpClient} from \"@angular/common/http\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class WeatherDataService {\n  private apiUrl = 'http://127.0.0.1:8000/api/';\n  private http: HttpClient;\n\n  constructor(http: HttpClient) {\n    this.http = http;\n  }\n\n  formatDate(date: Date) {\n    var d = new Date(date),\n        month = '' + (d.getMonth() + 1),\n        day = '' + d.getDate(),\n        year = d.getFullYear();\n\n    if (month.length (this.apiUrl + 'temps/aggregate/?start='+this.formatDate(today));\n\n  }  \n  getWindData(time: number){\n    let today=  new Date();\n \n  \n  return  this.http.get(this.apiUrl + 'wind/recent/?start='+this.formatDate(today));\n}\n\ngetWindDataFrame(start:Date,end:Date){\n  return this.http.get(this.apiUrl+'wind/recent/?start='+this.formatDate(start)+'&end='+this.formatDate(end));\n\n}\n\ngetTemperaturesDataFrame(start:Date,end:Date){\n  \n  return this.http.get(this.apiUrl+'temps/aggregate/?start='+this.formatDate(start)+'&end='+this.formatDate(end));\n\n}\ngetRecentWind(){\n  return this.http.get(this.apiUrl+'wind/recent')\n}\n\n\n}\n\nexport interface WindData {\n  id: Number,\n  speed: Number,\n  direction: Number,\n  measure_time: Date\n\n}\n\nexport interface TemperatureData {\n  id: Number,\n  degrees: Number,\n  measure_time: Date\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/WebcamComponent.html":{"url":"components/WebcamComponent.html","title":"component - WebcamComponent","body":"\n                   \n\n\n\n\n\n  Components\n  WebcamComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/webcam/webcam.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-webcam\n            \n\n            \n                styleUrls\n                ./webcam.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./webcam.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                dategallery\n                            \n                            \n                                DateImages\n                            \n                            \n                                DatePics\n                            \n                            \n                                destroy$\n                            \n                            \n                                    Public\n                                gallery\n                            \n                            \n                                ImageService\n                            \n                            \n                                    Public\n                                lightbox\n                            \n                            \n                                panelOpenState\n                            \n                            \n                                RecentImages\n                            \n                            \n                                recentPics\n                            \n                            \n                                startdateEvents\n                            \n                            \n                                    Public\n                                today\n                            \n                            \n                                TodayImages\n                            \n                            \n                                todayPics\n                            \n                            \n                                    Public\n                                yesterday\n                            \n                            \n                                YesterdayImages\n                            \n                            \n                                yesterdayPics\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addDateEvent\n                            \n                            \n                                loaddatePics\n                            \n                            \n                                loadrecentPics\n                            \n                            \n                                loadtodayPics\n                            \n                            \n                                loadyesterdayPics\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                openLightbox\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(ImageService: ImageService, gallery: Gallery, today: Gallery, yesterday: Gallery, dategallery: Gallery, lightbox: Lightbox)\n                    \n                \n                        \n                            \n                                Defined in src/app/webcam/webcam.component.ts:40\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        ImageService\n                                                  \n                                                        \n                                                                        ImageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        gallery\n                                                  \n                                                        \n                                                                    Gallery\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        today\n                                                  \n                                                        \n                                                                    Gallery\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        yesterday\n                                                  \n                                                        \n                                                                    Gallery\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dategallery\n                                                  \n                                                        \n                                                                    Gallery\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        lightbox\n                                                  \n                                                        \n                                                                    Lightbox\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            addDateEvent\n                        \n                        \n                    \n                \n            \n            \n                \naddDateEvent(event: MatDatepickerInputEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/app/webcam/webcam.component.ts:120\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                            MatDatepickerInputEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            loaddatePics\n                        \n                        \n                    \n                \n            \n            \n                \nloaddatePics()\n                \n            \n\n\n            \n                \n                    Defined in src/app/webcam/webcam.component.ts:106\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            loadrecentPics\n                        \n                        \n                    \n                \n            \n            \n                \nloadrecentPics()\n                \n            \n\n\n            \n                \n                    Defined in src/app/webcam/webcam.component.ts:67\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            loadtodayPics\n                        \n                        \n                    \n                \n            \n            \n                \nloadtodayPics()\n                \n            \n\n\n            \n                \n                    Defined in src/app/webcam/webcam.component.ts:73\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            loadyesterdayPics\n                        \n                        \n                    \n                \n            \n            \n                \nloadyesterdayPics()\n                \n            \n\n\n            \n                \n                    Defined in src/app/webcam/webcam.component.ts:87\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/webcam/webcam.component.ts:128\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/webcam/webcam.component.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            openLightbox\n                        \n                        \n                    \n                \n            \n            \n                \nopenLightbox(index: number, galleryid: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/webcam/webcam.component.ts:100\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    galleryid\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dategallery\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Gallery\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/webcam/webcam.component.ts:43\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            DateImages\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ImageData[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/webcam/webcam.component.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            DatePics\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     GalleryItem[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/webcam/webcam.component.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            destroy$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subject\n\n                        \n                    \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/webcam/webcam.component.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            gallery\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Gallery\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/webcam/webcam.component.ts:43\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ImageService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ImageService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/webcam/webcam.component.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            lightbox\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Lightbox\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/webcam/webcam.component.ts:43\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            panelOpenState\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/webcam/webcam.component.ts:40\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            RecentImages\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ImageData[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/webcam/webcam.component.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            recentPics\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     GalleryItem[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/webcam/webcam.component.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            startdateEvents\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/webcam/webcam.component.ts:39\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            today\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Gallery\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/webcam/webcam.component.ts:43\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            TodayImages\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ImageData[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/webcam/webcam.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            todayPics\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     GalleryItem[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/webcam/webcam.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            yesterday\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Gallery\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/webcam/webcam.component.ts:43\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            YesterdayImages\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ImageData[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/webcam/webcam.component.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            yesterdayPics\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     GalleryItem[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/webcam/webcam.component.ts:28\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component,ChangeDetectionStrategy, OnInit, } from \"@angular/core\";\nimport { ImageData, ImageService } from \"../image-data.service\";\nimport { Observable, Subject } from \"rxjs\";\nimport { takeUntil, throttleTime } from \"rxjs/operators\";\nimport { MatDialog } from '@angular/material/dialog';\nimport { MatDatepickerInputEvent } from '@angular/material/datepicker';\nimport { Gallery, GalleryItem, ImageItem } from '@ngx-gallery/core';\nimport { Lightbox } from '@ngx-gallery/lightbox';\n\nimport 'hammerjs';\n\n\n\n@Component({\n  selector: \"app-webcam\",\n  templateUrl: \"./webcam.component.html\",\n  styleUrls: [\"./webcam.component.scss\"],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class WebcamComponent implements OnInit {\n  \n  todayPics:GalleryItem[];\n  TodayImages: ImageData[] =[];\n\n  recentPics: GalleryItem[];\n  RecentImages: ImageData[] = [];\n\n  yesterdayPics: GalleryItem[];\n  YesterdayImages: ImageData[] = [];\n\n  DatePics: GalleryItem[];\n  DateImages: ImageData[] = [];\n\n\n  ImageService: ImageService;\n\n  destroy$: Subject = new Subject();\n  \n  startdateEvents: Date;\n  panelOpenState = false;\n\n\n  constructor(ImageService: ImageService,public gallery: Gallery,public today: Gallery,public yesterday:Gallery,public dategallery:Gallery, public lightbox: Lightbox) {\n    this.ImageService = ImageService;\n  }\n\n  ngOnInit() {\n    \n    this.ImageService.getrecentImages()\n    .pipe(takeUntil(this.destroy$))\n      .subscribe((data) => {\n        this.RecentImages = data;\n        this.loadrecentPics();\n      })\n      this.gallery.ref('lightbox', {imageSize: 'cover', loadingStrategy: 'lazy', thumbPosition: 'top'}).load(this.recentPics);\n      console.log(this.recentPics)\n\n\n \n      // This is for Lightbox example\n      \n      console.log(this.gallery)\n\n    }\n  \n\n    loadrecentPics(){\n      this.recentPics=this.RecentImages.map(data => {\n        return new ImageItem({src:data.image,thumb:data.image})\n      });\n    }\n    \n    loadtodayPics(){\n      this.ImageService.getTodayImages()\n      .pipe(takeUntil(this.destroy$))\n      .subscribe((data)=>{\n        this.TodayImages=data;\n        this.todayPics=this.TodayImages.map(data=>{\n          return new ImageItem({src:data.image,thumb:data.image})\n        });\n      this.today.ref('today', {imageSize: 'cover', loadingStrategy: 'lazy', thumbPosition: 'top'}).load(this.todayPics);\n        \n      })\n \n    }\n\n    loadyesterdayPics(){\n      this.ImageService.getYesterdayImages()\n      .pipe(takeUntil(this.destroy$))\n      .subscribe((data)=>{\n        this.YesterdayImages=data;\n        this.yesterdayPics=this.YesterdayImages.map(data=>{\n          return new ImageItem({src:data.image,thumb:data.image})\n        });\n        this.gallery.ref('yesterday', {imageSize: 'cover', loadingStrategy: 'lazy', thumbPosition: 'top'}).load(this.yesterdayPics);\n      })\n    }\n\n    \n    openLightbox(index:number,galleryid:string) {\n     \n      this.lightbox.open(index, galleryid);\n    }\n    \n    \n    loaddatePics(){\n      this.ImageService.getDateImages(this.startdateEvents)\n      .pipe(takeUntil(this.destroy$))\n      .subscribe((data)=>{\n        this.DateImages=data;\n        this.DatePics=this.DateImages.map(data=>{\n          return new ImageItem({src:data.image,thumb:data.image})\n        });\n        this.today.ref('dategallery', {imageSize: 'cover', loadingStrategy: 'lazy', thumbPosition: 'top'}).load(this.DatePics);\n      })\n    }\n\n\n    /*Eventhandles for Timeframe */\n    addDateEvent(event: MatDatepickerInputEvent) {\n      this.startdateEvents=event.value;\n    console.log(this.startdateEvents)\n      this.loaddatePics();\n\n  }\n  \n\n  ngOnDestroy() {\n    this.destroy$.next(true);\n    this.destroy$.unsubscribe();\n  }\n\n\n  }\n\nexport class NgbdDropdownBasic {\n  \n}\n\n    \n\n    \n        \n\n\n\n  \n  \n  Document\n  \n  \n\n\n\n  \n\n    \n      \n        \n      \n      \n        \n      \n      \n        \n      \n      \n        \n      \n      \n        \n      \n    \n\n  \n\n\n  \n    \n      \n        \n          Heute\n        \n        \n          Dies sind alle aufgenommenen Bilder von heute.\n        \n      \n      \n        \n          \n            \n\n\n          \n        \n      \n    \n  \n\n\n  \n    \n      \n        \n          Gestern\n        \n        \n          Dies sind alle aufgenommenen Bilder von gestern.\n        \n      \n\n      \n        \n          \n            \n          \n        \n      \n    \n  \n\n\n  \n    \n      \n        \n          Datum wählen\n        \n        \n          Lassen Sie sich die Bilder von einem Tag anzeigen\n        \n      \n        \n          Wählen Sie ein Datum\n          \n          \n          \n        \n        \n        \n          \n            \n              \n  \n  \n            \n          \n        \n    \n  \n\n\n  \n    \n  \n\n\n\n\n\n\n\n    \n\n    \n                \n                    ./webcam.component.scss\n                \n                .imageone {\n  margin-left: 15%;\n  display: inline;\n  clear: both;\n}\n\n.imageone img {\n  width: 70%;\n  height: auto;\n}\n\n.container {\n  position: relative;\n  display: none;\n}\n\n#imgtext {\n  position: absolute;\n  bottom: 15px;\n  left: 15px;\n  color: white;\n  font-size: 20px;\n}\n\n.closebtn {\n  position: absolute;\n  top: 10px;\n  right: 15px;\n  color: white;\n  font-size: 35px;\n  cursor: pointer;\n}\n\n\n.mat-sidenav-container, .mat-sidenav-content, .mat-tab-body-content {\n  transform: none !important;\n}\n\n.mat-card{\n  margin-top: 0.25em;\n  margin-bottom: 0.25em;\n}\n.mat-expansion-panel{\n  margin-top: 0.25em;\n  margin-bottom: 0.25em;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Document                                                                                                                                                  Heute                          Dies sind alle aufgenommenen Bilder von heute.                                                                                                              Gestern                          Dies sind alle aufgenommenen Bilder von gestern.                                                                                                              Datum wählen                          Lassen Sie sich die Bilder von einem Tag anzeigen                                Wählen Sie ein Datum                                                                                                                                          '\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AdminpanelComponent', 'selector': 'app-adminpanel'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'GraphsComponent', 'selector': 'app-graphs'},{'name': 'WebcamComponent', 'selector': 'app-webcam'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'WebcamComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   "},"interfaces/WindData.html":{"url":"interfaces/WindData.html","title":"interface - WindData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  WindData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/weather-data.service.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        direction\n                                \n                                \n                                        id\n                                \n                                \n                                        measure_time\n                                \n                                \n                                        speed\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        direction\n                                    \n                                \n                                \n                                    \n                                        direction:         Number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         Number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        measure_time\n                                    \n                                \n                                \n                                    \n                                        measure_time:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        speed\n                                    \n                                \n                                \n                                    \n                                        speed:         Number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {HttpClient} from \"@angular/common/http\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class WeatherDataService {\n  private apiUrl = 'http://127.0.0.1:8000/api/';\n  private http: HttpClient;\n\n  constructor(http: HttpClient) {\n    this.http = http;\n  }\n\n  formatDate(date: Date) {\n    var d = new Date(date),\n        month = '' + (d.getMonth() + 1),\n        day = '' + d.getDate(),\n        year = d.getFullYear();\n\n    if (month.length (this.apiUrl + 'temps/aggregate/?start='+this.formatDate(today));\n\n  }  \n  getWindData(time: number){\n    let today=  new Date();\n \n  \n  return  this.http.get(this.apiUrl + 'wind/recent/?start='+this.formatDate(today));\n}\n\ngetWindDataFrame(start:Date,end:Date){\n  return this.http.get(this.apiUrl+'wind/recent/?start='+this.formatDate(start)+'&end='+this.formatDate(end));\n\n}\n\ngetTemperaturesDataFrame(start:Date,end:Date){\n  \n  return this.http.get(this.apiUrl+'temps/aggregate/?start='+this.formatDate(start)+'&end='+this.formatDate(end));\n\n}\ngetRecentWind(){\n  return this.http.get(this.apiUrl+'wind/recent')\n}\n\n\n}\n\nexport interface WindData {\n  id: Number,\n  speed: Number,\n  direction: Number,\n  measure_time: Date\n\n}\n\nexport interface TemperatureData {\n  id: Number,\n  degrees: Number,\n  measure_time: Date\n}\n\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                e2e/src/app.po.ts\n            \n            class\n            AppPage\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/admin.service.ts\n            \n            injectable\n            AdminService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/admin.service.ts\n            \n            interface\n            AuthToken\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/admin/admin.component.ts\n            \n            component\n            AdminComponent\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/app/adminpanel-data.service.ts\n            \n            injectable\n            AdminpanelDataService\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/app/adminpanel-data.service.ts\n            \n            interface\n            BatteryData\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/adminpanel-data.service.ts\n            \n            interface\n            RaspberryData\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/adminpanel-data.service.ts\n            \n            interface\n            SolarData\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/adminpanel-data.service.ts\n            \n            interface\n            VolumeData\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/adminpanel/adminpanel.component.ts\n            \n            component\n            AdminpanelComponent\n            \n                0 %\n                (0/38)\n            \n        \n        \n            \n                \n                src/app/adminpanel/adminpanel.component.ts\n            \n            interface\n            raspyActions\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/adminpanel/adminpanel.component.ts\n            \n            interface\n            sensorActions\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/adminpanel/adminpanel.component.ts\n            \n            variable\n            add\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/adminpanel/adminpanel.component.ts\n            \n            variable\n            dates\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/adminpanel/adminpanel.component.ts\n            \n            variable\n            logData\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/adminpanel/adminpanel.component.ts\n            \n            variable\n            sensorData\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/auth-guard.service.ts\n            \n            guard\n            AuthGuardService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/graphs/graphs.component.ts\n            \n            component\n            GraphsComponent\n            \n                5 %\n                (2/36)\n            \n        \n        \n            \n                \n                src/app/image-data.service.ts\n            \n            injectable\n            ImageService\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/image-data.service.ts\n            \n            interface\n            ImageData\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/weather-data.service.ts\n            \n            injectable\n            WeatherDataService\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/weather-data.service.ts\n            \n            interface\n            TemperatureData\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/weather-data.service.ts\n            \n            interface\n            WindData\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/webcam/webcam.component.ts\n            \n            component\n            WebcamComponent\n            \n                0 %\n                (0/27)\n            \n        \n        \n            \n                \n                src/app/webcam/webcam.component.ts\n            \n            class\n            NgbdDropdownBasic\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            variable\n            context\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            variable\n            require\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular-devkit/schematics : ^9.1.8\n        \n            @angular/animations : ^9.1.7\n        \n            @angular/cdk : ^9.2.4\n        \n            @angular/common : ^9.1.7\n        \n            @angular/compiler : ^9.1.7\n        \n            @angular/core : ^9.1.7\n        \n            @angular/forms : ^9.1.7\n        \n            @angular/material : ^9.2.4\n        \n            @angular/platform-browser : ^9.1.7\n        \n            @angular/platform-browser-dynamic : ^9.1.7\n        \n            @angular/router : ^9.1.7\n        \n            @auth0/angular-jwt : ^5.0.1\n        \n            @ngx-gallery/core : ^5.0.0-beta.0\n        \n            @ngx-gallery/gallerize : ^5.0.0-beta.0\n        \n            @ngx-gallery/lightbox : ^5.0.0-beta.0\n        \n            angular-bootstrap-md : ^9.3.0\n        \n            chart.js : ^2.9.3\n        \n            core-js : ^3.6.5\n        \n            hammerjs : ^2.0.8\n        \n            mdbootstrap : ^4.18.0\n        \n            ngx-gallery : ^5.10.0\n        \n            rxjs : ~6.5.5\n        \n            tslib : ^1.13.0\n        \n            zone.js : ~0.10.2\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nWetterstation Frontend\nThis project was generated with Angular CLI version 8.3.19.\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The app will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory. Use the --prod flag for a production build.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via Protractor.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI README.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAdminComponent\n\nAdminComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAdminComponent->AppModule\n\n\n\n\n\nAdminpanelComponent\n\nAdminpanelComponent\n\nAppModule -->\n\nAdminpanelComponent->AppModule\n\n\n\n\n\nAppComponent\n\nAppComponent\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nGraphsComponent\n\nGraphsComponent\n\nAppModule -->\n\nGraphsComponent->AppModule\n\n\n\n\n\nWebcamComponent\n\nWebcamComponent\n\nAppModule -->\n\nWebcamComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nImageService\n\nImageService\n\nAppModule -->\n\nImageService->AppModule\n\n\n\n\n\nWeatherDataService\n\nWeatherDataService\n\nAppModule -->\n\nWeatherDataService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        2 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    5 Components\n                \n            \n        \n        \n            \n                \n                    \n                    5 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    2 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Guard\n                \n            \n        \n        \n            \n                \n                    \n                    10 Interfaces\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        4 Routes\n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/raspyActions.html":{"url":"interfaces/raspyActions.html","title":"interface - raspyActions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  raspyActions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/adminpanel/adminpanel.component.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        action\n                                \n                                \n                                        date\n                                \n                                \n                                        name\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        action\n                                    \n                                \n                                \n                                    \n                                        action:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        date\n                                    \n                                \n                                \n                                    \n                                        date:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { SolarData, AdminpanelDataService, BatteryData, VolumeData, RaspberryData } from \"../adminpanel-data.service\";\nimport { MatButtonToggleChange } from '@angular/material/button-toggle';\nimport { MatDatepickerInputEvent } from '@angular/material/datepicker';\nimport { BehaviorSubject, Subscription } from 'rxjs';\nimport { Chart } from 'chart.js';\n\n\nvar dates = ['25.05.2020', '26.05.2020', '27.05.2020']\n\nexport interface raspyActions {\n  date: string;\n  name: string;\n  action: string;\n}\n\nexport interface sensorActions {\n  sensor: string;\n  status: string;\n}\n\nconst add = (a, b) => a + b;\nconst logData: raspyActions[] = [];\nconst sensorData: sensorActions[] = [\n  { sensor: \"Temperatur\", status: \"OK\" },\n  { sensor: \"Wind\", status: \"OK\" },\n  { sensor: \"Spannung Raspberry\", status: \"OK\" },\n  { sensor: \"Strom Raspberry\", status: \"OK\" },\n  { sensor: \"Spannung Photovoltaik\", status: \"OK\" },\n  { sensor: \"Strom Photovoltaik\", status: \"OK\" },\n  { sensor: \"Leistungsaufnahme\", status: \"OK\" },\n  { sensor: \"Ladestrom\", status: \"OK\" }\n];\n\n@Component({\n  selector: 'app-adminpanel',\n  templateUrl: './adminpanel.component.html',\n  styleUrls: ['./adminpanel.component.scss']\n})\n\nexport class AdminpanelComponent implements OnInit {\n\n  adminpanelDataService: AdminpanelDataService;\n  solarData: SolarData[] = [];\n  batteryData: BatteryData[] = [];\n  raspberryData: RaspberryData[] = [];\n  volumeData: VolumeData[] = [];\n  extendedModeStatus: BehaviorSubject;\n  lastEvent: MatButtonToggleChange;\n\n  startdateEvents: string[] = [];\n  enddateEvents: string[] = [];\n\n  //Gibt für [hidden] an, ob die Leistungsaufnahme ausgewählt wurde oder nicht\n  volIsToggled: boolean = true;\n\n  adminpanelDataSubscription: Subscription;\n\n\n  chart: Chart;\n  chartnames: String[] = [\"Solarzelle\", \"Akku\", \"Raspberry\", \"Datenverbrauch\"];\n  chartlabels: String[] = ['Spannung in Volt', 'Stromstärke in A', 'Leistung in Watt', 'Datenmenge in Byte']\n\n  chartdatasets = [\n    [//Solarzelle\n      {\n        label: \"Spannung\",\n        borderColor: \"#013ADF\",\n        yAxisID: 'voltage',\n        data: this.solarData.map(datasolar => datasolar.voltage),\n        fill: false\n      },\n      {\n        label: \"Leistung\",\n        borderColor: \"#FF0000\",\n        yAxisID: 'watt',\n        data: [1, 2, 1.8],\n        fill: false\n      }],\n    [\n      {\n        //Akku\n        label: \"Spannung\",\n        borderColor: \"#013ADF\",\n        yAxisID: 'voltage',\n        data: [],\n        fill: false\n      },\n      {\n        label: \"Ladestrom\",\n        borderColor: \"#FF0000\",\n        yAxisID: 'current',\n        data: [],\n        fill: false\n      }\n    ],\n    [//Raspi\n      {\n        label: \"Lastspannung\",\n        borderColor: \"#013ADF\",\n        yAxisID: 'voltage',\n        data: [1.8, 2, 0.9],//TODO\n        fill: false\n      },\n      {\n        label: \"Lastleistung\",\n        borderColor: \"#FF0000\",\n        yAxisID: 'watt',\n        data: [1, 2, 1.8],//TODO\n        fill: false\n      }],\n    [{\n      label: \"Datenmenge\",\n      borderColor: \"#CE1A9E\",\n      yAxisID: 'volume',\n      data: this.volumeData.map(datavolume => datavolume.image_size),\n      fill: false\n    }]\n  ]\n\nchartoptions={\n  title: {\n    display: true,\n    text: '',\n    fontSize: 20\n  },\n  animation: {\n    duration: 0,\n  },\n  hover: {\n    animationDuration: 0,\n  },\n  responsiveAnimationDuration: 0,\n  scales: {\n    yAxes: [{\n      scaleLabel: {\n        display: true,\n        labelString: 'Spannung in Volt'\n      },\n      id: 'voltage',\n      position: 'left',\n      ticks: {\n        beginAtZero: true\n      }\n    },\n    {\n      scaleLabel: {\n        display: true,\n        labelString: 'Stromstärke in A'\n      },\n      id: 'current',\n      position: 'right',\n      ticks: {\n        beginAtZero: true\n      }\n    },\n    {\n      scaleLabel: {\n        display: true,\n        labelString: 'Leistung in Watt'\n      },\n      id: 'watt',\n      position: 'right',\n      ticks: {\n        beginAtZero: true\n      }\n    },\n    {\n      scaleLabel: {\n        display: true,\n        labelString: 'Datenmenge in Byte'\n      },\n\n      id: 'volume',\n      position: 'left',\n      ticks: {\n        beginAtZero: true\n      }\n    }\n    ]\n  }\n}\n\n  constructor(adminpanelDataService: AdminpanelDataService) {\n    this.adminpanelDataService = adminpanelDataService\n    this.extendedModeStatus = new BehaviorSubject(false)\n  }\n\n  ngOnInit() {\n    this.initData();\n    console.log(this.chartdatasets)\n    \n  }\n\n  diagramChange(event: MatButtonToggleChange) {\n    this.lastEvent = event;\n    if (event.value == \"solar\") {\n      this.volIsToggled = true;\n      this.solarChart();\n    }\n    else if (event.value == \"battery\") {\n      this.volIsToggled = true;\n      this.batteryChart();\n    }\n    else if (event.value == \"raspberry\") {\n      this.volIsToggled = true;\n      this.raspberryChart();\n    }\n    else if (event.value == \"volume\") {\n      this.volIsToggled = false;\n      this.volumeChart();\n    }\n \n  }\n  initData() {\n    var input = 4;\n    var date = new Date();\n    var firstMonthDay = new Date(date.getFullYear(), date.getMonth(), 1);\n    var lastMonthDay = new Date(date.getFullYear(), date.getMonth() + 1, 0);\n\n    this.adminpanelDataSubscription =\n      this.adminpanelDataService.getSolarData(input).subscribe((datasolar) => {\n        this.solarData = datasolar;\n        this.solarChart();\n      });\n\n    this.adminpanelDataSubscription =\n      this.adminpanelDataService.getBatteryData(input).subscribe((databattery) => {\n        this.batteryData = databattery;\n      });\n\n    this.adminpanelDataSubscription =\n      this.adminpanelDataService.getRaspberryData(input).subscribe((datarasp) => {\n        this.raspberryData = datarasp;\n      });\n\n    this.adminpanelDataSubscription =\n      this.adminpanelDataService.getVolumeDataFrame(firstMonthDay,lastMonthDay).subscribe((datavol) => {\n        console.log(datavol)\n        this.volumeData = datavol;\n      });\n  }\n  updateChartLabels() {\n    this.chartlabels\n  }\n\n  displayedLogColumns: string[] = ['date', 'name', 'action'];\n  logTableData = logData;\n\n  displayedSensorColumns: string[] = ['sensor', 'status'];\n  sensorTableData = sensorData;\n\n  solarChart() {\n\n    this.getSolarDataSet();\n    this.buildChart(this.chartdatasets[0], this.chartnames[0], this.solarData.map(data => new Date(data.measure_time).toLocaleString([],{month:'2-digit',day:'2-digit',hour:'2-digit',minute:'2-digit'})))\n  }\n\n  batteryChart() {\n    this.getBatteryDataSet()\n    this.buildChart(this.chartdatasets[1], this.chartnames[1], this.batteryData.map(datesolar => new Date(datesolar.measure_time).toLocaleString([],{month:'2-digit',day:'2-digit',hour:'2-digit',minute:'2-digit'})))\n  }\n\n  raspberryChart() {\n    this.getRaspberryDataSet()\n    this.buildChart(this.chartdatasets[2], this.chartnames[2], this.raspberryData.map(datesolar => new Date(datesolar.measure_time).toLocaleString([],{month:'2-digit',day:'2-digit',hour:'2-digit',minute:'2-digit'})))\n  }\n\n  volumeChart() {\n    this.getVolumeDataSet();\n    this.buildChart(this.chartdatasets[3], this.chartnames[3], this.raspberryData.map(datesolar => new Date(datesolar.measure_time).toLocaleString([],{month:'2-digit',day:'2-digit',hour:'2-digit',minute:'2-digit'})))\n  }\n\n  buildChart(data, diaName, dat) {\n    if(this.chart!=undefined){\n      this.chart.destroy();\n    }\n    let canvas = document.getElementById('elecChart');\n    let dataSet = data;\n    this.chartoptions.title.text=diaName\n  this.chart = new Chart(canvas, {\n      type: 'line',\n      data: {\n        labels: dat,\n        datasets: dataSet\n      },\n      options: this.chartoptions\n    });\n     \n    \n  }\n  getSolarDataSet() {\n    this.chartdatasets[0][0].data = this.solarData.map(datasolar => datasolar.voltage)\n    console.log(this.chartdatasets[0][0].data)\n    this.chartdatasets[0][1].data = [1, 2, 1.8]\n\n  }\n\n  getBatteryDataSet() {\n    this.chartdatasets[1][0].data = this.batteryData.map(data=> data.voltage);//TODO\n    this.chartdatasets[1][1].data = this.batteryData.map(data=> data.current);//TODO\n\n  }\n\n  getRaspberryDataSet() {\n    this.chartdatasets[2][0].data = [1.8, 2, 0.9];//TODO\n    this.chartdatasets[2][1].data = [1, 2, 1.8];//TODO\n  }\n\n  getVolumeDataSet() {\n    this.chartdatasets[3][0].data=this.volumeData.map(datavolume => datavolume.image_size);\n    document.getElementById(\"volSum\").innerHTML = this.chartdatasets[3][0].data.reduce(add).toString(); //Summe der einzelnen Werte im Zeitraum\n    console.log(this.chartdatasets)\n  }\n\n  /*Eventhandles for Timeframe */\n  addStartEvent(event: MatDatepickerInputEvent) {\n    this.startdateEvents.push(`${event.value}`);\n    console.log(this.startdateEvents)\n\n  }\n\n  addEndEvent(event: MatDatepickerInputEvent) {\n    this.enddateEvents.push(`${event.value}`);\n    console.log(this.enddateEvents)\n\n  }\n\n  applyTimeframe() {\n    let startstring = this.startdateEvents[this.startdateEvents.length - 1]\n    let startdate = new Date(startstring);\n    console.log(startdate);\n\n    let endstring = this.enddateEvents[this.enddateEvents.length - 1]\n    let enddate = new Date(endstring);\n    console.log(enddate);\n\n\n    if (enddate > startdate) {\n      this.adminpanelDataSubscription =\n        this.adminpanelDataService.getSolarDataFrame(startdate, enddate).subscribe((data) => {\n          this.solarData = data;\n        });\n\n      this.adminpanelDataSubscription =\n        this.adminpanelDataService.getBatteryDataFrame(startdate, enddate).subscribe((data) => {\n          this.batteryData = data;\n        });\n\n      this.adminpanelDataSubscription =\n        this.adminpanelDataService.getRaspberryDataFrame(startdate, enddate).subscribe((data) => {\n          this.raspberryData = data;\n        });\n\n      this.adminpanelDataSubscription =\n        this.adminpanelDataService.getVolumeDataFrame(startdate, enddate).subscribe((data) => {\n          this.volumeData = data;\n        });\n      if(this.lastEvent != undefined) this.diagramChange(this.lastEvent);\n      else{ this.solarChart() }\n    }\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/sensorActions.html":{"url":"interfaces/sensorActions.html","title":"interface - sensorActions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  sensorActions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/adminpanel/adminpanel.component.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        sensor\n                                \n                                \n                                        status\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        sensor\n                                    \n                                \n                                \n                                    \n                                        sensor:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        status\n                                    \n                                \n                                \n                                    \n                                        status:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { SolarData, AdminpanelDataService, BatteryData, VolumeData, RaspberryData } from \"../adminpanel-data.service\";\nimport { MatButtonToggleChange } from '@angular/material/button-toggle';\nimport { MatDatepickerInputEvent } from '@angular/material/datepicker';\nimport { BehaviorSubject, Subscription } from 'rxjs';\nimport { Chart } from 'chart.js';\n\n\nvar dates = ['25.05.2020', '26.05.2020', '27.05.2020']\n\nexport interface raspyActions {\n  date: string;\n  name: string;\n  action: string;\n}\n\nexport interface sensorActions {\n  sensor: string;\n  status: string;\n}\n\nconst add = (a, b) => a + b;\nconst logData: raspyActions[] = [];\nconst sensorData: sensorActions[] = [\n  { sensor: \"Temperatur\", status: \"OK\" },\n  { sensor: \"Wind\", status: \"OK\" },\n  { sensor: \"Spannung Raspberry\", status: \"OK\" },\n  { sensor: \"Strom Raspberry\", status: \"OK\" },\n  { sensor: \"Spannung Photovoltaik\", status: \"OK\" },\n  { sensor: \"Strom Photovoltaik\", status: \"OK\" },\n  { sensor: \"Leistungsaufnahme\", status: \"OK\" },\n  { sensor: \"Ladestrom\", status: \"OK\" }\n];\n\n@Component({\n  selector: 'app-adminpanel',\n  templateUrl: './adminpanel.component.html',\n  styleUrls: ['./adminpanel.component.scss']\n})\n\nexport class AdminpanelComponent implements OnInit {\n\n  adminpanelDataService: AdminpanelDataService;\n  solarData: SolarData[] = [];\n  batteryData: BatteryData[] = [];\n  raspberryData: RaspberryData[] = [];\n  volumeData: VolumeData[] = [];\n  extendedModeStatus: BehaviorSubject;\n  lastEvent: MatButtonToggleChange;\n\n  startdateEvents: string[] = [];\n  enddateEvents: string[] = [];\n\n  //Gibt für [hidden] an, ob die Leistungsaufnahme ausgewählt wurde oder nicht\n  volIsToggled: boolean = true;\n\n  adminpanelDataSubscription: Subscription;\n\n\n  chart: Chart;\n  chartnames: String[] = [\"Solarzelle\", \"Akku\", \"Raspberry\", \"Datenverbrauch\"];\n  chartlabels: String[] = ['Spannung in Volt', 'Stromstärke in A', 'Leistung in Watt', 'Datenmenge in Byte']\n\n  chartdatasets = [\n    [//Solarzelle\n      {\n        label: \"Spannung\",\n        borderColor: \"#013ADF\",\n        yAxisID: 'voltage',\n        data: this.solarData.map(datasolar => datasolar.voltage),\n        fill: false\n      },\n      {\n        label: \"Leistung\",\n        borderColor: \"#FF0000\",\n        yAxisID: 'watt',\n        data: [1, 2, 1.8],\n        fill: false\n      }],\n    [\n      {\n        //Akku\n        label: \"Spannung\",\n        borderColor: \"#013ADF\",\n        yAxisID: 'voltage',\n        data: [],\n        fill: false\n      },\n      {\n        label: \"Ladestrom\",\n        borderColor: \"#FF0000\",\n        yAxisID: 'current',\n        data: [],\n        fill: false\n      }\n    ],\n    [//Raspi\n      {\n        label: \"Lastspannung\",\n        borderColor: \"#013ADF\",\n        yAxisID: 'voltage',\n        data: [1.8, 2, 0.9],//TODO\n        fill: false\n      },\n      {\n        label: \"Lastleistung\",\n        borderColor: \"#FF0000\",\n        yAxisID: 'watt',\n        data: [1, 2, 1.8],//TODO\n        fill: false\n      }],\n    [{\n      label: \"Datenmenge\",\n      borderColor: \"#CE1A9E\",\n      yAxisID: 'volume',\n      data: this.volumeData.map(datavolume => datavolume.image_size),\n      fill: false\n    }]\n  ]\n\nchartoptions={\n  title: {\n    display: true,\n    text: '',\n    fontSize: 20\n  },\n  animation: {\n    duration: 0,\n  },\n  hover: {\n    animationDuration: 0,\n  },\n  responsiveAnimationDuration: 0,\n  scales: {\n    yAxes: [{\n      scaleLabel: {\n        display: true,\n        labelString: 'Spannung in Volt'\n      },\n      id: 'voltage',\n      position: 'left',\n      ticks: {\n        beginAtZero: true\n      }\n    },\n    {\n      scaleLabel: {\n        display: true,\n        labelString: 'Stromstärke in A'\n      },\n      id: 'current',\n      position: 'right',\n      ticks: {\n        beginAtZero: true\n      }\n    },\n    {\n      scaleLabel: {\n        display: true,\n        labelString: 'Leistung in Watt'\n      },\n      id: 'watt',\n      position: 'right',\n      ticks: {\n        beginAtZero: true\n      }\n    },\n    {\n      scaleLabel: {\n        display: true,\n        labelString: 'Datenmenge in Byte'\n      },\n\n      id: 'volume',\n      position: 'left',\n      ticks: {\n        beginAtZero: true\n      }\n    }\n    ]\n  }\n}\n\n  constructor(adminpanelDataService: AdminpanelDataService) {\n    this.adminpanelDataService = adminpanelDataService\n    this.extendedModeStatus = new BehaviorSubject(false)\n  }\n\n  ngOnInit() {\n    this.initData();\n    console.log(this.chartdatasets)\n    \n  }\n\n  diagramChange(event: MatButtonToggleChange) {\n    this.lastEvent = event;\n    if (event.value == \"solar\") {\n      this.volIsToggled = true;\n      this.solarChart();\n    }\n    else if (event.value == \"battery\") {\n      this.volIsToggled = true;\n      this.batteryChart();\n    }\n    else if (event.value == \"raspberry\") {\n      this.volIsToggled = true;\n      this.raspberryChart();\n    }\n    else if (event.value == \"volume\") {\n      this.volIsToggled = false;\n      this.volumeChart();\n    }\n \n  }\n  initData() {\n    var input = 4;\n    var date = new Date();\n    var firstMonthDay = new Date(date.getFullYear(), date.getMonth(), 1);\n    var lastMonthDay = new Date(date.getFullYear(), date.getMonth() + 1, 0);\n\n    this.adminpanelDataSubscription =\n      this.adminpanelDataService.getSolarData(input).subscribe((datasolar) => {\n        this.solarData = datasolar;\n        this.solarChart();\n      });\n\n    this.adminpanelDataSubscription =\n      this.adminpanelDataService.getBatteryData(input).subscribe((databattery) => {\n        this.batteryData = databattery;\n      });\n\n    this.adminpanelDataSubscription =\n      this.adminpanelDataService.getRaspberryData(input).subscribe((datarasp) => {\n        this.raspberryData = datarasp;\n      });\n\n    this.adminpanelDataSubscription =\n      this.adminpanelDataService.getVolumeDataFrame(firstMonthDay,lastMonthDay).subscribe((datavol) => {\n        console.log(datavol)\n        this.volumeData = datavol;\n      });\n  }\n  updateChartLabels() {\n    this.chartlabels\n  }\n\n  displayedLogColumns: string[] = ['date', 'name', 'action'];\n  logTableData = logData;\n\n  displayedSensorColumns: string[] = ['sensor', 'status'];\n  sensorTableData = sensorData;\n\n  solarChart() {\n\n    this.getSolarDataSet();\n    this.buildChart(this.chartdatasets[0], this.chartnames[0], this.solarData.map(data => new Date(data.measure_time).toLocaleString([],{month:'2-digit',day:'2-digit',hour:'2-digit',minute:'2-digit'})))\n  }\n\n  batteryChart() {\n    this.getBatteryDataSet()\n    this.buildChart(this.chartdatasets[1], this.chartnames[1], this.batteryData.map(datesolar => new Date(datesolar.measure_time).toLocaleString([],{month:'2-digit',day:'2-digit',hour:'2-digit',minute:'2-digit'})))\n  }\n\n  raspberryChart() {\n    this.getRaspberryDataSet()\n    this.buildChart(this.chartdatasets[2], this.chartnames[2], this.raspberryData.map(datesolar => new Date(datesolar.measure_time).toLocaleString([],{month:'2-digit',day:'2-digit',hour:'2-digit',minute:'2-digit'})))\n  }\n\n  volumeChart() {\n    this.getVolumeDataSet();\n    this.buildChart(this.chartdatasets[3], this.chartnames[3], this.raspberryData.map(datesolar => new Date(datesolar.measure_time).toLocaleString([],{month:'2-digit',day:'2-digit',hour:'2-digit',minute:'2-digit'})))\n  }\n\n  buildChart(data, diaName, dat) {\n    if(this.chart!=undefined){\n      this.chart.destroy();\n    }\n    let canvas = document.getElementById('elecChart');\n    let dataSet = data;\n    this.chartoptions.title.text=diaName\n  this.chart = new Chart(canvas, {\n      type: 'line',\n      data: {\n        labels: dat,\n        datasets: dataSet\n      },\n      options: this.chartoptions\n    });\n     \n    \n  }\n  getSolarDataSet() {\n    this.chartdatasets[0][0].data = this.solarData.map(datasolar => datasolar.voltage)\n    console.log(this.chartdatasets[0][0].data)\n    this.chartdatasets[0][1].data = [1, 2, 1.8]\n\n  }\n\n  getBatteryDataSet() {\n    this.chartdatasets[1][0].data = this.batteryData.map(data=> data.voltage);//TODO\n    this.chartdatasets[1][1].data = this.batteryData.map(data=> data.current);//TODO\n\n  }\n\n  getRaspberryDataSet() {\n    this.chartdatasets[2][0].data = [1.8, 2, 0.9];//TODO\n    this.chartdatasets[2][1].data = [1, 2, 1.8];//TODO\n  }\n\n  getVolumeDataSet() {\n    this.chartdatasets[3][0].data=this.volumeData.map(datavolume => datavolume.image_size);\n    document.getElementById(\"volSum\").innerHTML = this.chartdatasets[3][0].data.reduce(add).toString(); //Summe der einzelnen Werte im Zeitraum\n    console.log(this.chartdatasets)\n  }\n\n  /*Eventhandles for Timeframe */\n  addStartEvent(event: MatDatepickerInputEvent) {\n    this.startdateEvents.push(`${event.value}`);\n    console.log(this.startdateEvents)\n\n  }\n\n  addEndEvent(event: MatDatepickerInputEvent) {\n    this.enddateEvents.push(`${event.value}`);\n    console.log(this.enddateEvents)\n\n  }\n\n  applyTimeframe() {\n    let startstring = this.startdateEvents[this.startdateEvents.length - 1]\n    let startdate = new Date(startstring);\n    console.log(startdate);\n\n    let endstring = this.enddateEvents[this.enddateEvents.length - 1]\n    let enddate = new Date(endstring);\n    console.log(enddate);\n\n\n    if (enddate > startdate) {\n      this.adminpanelDataSubscription =\n        this.adminpanelDataService.getSolarDataFrame(startdate, enddate).subscribe((data) => {\n          this.solarData = data;\n        });\n\n      this.adminpanelDataSubscription =\n        this.adminpanelDataService.getBatteryDataFrame(startdate, enddate).subscribe((data) => {\n          this.batteryData = data;\n        });\n\n      this.adminpanelDataSubscription =\n        this.adminpanelDataService.getRaspberryDataFrame(startdate, enddate).subscribe((data) => {\n          this.raspberryData = data;\n        });\n\n      this.adminpanelDataSubscription =\n        this.adminpanelDataService.getVolumeDataFrame(startdate, enddate).subscribe((data) => {\n          this.volumeData = data;\n        });\n      if(this.lastEvent != undefined) this.diagramChange(this.lastEvent);\n      else{ this.solarChart() }\n    }\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            add   (src/.../adminpanel.component.ts)\n                        \n                        \n                            context   (src/.../test.ts)\n                        \n                        \n                            dates   (src/.../adminpanel.component.ts)\n                        \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            logData   (src/.../adminpanel.component.ts)\n                        \n                        \n                            require   (src/.../test.ts)\n                        \n                        \n                            sensorData   (src/.../adminpanel.component.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/adminpanel/adminpanel.component.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            add\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (a, b) => a + b\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dates\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : ['25.05.2020', '26.05.2020', '27.05.2020']\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            logData\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         raspyActions[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sensorData\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         sensorActions[]\n\n                        \n                    \n                    \n                        \n                            Default value : [\n  { sensor: \"Temperatur\", status: \"OK\" },\n  { sensor: \"Wind\", status: \"OK\" },\n  { sensor: \"Spannung Raspberry\", status: \"OK\" },\n  { sensor: \"Strom Raspberry\", status: \"OK\" },\n  { sensor: \"Spannung Photovoltaik\", status: \"OK\" },\n  { sensor: \"Strom Photovoltaik\", status: \"OK\" },\n  { sensor: \"Leistungsaufnahme\", status: \"OK\" },\n  { sensor: \"Ladestrom\", status: \"OK\" }\n]\n                        \n                    \n\n\n            \n        \n\n    src/test.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            context\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : require.context('./', true, /\\.spec\\.ts$/)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            require\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.prod.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: true\n}\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: false\n}\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
