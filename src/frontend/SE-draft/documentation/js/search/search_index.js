var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.8","fields":["title","body"],"fieldVectors":[["title/components/AdminComponent.html",[0,0.807,1,1.238]],["body/components/AdminComponent.html",[0,1.104,1,1.864,2,2.076,3,0.215,4,0.183,5,1.579,6,2.312,7,1.579,8,1.579,9,0.183,10,2.052,11,1.71,12,2.223,13,1.579,14,2.558,15,2.142,16,3.005,17,1.71,18,4.268,19,1.71,20,3.607,21,0.249,22,0.525,23,3.347,24,4.268,25,4.268,26,4.268,27,4.698,28,2.736,29,4.268,30,1.314,31,4.698,32,3.607,33,2.447,34,0.978,35,3.607,36,4.496,37,1.945,38,3.607,39,1.563,40,0.034,41,1.443,42,0.701,43,1.563,44,2.464,45,1.554,46,3.086,47,3.607,48,2.464,49,2.464,50,2.464,51,2.464,52,2.736,53,2.464,54,2.076,55,1.314,56,1.314,57,2.023,58,2.464,59,1.443,60,2.464,61,2.456,62,2.464,63,2.464,64,0.41,65,0.215,66,2.464,67,1.579,68,1.579,69,1.168,70,0.215,71,0.122,72,0.695,73,2.464,74,3.607,75,2.464,76,2.464,77,2.464,78,2.464,79,3.607,80,2.464,81,2.609,82,0.978,83,2.464,84,2.464,85,2.464,86,2.464,87,1.782,88,2.464,89,2.464,90,2.464,91,2.464,92,2.464,93,2.464,94,3.607,95,3.607,96,3.607,97,4.268,98,3.607,99,2.464,100,3.778,101,2.464,102,2.464,103,2.464,104,3.005,105,5,106,2.464,107,1.782,108,3.086,109,2.052,110,2.456,111,2.312,112,2.052,113,1.418,114,2.456,115,3.005,116,3.005,117,2.052,118,2.052,119,2.464,120,3.005,121,2.464,122,1.782,123,1.782,124,2.312,125,2.464,126,1.782,127,2.052,128,1.579,129,2.052,130,3.607,131,2.464,132,3.607,133,3.005,134,2.464,135,3.607,136,2.464,137,2.052,138,2.052,139,2.464,140,2.052,141,2.464,142,1.283,143,2.464,144,1.782,145,3.607,146,2.464,147,3.607,148,3.005,149,1.418,150,1.782,151,2.052,152,2.464,153,2.464,154,2.464,155,2.464,156,2.464,157,2.464,158,2.464,159,2.052,160,1.283,161,2.312,162,2.076,163,1.579,164,1.017,165,1.579,166,1.579,167,0.897,168,1.579,169,1.067,170,1.579,171,0.978,172,1.579,173,0.897,174,1.283,175,1.579,176,1.579,177,0.065,178,0.096,179,0.065]],["title/injectables/AdminService.html",[23,1.795,180,0.454]],["body/injectables/AdminService.html",[3,0.338,4,0.287,9,0.287,21,0.391,22,0.715,23,2.829,28,2.481,30,1.79,34,1.536,37,1.961,39,2.129,40,0.033,41,1.51,42,0.702,43,2.129,45,1.41,55,1.41,56,1.41,59,1.659,61,2.227,64,0.471,65,0.338,70,0.429,71,0.192,72,1.755,81,3.906,177,0.103,178,0.131,179,0.103,180,0.715,181,2.016,182,2.799,183,1.659,184,1.802,185,4.916,186,1.51,187,1.69,188,4.916,189,4.095,190,4.5,191,3.871,192,3.871,193,1.951,194,3.871,195,3.871,196,3.225,197,1.092,198,3.225,199,2.481,200,1.092,201,0.838,202,1.189,203,0.693,204,3.225,205,3.225,206,3.225,207,0.287,208,3.225,209,3.225]],["title/injectables/AdminpanelDataService.html",[180,0.454,210,1.238]],["body/injectables/AdminpanelDataService.html",[3,0.223,4,0.189,9,0.189,21,0.257,22,0.538,30,1.348,34,1.013,37,1.981,39,2.506,40,0.034,41,1.777,42,0.77,43,2.506,45,2.074,55,0.929,56,0.929,59,0.784,64,0.323,65,0.223,70,0.443,71,0.126,72,1.491,164,0.552,177,0.068,178,0.098,179,0.068,180,0.538,181,1.329,183,1.337,184,1.558,186,1.137,187,1.491,193,1.469,197,0.72,200,0.72,201,0.552,202,0.784,203,0.977,207,0.354,210,1.469,211,3.114,212,0.853,213,2.676,214,3.701,215,3.701,216,3.701,217,3.701,218,3.701,219,3.701,220,3.701,221,3.701,222,2.676,223,1.348,224,1.638,225,2.126,226,2.129,227,1.93,228,2.126,229,2.841,230,2.551,231,4.041,232,2.551,233,3.979,234,2.129,235,2.551,236,2.551,237,2.551,238,2.551,239,2.126,240,2.551,241,2.551,242,2.129,243,2.551,244,2.551,245,2.551,246,1.845,247,0.929,248,0.855,249,0.929,250,0.929,251,0.929,252,0.604,253,0.929,254,0.929,255,0.929,256,0.929,257,0.929,258,0.929,259,2.129,260,1.456,261,2.268,262,2.506,263,2.506,264,1.586,265,1.468,266,0.929,267,1.468,268,1.468,269,2.506,270,1.468,271,1.468,272,1.468,273,1.468,274,1.013,275,1.347,276,2.064,277,2.064,278,1.886,279,1.013,280,1.105,281,1.013,282,1.013,283,1.468]],["title/components/AppComponent.html",[0,0.807,169,1.351]],["body/components/AppComponent.html",[0,1.404,1,1.552,2,2.847,3,0.341,4,0.29,5,2.506,6,2.506,7,2.506,8,2.506,9,0.29,13,2.506,14,2.893,15,2.422,17,2.345,19,2.345,21,0.394,22,0.72,37,1.308,40,0.033,41,1.52,42,0.508,55,1.424,56,1.424,59,1.201,64,0.341,65,0.341,70,0.341,71,0.194,124,2.506,126,2.828,160,2.037,161,3.171,162,2.847,163,2.506,164,1.234,165,2.506,166,2.506,167,1.424,168,2.506,169,2.471,170,2.506,171,1.552,172,2.506,173,1.424,174,2.827,175,2.506,176,2.506,177,0.104,178,0.132,179,0.104,201,1.071,252,1.172,284,3.257,285,5.427,286,4.947,287,3.924,288,4.947,289,4.947,290,3.91,291,4.947,292,4.947,293,3.91,294,3.91]],["title/modules/AppModule.html",[295,1.999,296,1.999]],["body/modules/AppModule.html",[1,2.094,3,0.221,4,0.188,9,0.188,15,1.006,40,0.033,64,0.572,65,0.221,70,0.221,71,0.126,160,1.32,167,1.921,169,2.563,171,2.094,173,1.921,177,0.067,178,0.098,179,0.067,187,1.039,197,0.715,295,1.625,296,4,297,1.459,298,1.625,299,3.614,300,3.443,301,3.137,302,1.833,303,2.112,304,2.112,305,2.112,306,2.112,307,2.112,308,3.036,309,2.191,310,2.191,311,3.068,312,2.112,313,1.833,314,2.535,315,3.068,316,3.683,317,3.068,318,1.625,319,3.068,320,2.535,321,1.833,322,2.112,323,4.338,324,2.535,325,4.338,326,1.32,327,3.683,328,2.535,329,2.535,330,2.535,331,2.535,332,2.112,333,2.112,334,2.112,335,3.683,336,2.535,337,3.683,338,2.112,339,3.683,340,2.535,341,3.683,342,2.535,343,2.535,344,3.683,345,2.535,346,3.683,347,2.535,348,3.683,349,2.535,350,3.683,351,2.535,352,3.683,353,2.535,354,3.683,355,2.535,356,3.683,357,2.535,358,3.683,359,2.535,360,2.535,361,3.683,362,2.663,363,3.683,364,2.361,365,3.683,366,2.535,367,3.683,368,2.535,369,3.683,370,2.535,371,3.683,372,1.833,373,3.683,374,2.535,375,3.683,376,2.535,377,3.683,378,2.535,379,2.535,380,3.683,381,2.535,382,3.683,383,2.535,384,3.683,385,2.535,386,3.683,387,2.535,388,3.683,389,3.683,390,2.535,391,3.683,392,2.535,393,3.683,394,3.683,395,3.683,396,3.683,397,2.535,398,3.683,399,2.112,400,3.683,401,2.535,402,3.683,403,2.535,404,3.683,405,2.535,406,3.683,407,2.112,408,3.683,409,2.535,410,3.683,411,2.535,412,3.683,413,2.535,414,3.683,415,2.535,416,3.683,417,2.535,418,3.683,419,2.535,420,3.683,421,2.535,422,2.112,423,1.918,424,3.683,425,1.459,426,2.112,427,2.119,428,1.833,429,2.112,430,3.683,431,2.781,432,1.625,433,3.683,434,1.625,435,3.683,436,2.112,437,2.535,438,2.535]],["title/classes/AppPage.html",[71,0.154,439,2.256]],["body/classes/AppPage.html",[3,0.394,4,0.335,9,0.335,21,0.455,30,1.968,37,1.807,40,0.033,45,1.968,64,0.394,70,0.394,71,0.224,128,2.893,162,2.597,177,0.12,178,0.144,179,0.12,201,0.977,203,0.968,318,2.893,439,3.908,440,3.264,441,3.76,442,5.996,443,5.996,444,4.513,445,4.513,446,3.76,447,4.513,448,5.404,449,4.513,450,4.513]],["title/modules/AppRoutingModule.html",[295,1.999,308,1.795]],["body/modules/AppRoutingModule.html",[0,1.499,1,2.017,3,0.356,4,0.303,9,0.303,16,3.402,40,0.034,64,0.538,65,0.356,67,2.618,70,0.356,71,0.202,142,2.648,167,1.851,171,2.017,173,1.851,174,2.127,177,0.109,178,0.135,179,0.109,297,2.35,301,2.953,302,2.953,308,2.925,315,3.402,319,4.235,332,3.402,333,3.402,334,3.402,426,3.402,427,2.35,428,2.953,429,3.402,451,4.084,452,4.084,453,3.548,454,5.084,455,4.235,456,5.536,457,2.618,458,5.793,459,2.953,460,4.084]],["title/guards/AuthGuardService.html",[427,1.795,461,2.256]],["body/guards/AuthGuardService.html",[3,0.363,4,0.309,9,0.309,11,1.974,21,0.42,22,0.606,30,1.873,34,1.652,36,5.207,37,1.72,39,1.803,40,0.033,41,1.279,42,0.541,43,1.803,45,1.516,54,2.96,57,1.974,64,0.487,65,0.363,67,2.669,70,0.363,71,0.206,82,1.652,177,0.111,178,0.137,179,0.111,180,0.606,201,0.901,203,0.921,427,2.96,428,4.038,455,5.086,462,4.163,463,4.652,464,3.468,465,3.579,466,4.163,467,3.739,468,4.163,469,4.163,470,4.163,471,4.163,472,4.163,473,4.163,474,4.163]],["title/injectables/AuthService.html",[180,0.454,467,1.999]],["body/injectables/AuthService.html",[3,0.359,4,0.306,9,0.306,21,0.416,22,0.744,28,3.276,30,1.861,34,2.205,37,1.858,40,0.034,45,1.5,54,2.941,55,1.5,56,1.5,57,1.953,64,0.446,65,0.359,70,0.359,71,0.204,82,1.634,177,0.109,178,0.136,179,0.109,180,0.744,181,2.145,200,1.162,201,0.891,203,0.915,248,0.915,457,2.64,465,3.903,467,3.276,475,3.431,476,5.557,477,5.811,478,5.111,479,4.119,480,5.557,481,3.431,482,3.431,483,4.119,484,4.119,485,3.431,486,4.119,487,4.119,488,4.119,489,4.119,490,4.119,491,4.119,492,4.119]],["title/interfaces/AuthToken.html",[61,1.795,207,0.231]],["body/interfaces/AuthToken.html",[3,0.369,4,0.314,9,0.314,21,0.426,22,0.756,23,2.432,28,2.709,40,0.033,42,0.675,59,1.882,61,2.988,64,0.491,65,0.369,70,0.453,71,0.209,72,1.585,81,3.057,177,0.112,178,0.138,179,0.112,180,0.756,182,3.057,183,1.298,184,1.595,186,1.298,187,1.585,189,3.521,190,3.521,193,1.677,196,3.521,197,1.192,198,3.521,199,2.709,200,1.192,201,0.915,202,1.298,203,0.757,204,3.521,205,3.521,206,3.521,207,0.314,208,4.885,209,4.885,493,1.413]],["title/interfaces/BatteryData.html",[207,0.231,279,1.238]],["body/interfaces/BatteryData.html",[3,0.284,4,0.242,9,0.242,21,0.329,22,0.639,40,0.034,42,0.721,64,0.383,65,0.284,70,0.484,71,0.161,72,1.238,164,0.705,177,0.087,178,0.117,179,0.087,180,0.639,183,1.001,184,1.349,186,1.001,187,1.401,193,1.293,197,0.919,200,0.919,201,0.705,202,1.001,203,1.046,207,0.394,210,1.293,211,1.697,212,1.089,223,1.186,224,1.557,226,1.874,227,1.976,229,2.587,234,1.874,242,1.874,247,1.186,248,0.952,249,1.186,250,1.186,251,1.186,252,0.772,253,1.186,254,1.186,255,1.186,256,1.186,257,1.186,258,1.186,259,2.526,260,1.661,261,2.587,262,2.858,263,2.858,264,1.808,265,1.874,266,1.186,267,1.874,268,1.874,269,2.858,270,1.874,271,1.874,272,1.874,273,1.874,274,1.293,275,1.648,276,2.71,277,2.71,278,2.476,279,1.742,280,2.302,281,1.293,282,1.293,283,1.874,493,1.089]],["title/components/GraphsComponent.html",[0,0.807,171,1.238]],["body/components/GraphsComponent.html",[0,0.73,1,0.519,2,1.259,3,0.114,4,0.097,5,0.838,6,0.838,7,0.838,8,0.838,9,0.097,11,1.038,12,1.471,13,0.838,14,2.003,15,1.677,17,1.038,19,1.038,21,0.132,22,0.318,30,0.797,33,1.721,34,0.519,37,2.013,39,2.061,40,0.034,41,1.536,42,0.746,43,2.061,45,1.92,46,3.755,52,1.81,55,1.732,56,1.732,57,1.566,59,1.015,64,0.369,65,0.114,68,1.81,69,0.62,70,0.114,71,0.065,82,0.869,100,1.583,104,1.823,107,0.945,108,3.205,109,1.089,110,1.901,111,2.118,112,3.52,113,1.259,114,1.625,115,1.089,116,1.089,117,1.089,118,1.089,120,1.089,122,1.583,123,0.945,124,1.403,126,1.583,127,1.089,128,0.838,129,3.315,133,1.089,138,1.089,144,0.945,148,1.089,149,0.752,150,2.66,160,0.681,161,1.403,162,1.259,163,0.838,164,0.915,165,0.838,166,0.838,167,0.476,168,0.838,169,0.566,170,0.838,171,1.311,172,0.838,173,0.476,174,0.681,175,0.838,176,0.838,203,0.234,227,1.536,248,0.852,252,1.209,266,1.678,275,0.796,310,2.117,326,0.681,364,0.838,399,1.089,407,1.089,422,1.089,423,0.681,494,1.089,495,2.824,496,2.189,497,2.824,498,2.189,499,2.824,500,2.042,501,2.824,502,2.824,503,2.824,504,2.042,505,2.042,506,2.824,507,2.824,508,2.824,509,3.678,510,1.625,511,2.189,512,2.072,513,2.824,514,2.824,515,2.189,516,2.308,517,2.189,518,2.189,519,2.389,520,3.303,521,3.303,522,2.824,523,2.042,524,2.189,525,2.189,526,2.189,527,2.189,528,2.189,529,2.189,530,2.189,531,2.189,532,2.189,533,1.583,534,2.432,535,1.307,536,2.358,537,1.583,538,1.307,539,1.307,540,1.307,541,1.307,542,1.307,543,1.307,544,1.307,545,2.189,546,3.303,547,1.307,548,2.189,549,3.303,550,1.307,551,2.189,552,1.307,553,2.189,554,1.307,555,2.189,556,1.307,557,2.189,558,2.189,559,1.307,560,2.189,561,1.307,562,0.945,563,2.353,564,1.583,565,1.583,566,1.583,567,1.583,568,1.307,569,2.389,570,3.303,571,2.042,572,2.389,573,2.389,574,2.66,575,2.66,576,2.389,577,2.389,578,2.118,579,2.189,580,2.824,581,2.389,582,3.303,583,3.303,584,3.303,585,4.432,586,3.303,587,2.389,588,3.303,589,1.307,590,3.678,591,2.189,592,1.403,593,3.303,594,2.824,595,3.303,596,3.303,597,1.307,598,1.307,599,1.307,600,1.307,601,1.307,602,1.307,603,1.307,604,1.307,605,1.307,606,2.042,607,1.307,608,1.307,609,3.303,610,2.189,611,2.189,612,2.189,613,1.307,614,1.307,615,1.307,616,1.307,617,1.307,618,1.307,619,0.838,620,1.307,621,1.307,622,1.307,623,1.307,624,0.945,625,0.945,626,2.189,627,1.307,628,1.307,629,2.824,630,1.307,631,1.307,632,1.307,633,1.307,634,2.824,635,1.307,636,1.307,637,1.307,638,1.307,639,1.307,640,1.307,641,1.307,642,1.307,643,1.307,644,2.189,645,2.189,646,1.307,647,1.307,648,1.307,649,1.307,650,1.307,651,1.307,652,1.307,653,1.307,654,2.189,655,1.307,656,1.307,657,1.307,658,1.307,659,1.307,660,1.307,661,1.307,662,1.307,663,1.823,664,1.307,665,2.189,666,2.189,667,1.307,668,2.189,669,1.307,670,1.307,671,1.307,672,1.307,673,1.307,674,1.307,675,1.307,676,0.752,677,0.752,678,0.945,679,0.752,680,0.945,681,0.945,682,0.945,683,0.945,684,1.583,685,0.945,686,0.945,687,0.945,688,0.945,689,1.583,690,0.945,691,1.307,692,0.945,693,1.307,694,1.307,695,1.307,696,2.189,697,2.189,698,3.303,699,2.189,700,2.189,701,2.189,702,2.189,703,2.389,704,2.189,705,2.189,706,2.189,707,2.189,708,2.189,709,2.189,710,2.189,711,2.189,712,2.189,713,2.189,714,2.189,715,2.189,716,1.307,717,1.307,718,2.353,719,2.824,720,0.945,721,1.307,722,1.307,723,1.307,724,1.307,725,1.307,726,1.307,727,1.307,728,2.353,729,1.307,730,0.838,731,1.089,732,1.089,733,1.089,734,1.307,735,1.307,736,1.307,737,1.307,738,1.307,739,1.307,740,1.307,741,1.307,742,1.307,743,1.307,744,1.307,745,1.307,746,1.307,747,1.307,748,1.307,749,1.307,750,1.307,751,1.307,752,2.353]],["title/interfaces/ImageData.html",[207,0.231,753,1.625]],["body/interfaces/ImageData.html",[3,0.332,4,0.282,9,0.282,21,0.384,22,0.707,40,0.034,42,0.696,59,1.645,64,0.424,65,0.332,70,0.424,71,0.188,72,1.371,164,0.823,177,0.101,178,0.129,179,0.101,180,0.707,183,1.168,184,1.493,186,1.168,187,1.511,193,1.509,197,1.072,200,1.072,201,0.823,202,1.168,203,0.959,207,0.282,212,1.272,223,1.385,224,1.604,227,1.645,247,1.385,248,0.681,249,1.385,250,1.385,251,1.385,252,1.151,253,1.385,254,1.385,255,1.385,256,1.385,257,1.385,258,1.385,264,1.77,275,1.592,309,1.647,425,3.248,493,1.272,753,2.531,754,2.75,755,4.703,756,4.462,757,3.168,758,3.168,759,3.168,760,3.168,761,3.168,762,3.168,763,3.168,764,3.168,765,3.168,766,3.168,767,3.168]],["title/injectables/ImageService.html",[180,0.454,309,1.351]],["body/injectables/ImageService.html",[3,0.285,4,0.242,9,0.242,21,0.329,22,0.64,30,1.601,34,1.295,37,2.014,39,2.153,40,0.034,41,1.527,42,0.721,43,2.153,45,2.022,55,1.601,56,1.601,59,1.35,64,0.384,65,0.285,70,0.384,71,0.162,72,1.613,164,0.706,177,0.087,178,0.117,179,0.087,180,0.64,181,1.699,183,1.527,184,1.705,186,1.35,187,1.613,193,1.744,197,0.92,200,0.92,201,0.706,202,1.002,203,0.89,207,0.242,212,1.091,213,3.178,222,3.178,223,1.601,224,1.619,227,1.002,246,2.359,247,1.188,248,0.787,249,1.188,250,1.188,251,1.188,252,1.041,253,1.188,254,1.188,255,1.188,256,1.188,257,1.188,258,1.188,260,1.47,264,1.601,275,0.92,309,1.904,425,1.877,753,1.699,754,4.401,755,2.718,756,4.141,757,2.718,758,4.431,759,2.718,760,4.431,761,2.718,762,2.718,763,2.718,764,2.718,765,2.718,766,2.718,767,2.718,768,4.395,769,4.971,770,3.263,771,3.263,772,3.263,773,3.263,774,3.263,775,3.263,776,3.263]],["title/classes/NgbdDropdownBasic.html",[71,0.154,777,1.999]],["body/classes/NgbdDropdownBasic.html",[0,0.806,3,0.272,4,0.231,9,0.231,11,1.477,12,2.219,14,1.477,15,1.236,17,1.477,19,1.477,33,1.623,40,0.034,64,0.52,65,0.272,69,1.477,70,0.372,71,0.211,82,1.236,173,1.134,174,1.623,177,0.083,178,0.113,179,0.083,199,1.997,203,0.934,224,0.806,248,0.978,260,1.042,266,1.134,309,2.26,326,1.623,372,2.253,423,1.623,425,1.793,431,2.73,432,1.997,434,1.997,440,2.253,465,1.997,510,1.793,523,2.253,534,2.451,676,1.793,677,1.793,679,1.793,753,2.846,777,2.73,778,2.253,779,2.595,780,2.595,781,4.044,782,2.595,783,2.595,784,2.595,785,3.08,786,4.347,787,2.595,788,4.347,789,2.253,790,2.595,791,2.595,792,2.595,793,2.595,794,2.595,795,2.595,796,2.595,797,2.595,798,2.595,799,2.595,800,2.595,801,2.595,802,2.595,803,2.595,804,2.595,805,2.595,806,3.549,807,2.595,808,2.595,809,2.595,810,2.595,811,4.347,812,4.347,813,2.595,814,2.595,815,2.595,816,4.347,817,4.347,818,4.347,819,4.347,820,4.347,821,2.595,822,2.595,823,2.595,824,2.595,825,2.595,826,2.595,827,4.347,828,2.595,829,2.595,830,2.595,831,2.595,832,2.595,833,2.595,834,2.595,835,2.595,836,2.595,837,2.595,838,2.595,839,2.595,840,2.595,841,2.595,842,2.595,843,2.595,844,2.595,845,2.595,846,2.595,847,2.595,848,2.595,849,2.595,850,2.595,851,2.595,852,2.595,853,2.595]],["title/interfaces/RaspberryData.html",[207,0.231,281,1.238]],["body/interfaces/RaspberryData.html",[3,0.288,4,0.245,9,0.245,21,0.333,22,0.644,40,0.034,42,0.694,64,0.386,65,0.288,70,0.486,71,0.163,72,1.248,164,0.713,177,0.088,178,0.118,179,0.088,180,0.644,183,1.012,184,1.359,186,1.012,187,1.409,193,1.308,197,0.93,200,0.93,201,0.713,202,1.012,203,1.049,207,0.396,210,1.308,211,1.717,212,1.102,223,1.2,224,1.561,226,1.897,227,1.97,229,2.602,234,1.897,242,1.897,247,1.2,248,0.956,249,1.2,250,1.2,251,1.2,252,0.781,253,1.2,254,1.2,255,1.2,256,1.2,257,1.2,258,1.2,259,2.547,260,1.671,261,2.602,262,2.875,263,2.875,264,1.819,265,1.897,266,1.2,267,1.897,268,1.897,269,2.875,270,1.897,271,1.897,272,1.897,273,1.897,274,1.308,275,1.653,276,2.719,277,2.719,278,2.485,279,1.308,280,1.428,281,1.756,282,1.308,283,1.897,493,1.102]],["title/interfaces/SolarData.html",[207,0.231,274,1.238]],["body/interfaces/SolarData.html",[3,0.288,4,0.245,9,0.245,21,0.333,22,0.644,40,0.034,42,0.694,64,0.386,65,0.288,70,0.486,71,0.163,72,1.248,164,0.713,177,0.088,178,0.118,179,0.088,180,0.644,183,1.012,184,1.359,186,1.012,187,1.409,193,1.308,197,0.93,200,0.93,201,0.713,202,1.012,203,1.049,207,0.396,210,1.308,211,1.717,212,1.102,223,1.2,224,1.561,226,1.897,227,1.97,229,2.602,234,1.897,242,1.897,247,1.2,248,0.956,249,1.2,250,1.2,251,1.2,252,0.781,253,1.2,254,1.2,255,1.2,256,1.2,257,1.2,258,1.2,259,2.547,260,1.671,261,2.602,262,2.875,263,2.875,264,1.819,265,1.897,266,1.2,267,1.897,268,1.897,269,2.875,270,1.897,271,1.897,272,1.897,273,1.897,274,1.756,275,1.653,276,2.719,277,2.719,278,2.485,279,1.308,280,1.428,281,1.308,282,1.308,283,1.897,493,1.102]],["title/interfaces/TemperatureData.html",[207,0.231,512,1.625]],["body/interfaces/TemperatureData.html",[3,0.329,4,0.279,9,0.279,21,0.38,22,0.703,40,0.034,42,0.693,64,0.421,65,0.329,70,0.465,71,0.186,72,1.362,164,0.815,177,0.1,178,0.128,179,0.1,180,0.703,183,1.157,184,1.483,186,1.157,187,1.504,197,1.062,200,1.062,201,0.815,202,1.157,203,1.007,207,0.358,212,1.259,223,1.371,224,1.539,227,1.917,247,1.371,248,0.865,249,1.371,250,1.371,251,1.371,252,0.892,253,1.371,254,1.371,255,1.371,256,1.371,257,1.371,258,1.371,260,1.259,264,1.371,275,1.64,278,2.519,280,2.436,310,1.631,493,1.259,512,2.515,516,1.961,854,2.414,855,2.723,856,2.723,857,2.723,858,2.723,859,2.723,860,2.723,861,2.723,862,2.723,863,2.723,864,2.723,865,2.723,866,2.723]],["title/interfaces/VolumeData.html",[207,0.231,282,1.238]],["body/interfaces/VolumeData.html",[3,0.295,4,0.251,9,0.251,21,0.341,22,0.654,40,0.034,42,0.584,64,0.393,65,0.295,70,0.49,71,0.167,72,1.268,164,0.731,177,0.09,178,0.12,179,0.09,180,0.654,183,1.037,184,1.382,186,1.037,187,1.426,193,1.34,197,0.952,200,0.952,201,0.731,202,1.037,203,1.056,207,0.4,210,1.34,211,1.759,212,1.129,223,1.23,224,1.525,226,1.943,227,1.965,229,2.634,234,1.943,242,1.943,247,1.23,248,0.966,249,1.23,250,1.23,251,1.23,252,0.8,253,1.23,254,1.23,255,1.23,256,1.23,257,1.23,258,1.23,259,2.588,260,1.691,261,2.634,262,2.91,263,2.91,264,1.842,265,1.943,266,1.23,267,1.943,268,1.943,269,2.91,270,1.943,271,1.943,272,1.943,273,1.943,274,1.34,275,1.663,276,2.398,277,2.398,278,2.191,279,1.34,280,1.463,281,1.34,282,1.785,283,3.103,493,1.129]],["title/injectables/WeatherDataService.html",[180,0.454,310,1.351]],["body/injectables/WeatherDataService.html",[3,0.269,4,0.229,9,0.229,21,0.311,22,0.615,30,1.539,34,1.223,37,1.989,39,2.435,40,0.034,41,1.727,42,0.762,43,2.435,45,2.047,55,1.122,56,1.122,59,0.946,64,0.369,65,0.269,70,0.421,71,0.153,72,1.585,164,0.667,177,0.082,178,0.112,179,0.082,180,0.615,181,1.605,183,1.482,184,1.672,186,1.298,187,1.585,197,0.869,200,0.869,201,0.667,202,0.946,203,0.93,207,0.314,212,1.03,213,3.057,222,3.057,223,1.539,224,1.614,225,2.566,227,1.849,228,2.566,229,2.202,231,3.756,233,3.521,239,2.566,246,2.228,247,1.122,248,0.757,249,1.122,250,1.122,251,1.122,252,0.73,253,1.122,254,1.122,255,1.122,256,1.122,257,1.122,258,1.122,260,1.03,264,1.122,275,1.192,278,1.831,280,1.334,310,1.831,512,1.605,516,1.605,854,3.858,855,3.057,856,2.228,857,3.057,858,2.228,859,2.228,860,2.228,861,2.228,862,2.228,863,3.756,864,2.228,865,2.228,866,2.228,867,4.227,868,4.227,869,4.227,870,4.227,871,3.081,872,3.081,873,3.081,874,3.081,875,3.081,876,3.081]],["title/components/WebcamComponent.html",[0,0.807,173,1.136]],["body/components/WebcamComponent.html",[0,0.72,1,0.696,2,1.602,3,0.153,4,0.13,5,1.124,6,1.124,7,1.124,8,1.124,9,0.13,11,1.319,12,1.802,13,1.124,14,2.271,15,1.901,17,1.319,19,1.319,21,0.281,22,0.405,30,1.013,33,2.051,34,0.696,37,2.03,39,1.499,40,0.034,41,1.319,42,0.761,43,1.499,45,1.81,46,3.594,55,1.664,56,1.664,59,0.855,64,0.447,65,0.153,69,0.832,70,0.243,71,0.138,82,1.105,100,1.269,107,1.269,108,3.106,113,1.602,114,1.602,122,3.106,123,1.269,124,1.124,128,1.784,137,1.461,140,2.319,144,2.013,149,1.009,150,2.502,159,2.319,160,0.914,161,1.784,162,1.602,163,1.124,164,0.852,165,1.124,166,1.124,167,0.639,168,1.124,169,0.76,170,1.124,171,0.696,172,1.124,173,1.434,174,1.802,175,1.124,176,1.124,199,1.124,203,0.705,224,0.72,227,0.855,248,0.818,260,1.436,261,2.051,266,0.639,309,2.272,326,0.914,372,1.269,423,0.914,425,1.009,431,1.784,432,1.124,434,1.124,465,3.431,510,1.991,523,2.848,534,2.266,536,1.124,663,1.461,676,1.009,677,1.009,679,1.009,718,2.882,728,1.461,730,2.218,731,2.319,732,2.319,733,2.319,752,3.281,753,2.666,777,1.124,778,1.269,779,1.461,780,1.461,781,3.578,782,1.461,783,1.461,784,1.461,785,4.205,786,4.14,787,1.461,788,4.459,789,1.269,790,2.319,791,2.882,792,2.319,793,2.319,794,1.461,795,2.882,796,2.882,797,2.882,798,2.882,799,2.882,800,2.882,801,2.882,802,2.882,803,2.882,804,2.319,805,1.461,806,2.319,807,1.461,808,1.461,809,1.461,810,1.461,811,3.281,812,3.281,813,1.461,814,1.461,815,1.461,816,3.281,817,3.281,818,3.281,819,3.281,820,3.281,821,1.461,822,1.461,823,1.461,824,1.461,825,3.281,826,1.461,827,3.281,828,3.281,829,1.461,830,1.461,831,1.461,832,1.461,833,1.461,834,3.281,835,1.461,836,1.461,837,1.461,838,1.461,839,1.461,840,1.461,841,1.461,842,2.882,843,3.281,844,1.461,845,1.461,846,1.461,847,1.461,848,1.461,849,2.319,850,1.461,851,1.461,852,1.461,853,1.461,877,3.938,878,2.783,879,2.783,880,2.783,881,2.783,882,1.754,883,1.754,884,1.754,885,1.754,886,1.754,887,1.754,888,1.754,889,1.754,890,1.754,891,4.295,892,1.754,893,1.754,894,1.754,895,1.754,896,1.754,897,1.754,898,1.754,899,1.754,900,1.754,901,1.754,902,1.754,903,2.783,904,3.938,905,3.938,906,3.938,907,3.938,908,3.938,909,4.571,910,4.571,911,3.938,912,3.938,913,3.938,914,2.783,915,3.938,916,2.783,917,2.013,918,2.783,919,2.783,920,2.783,921,2.783,922,2.783,923,1.754,924,1.754,925,1.754,926,1.754,927,1.754,928,1.754,929,1.754,930,3.46,931,2.783,932,1.754,933,1.754,934,1.754,935,1.754,936,2.783,937,1.754,938,1.754,939,1.754,940,1.754,941,1.754,942,1.754]],["title/interfaces/WindData.html",[207,0.231,516,1.625]],["body/interfaces/WindData.html",[3,0.324,4,0.276,9,0.276,21,0.375,22,0.697,40,0.034,42,0.727,64,0.418,65,0.324,70,0.462,71,0.184,72,1.35,164,0.804,177,0.099,178,0.127,179,0.099,180,0.697,183,1.141,184,1.471,186,1.141,187,1.494,197,1.048,200,1.048,201,0.804,202,1.141,203,1.002,207,0.355,212,1.242,223,1.353,224,1.534,227,1.937,247,1.353,248,0.857,249,1.353,250,1.353,251,1.353,252,0.88,253,1.353,254,1.353,255,1.353,256,1.353,257,1.353,258,1.353,260,1.242,264,1.353,275,1.633,278,2.509,280,1.609,310,1.609,493,1.242,512,1.935,516,2.494,854,2.381,855,2.686,856,2.686,857,2.686,858,2.686,859,2.686,860,2.686,861,2.686,862,2.686,863,2.686,864,2.686,865,4.047,866,4.047]],["title/coverage.html",[943,3.552]],["body/coverage.html",[0,1.442,1,1.31,9,0.245,10,2.751,23,1.9,40,0.034,42,0.429,61,1.9,71,0.219,110,3.749,142,1.72,167,1.202,169,1.43,171,1.31,173,1.202,177,0.088,178,0.118,179,0.088,180,0.811,182,3.204,207,0.453,210,1.31,211,2.903,212,2.04,248,0.591,274,1.31,279,1.31,281,1.31,282,1.31,284,2.751,309,1.43,310,1.43,427,1.9,439,2.388,441,2.751,461,2.388,463,2.751,464,2.751,467,2.116,475,2.751,494,2.751,512,1.72,516,1.72,753,1.72,754,3.204,777,2.116,778,3.204,854,3.205,943,2.751,944,3.302,945,3.302,946,3.302,947,5.344,948,4.431,949,3.302,950,3.302,951,5.344,952,3.758,953,3.302,954,1.9,955,5.344,956,1.9,957,5.959,958,6.036,959,2.116,960,2.116,961,2.116,962,3.302,963,3.302,964,4.431,965,3.302,966,2.751,967,3.691,968,2.751,969,3.691,970,2.751,971,2.751,972,3.302,973,3.302]],["title/dependencies.html",[298,2.406,974,2.602]],["body/dependencies.html",[40,0.034,65,0.361,67,2.651,69,1.961,177,0.11,178,0.136,179,0.11,298,2.651,300,2.991,317,4.269,318,3.285,321,3.706,322,3.446,338,3.446,431,3.73,432,2.651,434,2.651,436,3.446,481,3.446,482,3.446,619,2.651,785,2.991,789,2.991,975,4.136,976,4.136,977,4.136,978,6.243,979,4.136,980,5.124,981,4.136,982,4.136,983,4.136,984,4.136,985,4.136,986,5.568,987,5.568,988,4.136,989,4.136,990,4.136,991,4.136,992,4.136,993,4.136,994,4.136,995,4.136,996,4.136,997,4.136,998,4.136,999,4.136,1000,4.136,1001,4.136]],["title/index.html",[21,0.262,1002,2.602,1003,2.602]],["body/index.html",[0,1.433,4,0.304,15,1.624,40,0.026,41,1.257,151,3.409,177,0.109,178,0.135,179,0.109,231,4.192,248,0.733,313,2.959,321,4.007,446,3.409,485,3.409,1004,4.092,1005,4.092,1006,5.091,1007,4.092,1008,5.541,1009,4.092,1010,4.092,1011,4.092,1012,5.091,1013,5.963,1014,6.164,1015,4.092,1016,4.092,1017,4.092,1018,4.092,1019,4.092,1020,4.092,1021,4.092,1022,4.092,1023,4.092,1024,5.541,1025,5.541,1026,4.092,1027,5.963,1028,4.092,1029,4.092,1030,4.092,1031,4.092,1032,4.092,1033,4.092,1034,3.409,1035,5.091,1036,5.091,1037,5.798,1038,4.092,1039,5.091,1040,5.091,1041,4.092,1042,4.092,1043,4.092,1044,5.541,1045,4.092,1046,4.092,1047,4.092]],["title/modules.html",[297,2.453]],["body/modules.html",[40,0.029,177,0.132,178,0.152,179,0.132,296,3.183,297,2.858,308,2.858,318,3.183,1048,4.966,1049,4.966,1050,5.716,1051,4.966,1052,4.966]],["title/overview.html",[1053,3.552]],["body/overview.html",[1,2.212,2,2.385,40,0.033,160,2.159,167,2.029,169,2.678,171,2.212,173,2.029,177,0.11,178,0.136,179,0.11,181,2.159,252,0.982,295,2.657,296,4.178,297,2.385,298,2.657,299,3.453,300,2.997,301,2.997,302,2.997,303,3.453,304,3.453,305,3.453,306,3.453,307,3.453,308,3.207,309,2.414,310,2.414,311,4.275,312,3.453,313,2.997,440,2.997,453,2.657,461,2.997,493,1.386,1053,3.453,1054,3.71,1055,5.131,1056,4.145,1057,2.997]],["title/interfaces/raspyActions.html",[207,0.231,954,1.795]],["body/interfaces/raspyActions.html",[0,0.67,3,0.14,4,0.119,9,0.119,11,0.76,12,1.349,14,0.76,15,0.636,17,0.76,19,0.76,21,0.162,22,0.377,33,0.835,40,0.034,41,1.261,42,0.486,52,1.66,54,0.922,57,2.561,59,1.74,64,0.383,65,0.14,68,1.66,69,0.76,70,0.284,71,0.079,82,1.908,87,1.159,110,2.152,111,1.027,113,1.49,114,2.362,142,0.835,149,1.49,164,0.888,167,0.584,177,0.043,178,0.069,179,0.043,207,0.192,210,1.629,224,1.195,248,0.934,252,1.139,266,1.967,274,1.293,275,1.055,276,1.228,277,1.773,279,1.293,281,1.293,282,1.293,287,1.159,326,0.835,362,1.159,364,1.027,423,0.835,457,2.088,459,1.872,493,0.536,500,1.159,504,1.159,505,1.159,510,0.922,519,1.159,533,1.159,534,1.874,536,1.027,537,1.159,562,1.159,564,1.159,565,1.159,566,2.705,567,2.705,569,1.159,571,1.159,572,2.705,573,2.705,574,2.705,575,2.705,576,1.159,577,3.341,578,1.027,581,3.341,587,3.341,592,1.027,606,2.356,619,1.027,624,1.159,625,1.159,676,0.922,677,0.922,678,1.159,679,0.922,680,1.159,681,1.159,682,1.159,683,1.159,684,1.872,685,1.159,686,1.159,687,1.159,688,1.159,689,1.872,690,1.159,692,2.705,703,1.159,720,1.159,730,2.397,917,1.159,952,1.027,954,1.874,956,1.49,959,1.027,960,1.66,961,1.66,1054,3.175,1057,1.159,1058,3.42,1059,2.714,1060,1.159,1061,1.159,1062,1.159,1063,3.688,1064,3.688,1065,1.872,1066,3.477,1067,3.175,1068,2.705,1069,1.872,1070,1.872,1071,1.872,1072,1.872,1073,1.335,1074,1.335,1075,1.335,1076,1.335,1077,1.335,1078,1.335,1079,1.335,1080,1.335,1081,1.335,1082,1.335,1083,1.335,1084,1.335,1085,1.335,1086,2.157,1087,2.157,1088,1.335,1089,1.335,1090,2.157,1091,2.157,1092,2.714,1093,3.42,1094,2.714,1095,2.157,1096,1.335,1097,2.714,1098,3.849,1099,2.157,1100,2.157,1101,2.714,1102,3.116,1103,1.335,1104,1.335,1105,1.335,1106,1.335,1107,1.335,1108,1.335,1109,2.714,1110,1.335,1111,2.157,1112,1.335,1113,1.335,1114,1.335,1115,1.335,1116,1.335,1117,1.335,1118,1.335,1119,3.116,1120,3.116,1121,1.335,1122,1.335,1123,1.335,1124,2.157,1125,1.335,1126,1.335,1127,3.116,1128,1.335,1129,3.116,1130,2.714,1131,1.335,1132,1.335,1133,1.335,1134,1.335,1135,1.335,1136,1.335,1137,2.157,1138,2.157,1139,1.335,1140,4.006,1141,1.335,1142,2.157,1143,1.335,1144,1.335,1145,2.157,1146,1.335,1147,1.335,1148,2.157,1149,1.335,1150,1.335,1151,1.335,1152,2.157,1153,1.335,1154,1.335,1155,1.335,1156,1.335,1157,1.335,1158,1.335,1159,1.335,1160,1.335,1161,1.335,1162,1.335,1163,1.335,1164,1.335,1165,1.335,1166,1.335,1167,1.335,1168,1.335,1169,1.335,1170,2.714,1171,1.335,1172,1.335,1173,1.335,1174,1.335,1175,2.157,1176,1.335,1177,1.335,1178,1.335,1179,1.335,1180,1.335,1181,1.335,1182,2.157,1183,1.335,1184,1.335,1185,1.335,1186,2.157,1187,1.335,1188,1.335,1189,1.335,1190,1.335,1191,1.335,1192,1.335,1193,1.335,1194,1.335,1195,1.335,1196,1.335,1197,1.335,1198,1.335,1199,2.157,1200,1.335,1201,1.335,1202,1.335,1203,1.335,1204,1.335,1205,1.335,1206,1.335,1207,1.335,1208,1.335,1209,1.335,1210,1.335,1211,1.335,1212,1.335,1213,1.335,1214,1.335,1215,1.335,1216,1.335,1217,1.335,1218,1.335,1219,1.335,1220,1.335,1221,1.335,1222,1.335,1223,1.335,1224,1.335]],["title/routes.html",[453,2.733]],["body/routes.html",[40,0.03,177,0.135,178,0.154,179,0.135,453,3.259]],["title/interfaces/sensorActions.html",[207,0.231,956,1.795]],["body/interfaces/sensorActions.html",[0,0.673,3,0.141,4,0.12,9,0.12,11,0.764,12,1.355,14,0.764,15,0.64,17,0.764,19,0.764,21,0.163,22,0.379,33,0.84,40,0.034,41,0.799,42,0.425,52,1.668,54,0.928,57,2.565,59,1.707,64,0.384,65,0.141,68,1.668,69,0.764,70,0.285,71,0.08,82,1.912,87,1.166,110,2.159,111,1.033,113,1.497,114,2.369,142,0.84,149,1.497,164,0.891,167,0.587,177,0.043,178,0.069,179,0.043,207,0.193,210,1.634,224,0.971,248,0.935,252,1.142,266,1.97,274,1.298,275,1.058,276,1.233,277,1.779,279,1.298,281,1.298,282,1.298,287,1.166,326,0.84,362,1.166,364,1.033,423,0.84,457,2.096,459,1.881,493,0.539,500,1.166,504,1.166,505,1.166,510,0.928,519,1.166,533,1.166,534,1.882,536,1.033,537,1.166,562,1.166,564,1.166,565,1.166,566,2.714,567,2.714,569,1.166,571,1.166,572,2.714,573,2.714,574,2.714,575,2.714,576,1.166,577,3.349,578,1.033,581,3.349,587,3.349,592,1.033,606,2.365,619,1.033,624,1.166,625,1.166,676,0.928,677,0.928,678,1.166,679,0.928,680,1.166,681,1.166,682,1.166,683,1.166,684,1.881,685,1.166,686,1.166,687,1.166,688,1.166,689,1.881,690,1.166,692,2.714,703,1.166,720,1.166,730,2.406,917,1.166,952,1.033,954,1.497,956,1.882,959,1.033,960,1.668,961,1.668,1054,3.183,1057,1.166,1058,2.167,1059,2.724,1060,1.166,1061,1.166,1062,1.166,1063,3.913,1064,3.913,1065,1.881,1066,3.485,1067,3.183,1068,2.714,1069,1.881,1070,1.881,1071,1.881,1072,1.881,1073,1.343,1074,1.343,1075,1.343,1076,1.343,1077,1.343,1078,1.343,1079,1.343,1080,1.343,1081,1.343,1082,1.343,1083,1.343,1084,1.343,1085,1.343,1086,2.167,1087,2.167,1088,1.343,1089,1.343,1090,2.167,1091,2.167,1092,2.724,1093,3.43,1094,2.724,1095,2.167,1096,1.343,1097,2.724,1098,3.858,1099,2.167,1100,2.167,1101,2.724,1102,3.126,1103,1.343,1104,1.343,1105,1.343,1106,1.343,1107,1.343,1108,1.343,1109,2.724,1110,1.343,1111,2.167,1112,1.343,1113,1.343,1114,1.343,1115,1.343,1116,1.343,1117,1.343,1118,1.343,1119,3.126,1120,3.126,1121,1.343,1122,1.343,1123,1.343,1124,2.167,1125,1.343,1126,1.343,1127,3.126,1128,1.343,1129,3.126,1130,2.724,1131,1.343,1132,1.343,1133,1.343,1134,1.343,1135,1.343,1136,1.343,1137,2.167,1138,2.167,1139,1.343,1140,4.015,1141,1.343,1142,2.167,1143,1.343,1144,1.343,1145,2.167,1146,1.343,1147,1.343,1148,2.167,1149,1.343,1150,1.343,1151,1.343,1152,2.167,1153,1.343,1154,1.343,1155,1.343,1156,1.343,1157,1.343,1158,1.343,1159,1.343,1160,1.343,1161,1.343,1162,1.343,1163,1.343,1164,1.343,1165,1.343,1166,1.343,1167,1.343,1168,1.343,1169,1.343,1170,2.724,1171,1.343,1172,1.343,1173,1.343,1174,1.343,1175,2.167,1176,1.343,1177,1.343,1178,1.343,1179,1.343,1180,1.343,1181,1.343,1182,2.167,1183,1.343,1184,1.343,1185,1.343,1186,2.167,1187,1.343,1188,1.343,1189,1.343,1190,1.343,1191,1.343,1192,1.343,1193,1.343,1194,1.343,1195,1.343,1196,1.343,1197,1.343,1198,1.343,1199,2.167,1200,1.343,1201,1.343,1202,1.343,1203,1.343,1204,1.343,1205,1.343,1206,1.343,1207,1.343,1208,1.343,1209,1.343,1210,1.343,1211,1.343,1212,1.343,1213,1.343,1214,1.343,1215,1.343,1216,1.343,1217,1.343,1218,1.343,1219,1.343,1220,1.343,1221,1.343,1222,1.343,1223,1.343,1224,1.343]],["title/miscellaneous/variables.html",[1225,2.167,1226,3.127]],["body/miscellaneous/variables.html",[21,0.374,40,0.034,42,0.77,55,2.196,56,2.196,57,2.267,82,1.471,142,2.491,177,0.099,178,0.127,179,0.099,563,3.984,578,2.377,592,2.377,952,2.377,954,2.133,956,2.133,959,3.065,960,3.065,961,3.065,966,3.089,967,4.658,968,3.089,969,3.089,970,3.984,971,3.984,1034,3.984,1060,2.681,1061,2.681,1062,2.681,1063,4.418,1064,4.418,1065,3.458,1066,4.418,1067,3.458,1068,3.458,1069,3.458,1070,3.458,1071,2.681,1072,2.681,1225,3.089,1226,3.089,1227,5.592,1228,4.782,1229,3.707,1230,3.707,1231,3.707,1232,3.707]]],"invertedIndex":[["",{"_index":40,"title":{},"body":{"components/AdminComponent.html":{},"injectables/AdminService.html":{},"injectables/AdminpanelDataService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuardService.html":{},"injectables/AuthService.html":{},"interfaces/AuthToken.html":{},"interfaces/BatteryData.html":{},"components/GraphsComponent.html":{},"interfaces/ImageData.html":{},"injectables/ImageService.html":{},"classes/NgbdDropdownBasic.html":{},"interfaces/RaspberryData.html":{},"interfaces/SolarData.html":{},"interfaces/TemperatureData.html":{},"interfaces/VolumeData.html":{},"injectables/WeatherDataService.html":{},"components/WebcamComponent.html":{},"interfaces/WindData.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"interfaces/raspyActions.html":{},"routes.html":{},"interfaces/sensorActions.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":110,"title":{},"body":{"components/AdminComponent.html":{},"components/GraphsComponent.html":{},"coverage.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["0.10.2",{"_index":1001,"title":{},"body":{"dependencies.html":{}}}],["0.2",{"_index":586,"title":{},"body":{"components/GraphsComponent.html":{}}}],["0.25em",{"_index":752,"title":{},"body":{"components/GraphsComponent.html":{},"components/WebcamComponent.html":{}}}],["0.5em",{"_index":719,"title":{},"body":{"components/GraphsComponent.html":{}}}],["0.5rem",{"_index":725,"title":{},"body":{"components/GraphsComponent.html":{}}}],["0.8em",{"_index":744,"title":{},"body":{"components/GraphsComponent.html":{}}}],["0.9],//todo",{"_index":1105,"title":{},"body":{"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["0.9];//todo",{"_index":1205,"title":{},"body":{"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["0/1",{"_index":958,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":964,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":949,"title":{},"body":{"coverage.html":{}}}],["0/13",{"_index":950,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":962,"title":{},"body":{"coverage.html":{}}}],["0/27",{"_index":965,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":947,"title":{},"body":{"coverage.html":{}}}],["0/36",{"_index":963,"title":{},"body":{"coverage.html":{}}}],["0/38",{"_index":953,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":955,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":951,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":948,"title":{},"body":{"coverage.html":{}}}],["013adf",{"_index":1097,"title":{},"body":{"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["0em",{"_index":722,"title":{},"body":{"components/GraphsComponent.html":{}}}],["1",{"_index":252,"title":{},"body":{"injectables/AdminpanelDataService.html":{},"components/AppComponent.html":{},"interfaces/BatteryData.html":{},"components/GraphsComponent.html":{},"interfaces/ImageData.html":{},"injectables/ImageService.html":{},"interfaces/RaspberryData.html":{},"interfaces/SolarData.html":{},"interfaces/TemperatureData.html":{},"interfaces/VolumeData.html":{},"injectables/WeatherDataService.html":{},"interfaces/WindData.html":{},"overview.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["1.13.0",{"_index":999,"title":{},"body":{"dependencies.html":{}}}],["1.8",{"_index":1102,"title":{},"body":{"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["1.8],//todo",{"_index":1107,"title":{},"body":{"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["1.8];//todo",{"_index":1207,"title":{},"body":{"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["10",{"_index":1056,"title":{},"body":{"overview.html":{}}}],["100",{"_index":104,"title":{},"body":{"components/AdminComponent.html":{},"components/GraphsComponent.html":{}}}],["10px",{"_index":137,"title":{},"body":{"components/AdminComponent.html":{},"components/WebcamComponent.html":{}}}],["12px",{"_index":106,"title":{},"body":{"components/AdminComponent.html":{}}}],["132",{"_index":585,"title":{},"body":{"components/GraphsComponent.html":{}}}],["14",{"_index":611,"title":{},"body":{"components/GraphsComponent.html":{}}}],["15",{"_index":923,"title":{},"body":{"components/WebcamComponent.html":{}}}],["15px",{"_index":930,"title":{},"body":{"components/WebcamComponent.html":{}}}],["16px",{"_index":145,"title":{},"body":{"components/AdminComponent.html":{}}}],["18px",{"_index":138,"title":{},"body":{"components/AdminComponent.html":{},"components/GraphsComponent.html":{}}}],["1em",{"_index":741,"title":{},"body":{"components/GraphsComponent.html":{}}}],["1px",{"_index":117,"title":{},"body":{"components/AdminComponent.html":{},"components/GraphsComponent.html":{}}}],["2",{"_index":1054,"title":{},"body":{"overview.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["2.0.8",{"_index":993,"title":{},"body":{"dependencies.html":{}}}],["2.9.3",{"_index":989,"title":{},"body":{"dependencies.html":{}}}],["20",{"_index":1113,"title":{},"body":{"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["20px",{"_index":107,"title":{},"body":{"components/AdminComponent.html":{},"components/GraphsComponent.html":{},"components/WebcamComponent.html":{}}}],["21",{"_index":612,"title":{},"body":{"components/GraphsComponent.html":{}}}],["25.05.2020",{"_index":1060,"title":{},"body":{"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{},"miscellaneous/variables.html":{}}}],["255",{"_index":596,"title":{},"body":{"components/GraphsComponent.html":{}}}],["26.05.2020",{"_index":1061,"title":{},"body":{"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{},"miscellaneous/variables.html":{}}}],["27.05.2020",{"_index":1062,"title":{},"body":{"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{},"miscellaneous/variables.html":{}}}],["3",{"_index":609,"title":{},"body":{"components/GraphsComponent.html":{}}}],["3.6.5",{"_index":992,"title":{},"body":{"dependencies.html":{}}}],["30",{"_index":125,"title":{},"body":{"components/AdminComponent.html":{}}}],["300px",{"_index":158,"title":{},"body":{"components/AdminComponent.html":{}}}],["35px",{"_index":933,"title":{},"body":{"components/WebcamComponent.html":{}}}],["3em",{"_index":136,"title":{},"body":{"components/AdminComponent.html":{}}}],["4",{"_index":1057,"title":{},"body":{"overview.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["4.18.0",{"_index":995,"title":{},"body":{"dependencies.html":{}}}],["4em",{"_index":742,"title":{},"body":{"components/GraphsComponent.html":{}}}],["5",{"_index":1055,"title":{},"body":{"overview.html":{}}}],["5.0.0",{"_index":986,"title":{},"body":{"dependencies.html":{}}}],["5.0.1",{"_index":985,"title":{},"body":{"dependencies.html":{}}}],["5.10.0",{"_index":996,"title":{},"body":{"dependencies.html":{}}}],["6.5.5",{"_index":997,"title":{},"body":{"dependencies.html":{}}}],["7",{"_index":610,"title":{},"body":{"components/GraphsComponent.html":{}}}],["70",{"_index":927,"title":{},"body":{"components/WebcamComponent.html":{}}}],["8.3.19",{"_index":1010,"title":{},"body":{"index.html":{}}}],["8px",{"_index":109,"title":{},"body":{"components/AdminComponent.html":{},"components/GraphsComponent.html":{}}}],["9.1.7",{"_index":978,"title":{},"body":{"dependencies.html":{}}}],["9.1.8",{"_index":976,"title":{},"body":{"dependencies.html":{}}}],["9.2.4",{"_index":980,"title":{},"body":{"dependencies.html":{}}}],["9.3.0",{"_index":988,"title":{},"body":{"dependencies.html":{}}}],["99",{"_index":584,"title":{},"body":{"components/GraphsComponent.html":{}}}],["absolute",{"_index":731,"title":{},"body":{"components/GraphsComponent.html":{},"components/WebcamComponent.html":{}}}],["access",{"_index":209,"title":{},"body":{"injectables/AdminService.html":{},"interfaces/AuthToken.html":{}}}],["account",{"_index":85,"title":{},"body":{"components/AdminComponent.html":{}}}],["action",{"_index":1058,"title":{},"body":{"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["actual_component",{"_index":176,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/GraphsComponent.html":{},"components/WebcamComponent.html":{}}}],["add",{"_index":142,"title":{},"body":{"components/AdminComponent.html":{},"modules/AppRoutingModule.html":{},"coverage.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{},"miscellaneous/variables.html":{}}}],["adddateevent",{"_index":879,"title":{},"body":{"components/WebcamComponent.html":{}}}],["adddateevent(event",{"_index":849,"title":{},"body":{"classes/NgbdDropdownBasic.html":{},"components/WebcamComponent.html":{}}}],["addendevent",{"_index":517,"title":{},"body":{"components/GraphsComponent.html":{}}}],["addendevent(event",{"_index":533,"title":{},"body":{"components/GraphsComponent.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["addstartevent",{"_index":518,"title":{},"body":{"components/GraphsComponent.html":{}}}],["addstartevent(event",{"_index":537,"title":{},"body":{"components/GraphsComponent.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["admin",{"_index":16,"title":{},"body":{"components/AdminComponent.html":{},"modules/AppRoutingModule.html":{}}}],["admin'},{'name",{"_index":166,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/GraphsComponent.html":{},"components/WebcamComponent.html":{}}}],["admin.component.html",{"_index":20,"title":{},"body":{"components/AdminComponent.html":{}}}],["admin.component.scss",{"_index":18,"title":{},"body":{"components/AdminComponent.html":{}}}],["admin.service",{"_index":66,"title":{},"body":{"components/AdminComponent.html":{}}}],["admin/admin.component",{"_index":334,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["admincomponent",{"_index":1,"title":{"components/AdminComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/GraphsComponent.html":{},"components/WebcamComponent.html":{},"coverage.html":{},"overview.html":{}}}],["adminpanel",{"_index":459,"title":{},"body":{"modules/AppRoutingModule.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["adminpanel'},{'name",{"_index":168,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/GraphsComponent.html":{},"components/WebcamComponent.html":{}}}],["adminpanel.component.html",{"_index":1073,"title":{},"body":{"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["adminpanel.component.scss",{"_index":1074,"title":{},"body":{"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["adminpanel/adminpanel.component",{"_index":426,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["adminpanelcomponent",{"_index":167,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/GraphsComponent.html":{},"components/WebcamComponent.html":{},"coverage.html":{},"overview.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["adminpaneldataservice",{"_index":210,"title":{"injectables/AdminpanelDataService.html":{}},"body":{"injectables/AdminpanelDataService.html":{},"interfaces/BatteryData.html":{},"interfaces/RaspberryData.html":{},"interfaces/SolarData.html":{},"interfaces/VolumeData.html":{},"coverage.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["adminpaneldatasubscription",{"_index":1084,"title":{},"body":{"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["adminservice",{"_index":23,"title":{"injectables/AdminService.html":{}},"body":{"components/AdminComponent.html":{},"injectables/AdminService.html":{},"interfaces/AuthToken.html":{},"coverage.html":{}}}],["adminsubscription",{"_index":24,"title":{},"body":{"components/AdminComponent.html":{}}}],["akku",{"_index":1087,"title":{},"body":{"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["aktuelle",{"_index":698,"title":{},"body":{"components/GraphsComponent.html":{}}}],["align",{"_index":112,"title":{},"body":{"components/AdminComponent.html":{},"components/GraphsComponent.html":{}}}],["alle",{"_index":907,"title":{},"body":{"components/WebcamComponent.html":{}}}],["angle",{"_index":557,"title":{},"body":{"components/GraphsComponent.html":{}}}],["angular",{"_index":321,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"index.html":{}}}],["angular/animations",{"_index":977,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":979,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk/clipboard",{"_index":340,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/cdk/drag",{"_index":342,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/cdk/portal",{"_index":345,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/cdk/scrolling",{"_index":347,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/cdk/stepper",{"_index":349,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/cdk/table",{"_index":351,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/cdk/tree",{"_index":353,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/common",{"_index":981,"title":{},"body":{"dependencies.html":{}}}],["angular/common/http",{"_index":197,"title":{},"body":{"injectables/AdminService.html":{},"injectables/AdminpanelDataService.html":{},"modules/AppModule.html":{},"interfaces/AuthToken.html":{},"interfaces/BatteryData.html":{},"interfaces/ImageData.html":{},"injectables/ImageService.html":{},"interfaces/RaspberryData.html":{},"interfaces/SolarData.html":{},"interfaces/TemperatureData.html":{},"interfaces/VolumeData.html":{},"injectables/WeatherDataService.html":{},"interfaces/WindData.html":{}}}],["angular/compiler",{"_index":982,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":65,"title":{},"body":{"components/AdminComponent.html":{},"injectables/AdminService.html":{},"injectables/AdminpanelDataService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuardService.html":{},"injectables/AuthService.html":{},"interfaces/AuthToken.html":{},"interfaces/BatteryData.html":{},"components/GraphsComponent.html":{},"interfaces/ImageData.html":{},"injectables/ImageService.html":{},"classes/NgbdDropdownBasic.html":{},"interfaces/RaspberryData.html":{},"interfaces/SolarData.html":{},"interfaces/TemperatureData.html":{},"interfaces/VolumeData.html":{},"injectables/WeatherDataService.html":{},"components/WebcamComponent.html":{},"interfaces/WindData.html":{},"dependencies.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["angular/forms",{"_index":338,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/material",{"_index":983,"title":{},"body":{"dependencies.html":{}}}],["angular/material/autocomplete",{"_index":355,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/badge",{"_index":357,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/bottom",{"_index":359,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/button",{"_index":362,"title":{},"body":{"modules/AppModule.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["angular/material/card",{"_index":324,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/checkbox",{"_index":366,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/chips",{"_index":368,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/core",{"_index":390,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/datepicker",{"_index":326,"title":{},"body":{"modules/AppModule.html":{},"components/GraphsComponent.html":{},"classes/NgbdDropdownBasic.html":{},"components/WebcamComponent.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["angular/material/dialog",{"_index":372,"title":{},"body":{"modules/AppModule.html":{},"classes/NgbdDropdownBasic.html":{},"components/WebcamComponent.html":{}}}],["angular/material/divider",{"_index":374,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/expansion",{"_index":376,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/form",{"_index":328,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/grid",{"_index":378,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/icon",{"_index":381,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/input",{"_index":383,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/list",{"_index":385,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/menu",{"_index":387,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/paginator",{"_index":392,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/progress",{"_index":394,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/radio",{"_index":399,"title":{},"body":{"modules/AppModule.html":{},"components/GraphsComponent.html":{}}}],["angular/material/select",{"_index":401,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/sidenav",{"_index":403,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/slide",{"_index":407,"title":{},"body":{"modules/AppModule.html":{},"components/GraphsComponent.html":{}}}],["angular/material/slider",{"_index":405,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/snack",{"_index":409,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/sort",{"_index":411,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/stepper",{"_index":370,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/table",{"_index":413,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/tabs",{"_index":415,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/toolbar",{"_index":417,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/tooltip",{"_index":419,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/tree",{"_index":421,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/platform",{"_index":317,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":67,"title":{},"body":{"components/AdminComponent.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuardService.html":{},"dependencies.html":{}}}],["animation",{"_index":1114,"title":{},"body":{"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["animationduration",{"_index":1117,"title":{},"body":{"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["anmelden",{"_index":96,"title":{},"body":{"components/AdminComponent.html":{}}}],["anwenden",{"_index":712,"title":{},"body":{"components/GraphsComponent.html":{}}}],["anzahl",{"_index":713,"title":{},"body":{"components/GraphsComponent.html":{}}}],["anzeigen",{"_index":920,"title":{},"body":{"components/WebcamComponent.html":{}}}],["apiurl",{"_index":183,"title":{},"body":{"injectables/AdminService.html":{},"injectables/AdminpanelDataService.html":{},"interfaces/AuthToken.html":{},"interfaces/BatteryData.html":{},"interfaces/ImageData.html":{},"injectables/ImageService.html":{},"interfaces/RaspberryData.html":{},"interfaces/SolarData.html":{},"interfaces/TemperatureData.html":{},"interfaces/VolumeData.html":{},"injectables/WeatherDataService.html":{},"interfaces/WindData.html":{}}}],["app",{"_index":15,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/GraphsComponent.html":{},"classes/NgbdDropdownBasic.html":{},"components/WebcamComponent.html":{},"index.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["app.component",{"_index":331,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.html",{"_index":286,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss",{"_index":285,"title":{},"body":{"components/AppComponent.html":{}}}],["appcomponent",{"_index":169,"title":{"components/AppComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/GraphsComponent.html":{},"components/WebcamComponent.html":{},"coverage.html":{},"overview.html":{}}}],["applytimeframe",{"_index":519,"title":{},"body":{"components/GraphsComponent.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["appmodule",{"_index":296,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["apppage",{"_index":439,"title":{"classes/AppPage.html":{}},"body":{"classes/AppPage.html":{},"coverage.html":{}}}],["approutingmodule",{"_index":308,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["arrowscontainer",{"_index":747,"title":{},"body":{"components/GraphsComponent.html":{}}}],["artifacts",{"_index":1028,"title":{},"body":{"index.html":{}}}],["aufgenommenen",{"_index":908,"title":{},"body":{"components/WebcamComponent.html":{}}}],["ausgewählt",{"_index":1080,"title":{},"body":{"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["auth",{"_index":428,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuardService.html":{}}}],["auth.service",{"_index":470,"title":{},"body":{"guards/AuthGuardService.html":{}}}],["auth0/angular",{"_index":481,"title":{},"body":{"injectables/AuthService.html":{},"dependencies.html":{}}}],["authguard",{"_index":456,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["authguardservice",{"_index":427,"title":{"guards/AuthGuardService.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuardService.html":{},"coverage.html":{}}}],["authservice",{"_index":467,"title":{"injectables/AuthService.html":{}},"body":{"guards/AuthGuardService.html":{},"injectables/AuthService.html":{},"coverage.html":{}}}],["authtoken",{"_index":61,"title":{"interfaces/AuthToken.html":{}},"body":{"components/AdminComponent.html":{},"injectables/AdminService.html":{},"interfaces/AuthToken.html":{},"coverage.html":{}}}],["auto",{"_index":124,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/GraphsComponent.html":{},"components/WebcamComponent.html":{}}}],["automatically",{"_index":1019,"title":{},"body":{"index.html":{}}}],["available",{"_index":1052,"title":{},"body":{"modules.html":{}}}],["b",{"_index":1065,"title":{},"body":{"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{},"miscellaneous/variables.html":{}}}],["background",{"_index":139,"title":{},"body":{"components/AdminComponent.html":{}}}],["backgroundcolor",{"_index":582,"title":{},"body":{"components/GraphsComponent.html":{}}}],["bar",{"_index":395,"title":{},"body":{"modules/AppModule.html":{}}}],["battery",{"_index":1131,"title":{},"body":{"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["battery/aggregate/?start='+this.formatdate(today",{"_index":265,"title":{},"body":{"injectables/AdminpanelDataService.html":{},"interfaces/BatteryData.html":{},"interfaces/RaspberryData.html":{},"interfaces/SolarData.html":{},"interfaces/VolumeData.html":{}}}],["batterychart",{"_index":1165,"title":{},"body":{"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["batterydata",{"_index":279,"title":{"interfaces/BatteryData.html":{}},"body":{"injectables/AdminpanelDataService.html":{},"interfaces/BatteryData.html":{},"interfaces/RaspberryData.html":{},"interfaces/SolarData.html":{},"interfaces/VolumeData.html":{},"coverage.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["beginatzero",{"_index":567,"title":{},"body":{"components/GraphsComponent.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["behaviorsubject",{"_index":68,"title":{},"body":{"components/AdminComponent.html":{},"components/GraphsComponent.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["behaviorsubject(false",{"_index":625,"title":{},"body":{"components/GraphsComponent.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["benutzername",{"_index":94,"title":{},"body":{"components/AdminComponent.html":{}}}],["beta.0",{"_index":987,"title":{},"body":{"dependencies.html":{}}}],["bilder",{"_index":909,"title":{},"body":{"components/WebcamComponent.html":{}}}],["block",{"_index":115,"title":{},"body":{"components/AdminComponent.html":{},"components/GraphsComponent.html":{}}}],["body",{"_index":938,"title":{},"body":{"components/WebcamComponent.html":{}}}],["boolean",{"_index":54,"title":{},"body":{"components/AdminComponent.html":{},"guards/AuthGuardService.html":{},"injectables/AuthService.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["bootstrap",{"_index":300,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"overview.html":{}}}],["border",{"_index":116,"title":{},"body":{"components/AdminComponent.html":{},"components/GraphsComponent.html":{}}}],["bordercolor",{"_index":587,"title":{},"body":{"components/GraphsComponent.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["borderwidth",{"_index":588,"title":{},"body":{"components/GraphsComponent.html":{}}}],["both",{"_index":926,"title":{},"body":{"components/WebcamComponent.html":{}}}],["bottom",{"_index":718,"title":{},"body":{"components/GraphsComponent.html":{},"components/WebcamComponent.html":{}}}],["box",{"_index":120,"title":{},"body":{"components/AdminComponent.html":{},"components/GraphsComponent.html":{}}}],["breakpoint",{"_index":499,"title":{},"body":{"components/GraphsComponent.html":{}}}],["browse",{"_index":1050,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":318,"title":{},"body":{"modules/AppModule.html":{},"classes/AppPage.html":{},"dependencies.html":{},"modules.html":{}}}],["browser.get(browser.baseurl",{"_index":447,"title":{},"body":{"classes/AppPage.html":{}}}],["browser/animations",{"_index":336,"title":{},"body":{"modules/AppModule.html":{}}}],["browseranimationsmodule",{"_index":335,"title":{},"body":{"modules/AppModule.html":{}}}],["browsermodule",{"_index":316,"title":{},"body":{"modules/AppModule.html":{}}}],["build",{"_index":1027,"title":{},"body":{"index.html":{}}}],["buildchart(data",{"_index":1180,"title":{},"body":{"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["buildtempchart",{"_index":520,"title":{},"body":{"components/GraphsComponent.html":{}}}],["buildwindchart",{"_index":521,"title":{},"body":{"components/GraphsComponent.html":{}}}],["button",{"_index":133,"title":{},"body":{"components/AdminComponent.html":{},"components/GraphsComponent.html":{}}}],["byte",{"_index":1095,"title":{},"body":{"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["c",{"_index":579,"title":{},"body":{"components/GraphsComponent.html":{}}}],["canactivate",{"_index":455,"title":{},"body":{"modules/AppRoutingModule.html":{},"guards/AuthGuardService.html":{}}}],["cancel",{"_index":132,"title":{},"body":{"components/AdminComponent.html":{}}}],["cancelbtn",{"_index":135,"title":{},"body":{"components/AdminComponent.html":{}}}],["canvas",{"_index":720,"title":{},"body":{"components/GraphsComponent.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["card",{"_index":123,"title":{},"body":{"components/AdminComponent.html":{},"components/GraphsComponent.html":{},"components/WebcamComponent.html":{}}}],["catcherror",{"_index":198,"title":{},"body":{"injectables/AdminService.html":{},"interfaces/AuthToken.html":{}}}],["ccc",{"_index":119,"title":{},"body":{"components/AdminComponent.html":{}}}],["cdksteppermodule",{"_index":348,"title":{},"body":{"modules/AppModule.html":{}}}],["cdktablemodule",{"_index":350,"title":{},"body":{"modules/AppModule.html":{}}}],["cdktreemodule",{"_index":352,"title":{},"body":{"modules/AppModule.html":{}}}],["ce1a9e",{"_index":1108,"title":{},"body":{"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["center",{"_index":129,"title":{},"body":{"components/AdminComponent.html":{},"components/GraphsComponent.html":{}}}],["change",{"_index":151,"title":{},"body":{"components/AdminComponent.html":{},"index.html":{}}}],["changedetection",{"_index":792,"title":{},"body":{"classes/NgbdDropdownBasic.html":{},"components/WebcamComponent.html":{}}}],["changedetectionstrategy.onpush",{"_index":793,"title":{},"body":{"classes/NgbdDropdownBasic.html":{},"components/WebcamComponent.html":{}}}],["chart",{"_index":606,"title":{},"body":{"components/GraphsComponent.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["chart(canvas",{"_index":1189,"title":{},"body":{"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["chart.js",{"_index":619,"title":{},"body":{"components/GraphsComponent.html":{},"dependencies.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["chartdatasets",{"_index":1096,"title":{},"body":{"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["chartlabels",{"_index":1089,"title":{},"body":{"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["chartnames",{"_index":1085,"title":{},"body":{"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["chartoptions",{"_index":500,"title":{},"body":{"components/GraphsComponent.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["charttempdata",{"_index":501,"title":{},"body":{"components/GraphsComponent.html":{}}}],["chartwindata",{"_index":502,"title":{},"body":{"components/GraphsComponent.html":{}}}],["check",{"_index":485,"title":{},"body":{"injectables/AuthService.html":{},"index.html":{}}}],["chosenbtn",{"_index":503,"title":{},"body":{"components/GraphsComponent.html":{}}}],["class",{"_index":71,"title":{"classes/AppPage.html":{},"classes/NgbdDropdownBasic.html":{}},"body":{"components/AdminComponent.html":{},"injectables/AdminService.html":{},"injectables/AdminpanelDataService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuardService.html":{},"injectables/AuthService.html":{},"interfaces/AuthToken.html":{},"interfaces/BatteryData.html":{},"components/GraphsComponent.html":{},"interfaces/ImageData.html":{},"injectables/ImageService.html":{},"classes/NgbdDropdownBasic.html":{},"interfaces/RaspberryData.html":{},"interfaces/SolarData.html":{},"interfaces/TemperatureData.html":{},"interfaces/VolumeData.html":{},"injectables/WeatherDataService.html":{},"components/WebcamComponent.html":{},"interfaces/WindData.html":{},"coverage.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["classes",{"_index":440,"title":{},"body":{"classes/AppPage.html":{},"classes/NgbdDropdownBasic.html":{},"overview.html":{}}}],["clear",{"_index":925,"title":{},"body":{"components/WebcamComponent.html":{}}}],["cli",{"_index":1008,"title":{},"body":{"index.html":{}}}],["clipboardmodule",{"_index":339,"title":{},"body":{"modules/AppModule.html":{}}}],["closebtn",{"_index":932,"title":{},"body":{"components/WebcamComponent.html":{}}}],["cluster_appmodule",{"_index":303,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":306,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":304,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":305,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":307,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["code",{"_index":1022,"title":{},"body":{"index.html":{}}}],["color",{"_index":140,"title":{},"body":{"components/AdminComponent.html":{},"components/WebcamComponent.html":{}}}],["column",{"_index":724,"title":{},"body":{"components/GraphsComponent.html":{}}}],["component",{"_index":0,"title":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/GraphsComponent.html":{},"components/WebcamComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/GraphsComponent.html":{},"classes/NgbdDropdownBasic.html":{},"components/WebcamComponent.html":{},"coverage.html":{},"index.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["component,changedetectionstrategy",{"_index":779,"title":{},"body":{"classes/NgbdDropdownBasic.html":{},"components/WebcamComponent.html":{}}}],["component_template",{"_index":165,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/GraphsComponent.html":{},"components/WebcamComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/GraphsComponent.html":{},"components/WebcamComponent.html":{},"overview.html":{}}}],["console.log(\"fehler",{"_index":84,"title":{},"body":{"components/AdminComponent.html":{}}}],["console.log(\"token:\"+this.token",{"_index":93,"title":{},"body":{"components/AdminComponent.html":{}}}],["console.log(data",{"_index":638,"title":{},"body":{"components/GraphsComponent.html":{}}}],["console.log(datavol",{"_index":1151,"title":{},"body":{"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["console.log(enddate",{"_index":1217,"title":{},"body":{"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["console.log(event",{"_index":673,"title":{},"body":{"components/GraphsComponent.html":{}}}],["console.log(startdate",{"_index":686,"title":{},"body":{"components/GraphsComponent.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["console.log(this.chartdatasets",{"_index":1124,"title":{},"body":{"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["console.log(this.chartdatasets[0][0].data",{"_index":1195,"title":{},"body":{"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["console.log(this.charttempdata",{"_index":651,"title":{},"body":{"components/GraphsComponent.html":{}}}],["console.log(this.enddateevents",{"_index":681,"title":{},"body":{"components/GraphsComponent.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["console.log(this.gallery",{"_index":824,"title":{},"body":{"classes/NgbdDropdownBasic.html":{},"components/WebcamComponent.html":{}}}],["console.log(this.jwthelper.gettokenexpirationdate(\"eyj0exaioijkv1qilcjhbgcioijiuzi1nij9.eyj0b2tlbl90exblijoiywnjzxnziiwizxhwijoxntk1njawmjc2lcjqdgkioijkndi4mzuwowm4yjm0mzc3owe1zjkxmda4ymjlyza3msisinvzzxjfawqiojf9.yjnowg",{"_index":488,"title":{},"body":{"injectables/AuthService.html":{}}}],["console.log(this.jwthelper.gettokenexpirationdate(token",{"_index":491,"title":{},"body":{"injectables/AuthService.html":{}}}],["console.log(this.recentpics",{"_index":822,"title":{},"body":{"classes/NgbdDropdownBasic.html":{},"components/WebcamComponent.html":{}}}],["console.log(this.recentwindspeed",{"_index":633,"title":{},"body":{"components/GraphsComponent.html":{}}}],["console.log(this.startdateevents",{"_index":679,"title":{},"body":{"components/GraphsComponent.html":{},"classes/NgbdDropdownBasic.html":{},"components/WebcamComponent.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["console.log(token",{"_index":484,"title":{},"body":{"injectables/AuthService.html":{}}}],["const",{"_index":457,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/AuthService.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["constructor",{"_index":34,"title":{},"body":{"components/AdminComponent.html":{},"injectables/AdminService.html":{},"injectables/AdminpanelDataService.html":{},"guards/AuthGuardService.html":{},"injectables/AuthService.html":{},"components/GraphsComponent.html":{},"injectables/ImageService.html":{},"injectables/WeatherDataService.html":{},"components/WebcamComponent.html":{}}}],["constructor(adminpaneldataservice",{"_index":1121,"title":{},"body":{"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["constructor(adminservice",{"_index":35,"title":{},"body":{"components/AdminComponent.html":{}}}],["constructor(auth",{"_index":466,"title":{},"body":{"guards/AuthGuardService.html":{}}}],["constructor(http",{"_index":186,"title":{},"body":{"injectables/AdminService.html":{},"injectables/AdminpanelDataService.html":{},"interfaces/AuthToken.html":{},"interfaces/BatteryData.html":{},"interfaces/ImageData.html":{},"injectables/ImageService.html":{},"interfaces/RaspberryData.html":{},"interfaces/SolarData.html":{},"interfaces/TemperatureData.html":{},"interfaces/VolumeData.html":{},"injectables/WeatherDataService.html":{},"interfaces/WindData.html":{}}}],["constructor(imageservice",{"_index":804,"title":{},"body":{"classes/NgbdDropdownBasic.html":{},"components/WebcamComponent.html":{}}}],["constructor(public",{"_index":472,"title":{},"body":{"guards/AuthGuardService.html":{}}}],["constructor(weatherdataservice",{"_index":531,"title":{},"body":{"components/GraphsComponent.html":{}}}],["container",{"_index":144,"title":{},"body":{"components/AdminComponent.html":{},"components/GraphsComponent.html":{},"components/WebcamComponent.html":{}}}],["containers",{"_index":143,"title":{},"body":{"components/AdminComponent.html":{}}}],["content",{"_index":128,"title":{},"body":{"components/AdminComponent.html":{},"classes/AppPage.html":{},"components/GraphsComponent.html":{},"components/WebcamComponent.html":{}}}],["context",{"_index":970,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["core",{"_index":990,"title":{},"body":{"dependencies.html":{}}}],["cover",{"_index":817,"title":{},"body":{"classes/NgbdDropdownBasic.html":{},"components/WebcamComponent.html":{}}}],["coverage",{"_index":943,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["current",{"_index":276,"title":{},"body":{"injectables/AdminpanelDataService.html":{},"interfaces/BatteryData.html":{},"interfaces/RaspberryData.html":{},"interfaces/SolarData.html":{},"interfaces/VolumeData.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["cursor",{"_index":934,"title":{},"body":{"components/WebcamComponent.html":{}}}],["d",{"_index":247,"title":{},"body":{"injectables/AdminpanelDataService.html":{},"interfaces/BatteryData.html":{},"interfaces/ImageData.html":{},"injectables/ImageService.html":{},"interfaces/RaspberryData.html":{},"interfaces/SolarData.html":{},"interfaces/TemperatureData.html":{},"interfaces/VolumeData.html":{},"injectables/WeatherDataService.html":{},"interfaces/WindData.html":{}}}],["d.getdate",{"_index":254,"title":{},"body":{"injectables/AdminpanelDataService.html":{},"interfaces/BatteryData.html":{},"interfaces/ImageData.html":{},"injectables/ImageService.html":{},"interfaces/RaspberryData.html":{},"interfaces/SolarData.html":{},"interfaces/TemperatureData.html":{},"interfaces/VolumeData.html":{},"injectables/WeatherDataService.html":{},"interfaces/WindData.html":{}}}],["d.getfullyear",{"_index":256,"title":{},"body":{"injectables/AdminpanelDataService.html":{},"interfaces/BatteryData.html":{},"interfaces/ImageData.html":{},"injectables/ImageService.html":{},"interfaces/RaspberryData.html":{},"interfaces/SolarData.html":{},"interfaces/TemperatureData.html":{},"interfaces/VolumeData.html":{},"injectables/WeatherDataService.html":{},"interfaces/WindData.html":{}}}],["d.getmonth",{"_index":251,"title":{},"body":{"injectables/AdminpanelDataService.html":{},"interfaces/BatteryData.html":{},"interfaces/ImageData.html":{},"injectables/ImageService.html":{},"interfaces/RaspberryData.html":{},"interfaces/SolarData.html":{},"interfaces/TemperatureData.html":{},"interfaces/VolumeData.html":{},"injectables/WeatherDataService.html":{},"interfaces/WindData.html":{}}}],["dat",{"_index":1182,"title":{},"body":{"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["data",{"_index":266,"title":{},"body":{"injectables/AdminpanelDataService.html":{},"interfaces/BatteryData.html":{},"components/GraphsComponent.html":{},"classes/NgbdDropdownBasic.html":{},"interfaces/RaspberryData.html":{},"interfaces/SolarData.html":{},"interfaces/VolumeData.html":{},"components/WebcamComponent.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["data.current);//todo",{"_index":1202,"title":{},"body":{"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["data.degrees",{"_index":580,"title":{},"body":{"components/GraphsComponent.html":{}}}],["data.degrees)[data.length",{"_index":637,"title":{},"body":{"components/GraphsComponent.html":{}}}],["data.direction",{"_index":662,"title":{},"body":{"components/GraphsComponent.html":{}}}],["data.direction)[data.length",{"_index":632,"title":{},"body":{"components/GraphsComponent.html":{}}}],["data.map(data",{"_index":629,"title":{},"body":{"components/GraphsComponent.html":{}}}],["data.service",{"_index":423,"title":{},"body":{"modules/AppModule.html":{},"components/GraphsComponent.html":{},"classes/NgbdDropdownBasic.html":{},"components/WebcamComponent.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["data.service.ts",{"_index":212,"title":{},"body":{"injectables/AdminpanelDataService.html":{},"interfaces/BatteryData.html":{},"interfaces/ImageData.html":{},"injectables/ImageService.html":{},"interfaces/RaspberryData.html":{},"interfaces/SolarData.html":{},"interfaces/TemperatureData.html":{},"interfaces/VolumeData.html":{},"injectables/WeatherDataService.html":{},"interfaces/WindData.html":{},"coverage.html":{}}}],["data.service.ts:13",{"_index":776,"title":{},"body":{"injectables/ImageService.html":{}}}],["data.service.ts:15",{"_index":225,"title":{},"body":{"injectables/AdminpanelDataService.html":{},"injectables/WeatherDataService.html":{}}}],["data.service.ts:17",{"_index":770,"title":{},"body":{"injectables/ImageService.html":{}}}],["data.service.ts:29",{"_index":239,"title":{},"body":{"injectables/AdminpanelDataService.html":{},"injectables/WeatherDataService.html":{}}}],["data.service.ts:31",{"_index":773,"title":{},"body":{"injectables/ImageService.html":{}}}],["data.service.ts:36",{"_index":774,"title":{},"body":{"injectables/ImageService.html":{}}}],["data.service.ts:37",{"_index":228,"title":{},"body":{"injectables/AdminpanelDataService.html":{},"injectables/WeatherDataService.html":{}}}],["data.service.ts:42",{"_index":775,"title":{},"body":{"injectables/ImageService.html":{}}}],["data.service.ts:44",{"_index":876,"title":{},"body":{"injectables/WeatherDataService.html":{}}}],["data.service.ts:45",{"_index":235,"title":{},"body":{"injectables/AdminpanelDataService.html":{}}}],["data.service.ts:49",{"_index":874,"title":{},"body":{"injectables/WeatherDataService.html":{}}}],["data.service.ts:50",{"_index":772,"title":{},"body":{"injectables/ImageService.html":{}}}],["data.service.ts:53",{"_index":243,"title":{},"body":{"injectables/AdminpanelDataService.html":{}}}],["data.service.ts:54",{"_index":871,"title":{},"body":{"injectables/WeatherDataService.html":{}}}],["data.service.ts:61",{"_index":241,"title":{},"body":{"injectables/AdminpanelDataService.html":{}}}],["data.service.ts:65",{"_index":232,"title":{},"body":{"injectables/AdminpanelDataService.html":{}}}],["data.service.ts:69",{"_index":237,"title":{},"body":{"injectables/AdminpanelDataService.html":{}}}],["data.service.ts:73",{"_index":245,"title":{},"body":{"injectables/AdminpanelDataService.html":{}}}],["data.service.ts:8",{"_index":246,"title":{},"body":{"injectables/AdminpanelDataService.html":{},"injectables/ImageService.html":{},"injectables/WeatherDataService.html":{}}}],["data.service.ts:9",{"_index":222,"title":{},"body":{"injectables/AdminpanelDataService.html":{},"injectables/ImageService.html":{},"injectables/WeatherDataService.html":{}}}],["data.speed)[data.length",{"_index":630,"title":{},"body":{"components/GraphsComponent.html":{}}}],["data.voltage);//todo",{"_index":1200,"title":{},"body":{"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["data:this.charttempdata",{"_index":653,"title":{},"body":{"components/GraphsComponent.html":{}}}],["data:this.chartwindata",{"_index":660,"title":{},"body":{"components/GraphsComponent.html":{}}}],["data[i",{"_index":667,"title":{},"body":{"components/GraphsComponent.html":{}}}],["databattery",{"_index":1146,"title":{},"body":{"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["datarasp",{"_index":1149,"title":{},"body":{"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["dataset",{"_index":1186,"title":{},"body":{"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["datasets",{"_index":576,"title":{},"body":{"components/GraphsComponent.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["datasolar",{"_index":1143,"title":{},"body":{"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["datasolar.voltage",{"_index":1100,"title":{},"body":{"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["datavol",{"_index":1153,"title":{},"body":{"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["datavolume.image_size",{"_index":1111,"title":{},"body":{"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["datawind.speed",{"_index":594,"title":{},"body":{"components/GraphsComponent.html":{}}}],["date",{"_index":224,"title":{},"body":{"injectables/AdminpanelDataService.html":{},"interfaces/BatteryData.html":{},"interfaces/ImageData.html":{},"injectables/ImageService.html":{},"classes/NgbdDropdownBasic.html":{},"interfaces/RaspberryData.html":{},"interfaces/SolarData.html":{},"interfaces/TemperatureData.html":{},"interfaces/VolumeData.html":{},"injectables/WeatherDataService.html":{},"components/WebcamComponent.html":{},"interfaces/WindData.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["date(data.measure_time).tolocalestring([],{month:'2",{"_index":571,"title":{},"body":{"components/GraphsComponent.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["date(datawind.measure_time).tolocalestring",{"_index":591,"title":{},"body":{"components/GraphsComponent.html":{}}}],["date(datawind.measure_time).tolocalestring([],{hour:'2",{"_index":671,"title":{},"body":{"components/GraphsComponent.html":{}}}],["date(datawind.measure_time).tolocalestring([],{month:'2",{"_index":656,"title":{},"body":{"components/GraphsComponent.html":{}}}],["date(date",{"_index":249,"title":{},"body":{"injectables/AdminpanelDataService.html":{},"interfaces/BatteryData.html":{},"interfaces/ImageData.html":{},"injectables/ImageService.html":{},"interfaces/RaspberryData.html":{},"interfaces/SolarData.html":{},"interfaces/TemperatureData.html":{},"interfaces/VolumeData.html":{},"injectables/WeatherDataService.html":{},"interfaces/WindData.html":{}}}],["date(date.getfullyear",{"_index":1137,"title":{},"body":{"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["date(datesolar.measure_time).tolocalestring([],{month:'2",{"_index":1170,"title":{},"body":{"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["date(endstring",{"_index":690,"title":{},"body":{"components/GraphsComponent.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["date(startstring",{"_index":685,"title":{},"body":{"components/GraphsComponent.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["date.getmonth",{"_index":1138,"title":{},"body":{"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["dategallery",{"_index":877,"title":{},"body":{"components/WebcamComponent.html":{}}}],["dategallery:gallery",{"_index":808,"title":{},"body":{"classes/NgbdDropdownBasic.html":{},"components/WebcamComponent.html":{}}}],["dateimages",{"_index":801,"title":{},"body":{"classes/NgbdDropdownBasic.html":{},"components/WebcamComponent.html":{}}}],["datenmenge",{"_index":1094,"title":{},"body":{"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["datenverbrauch",{"_index":1088,"title":{},"body":{"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["datepics",{"_index":800,"title":{},"body":{"classes/NgbdDropdownBasic.html":{},"components/WebcamComponent.html":{}}}],["dates",{"_index":959,"title":{},"body":{"coverage.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{},"miscellaneous/variables.html":{}}}],["datum",{"_index":912,"title":{},"body":{"components/WebcamComponent.html":{}}}],["day",{"_index":253,"title":{},"body":{"injectables/AdminpanelDataService.html":{},"interfaces/BatteryData.html":{},"interfaces/ImageData.html":{},"injectables/ImageService.html":{},"interfaces/RaspberryData.html":{},"interfaces/SolarData.html":{},"interfaces/TemperatureData.html":{},"interfaces/VolumeData.html":{},"injectables/WeatherDataService.html":{},"interfaces/WindData.html":{}}}],["declarations",{"_index":299,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["default",{"_index":55,"title":{},"body":{"components/AdminComponent.html":{},"injectables/AdminService.html":{},"injectables/AdminpanelDataService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/GraphsComponent.html":{},"injectables/ImageService.html":{},"injectables/WeatherDataService.html":{},"components/WebcamComponent.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":37,"title":{},"body":{"components/AdminComponent.html":{},"injectables/AdminService.html":{},"injectables/AdminpanelDataService.html":{},"components/AppComponent.html":{},"classes/AppPage.html":{},"guards/AuthGuardService.html":{},"injectables/AuthService.html":{},"components/GraphsComponent.html":{},"injectables/ImageService.html":{},"injectables/WeatherDataService.html":{},"components/WebcamComponent.html":{}}}],["deg",{"_index":668,"title":{},"body":{"components/GraphsComponent.html":{}}}],["degrees",{"_index":280,"title":{},"body":{"injectables/AdminpanelDataService.html":{},"interfaces/BatteryData.html":{},"interfaces/RaspberryData.html":{},"interfaces/SolarData.html":{},"interfaces/TemperatureData.html":{},"interfaces/VolumeData.html":{},"injectables/WeatherDataService.html":{},"interfaces/WindData.html":{}}}],["dependencies",{"_index":298,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"dependencies.html":{},"overview.html":{}}}],["der",{"_index":703,"title":{},"body":{"components/GraphsComponent.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["destroy",{"_index":802,"title":{},"body":{"classes/NgbdDropdownBasic.html":{},"components/WebcamComponent.html":{}}}],["dev",{"_index":1016,"title":{},"body":{"index.html":{}}}],["development",{"_index":1011,"title":{},"body":{"index.html":{}}}],["devkit/schematics",{"_index":975,"title":{},"body":{"dependencies.html":{}}}],["diagramchange(event",{"_index":1125,"title":{},"body":{"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["dianame",{"_index":1181,"title":{},"body":{"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["die",{"_index":917,"title":{},"body":{"components/WebcamComponent.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["dies",{"_index":905,"title":{},"body":{"components/WebcamComponent.html":{}}}],["digit",{"_index":575,"title":{},"body":{"components/GraphsComponent.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["digit',day:'2",{"_index":572,"title":{},"body":{"components/GraphsComponent.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["digit',hour:'2",{"_index":573,"title":{},"body":{"components/GraphsComponent.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["digit',minute:'2",{"_index":574,"title":{},"body":{"components/GraphsComponent.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["direction",{"_index":866,"title":{},"body":{"interfaces/TemperatureData.html":{},"injectables/WeatherDataService.html":{},"interfaces/WindData.html":{}}}],["directions",{"_index":740,"title":{},"body":{"components/GraphsComponent.html":{}}}],["directive",{"_index":163,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/GraphsComponent.html":{},"components/WebcamComponent.html":{}}}],["directives",{"_index":175,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/GraphsComponent.html":{},"components/WebcamComponent.html":{}}}],["directive|pipe|service|class|guard|interface|enum|module",{"_index":1026,"title":{},"body":{"index.html":{}}}],["directory",{"_index":1031,"title":{},"body":{"index.html":{}}}],["dirhours",{"_index":670,"title":{},"body":{"components/GraphsComponent.html":{}}}],["dirhours[i",{"_index":672,"title":{},"body":{"components/GraphsComponent.html":{}}}],["display",{"_index":114,"title":{},"body":{"components/AdminComponent.html":{},"components/GraphsComponent.html":{},"components/WebcamComponent.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["displayedlogcolumns",{"_index":1156,"title":{},"body":{"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["displayedsensorcolumns",{"_index":1158,"title":{},"body":{"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["dist",{"_index":1030,"title":{},"body":{"index.html":{}}}],["document",{"_index":903,"title":{},"body":{"components/WebcamComponent.html":{}}}],["document.getelementbyid(\"volsum\").innerhtml",{"_index":1210,"title":{},"body":{"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["document.getelementbyid('elecchart",{"_index":1185,"title":{},"body":{"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["document.getelementbyid(i",{"_index":664,"title":{},"body":{"components/GraphsComponent.html":{}}}],["document.getelementbyid(id",{"_index":669,"title":{},"body":{"components/GraphsComponent.html":{}}}],["documentation",{"_index":944,"title":{},"body":{"coverage.html":{}}}],["dom",{"_index":7,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/GraphsComponent.html":{},"components/WebcamComponent.html":{}}}],["draft",{"_index":289,"title":{},"body":{"components/AppComponent.html":{}}}],["dragdropmodule",{"_index":341,"title":{},"body":{"modules/AppModule.html":{}}}],["drop",{"_index":343,"title":{},"body":{"modules/AppModule.html":{}}}],["duration",{"_index":1115,"title":{},"body":{"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["dynamic",{"_index":984,"title":{},"body":{"dependencies.html":{}}}],["e2e",{"_index":1042,"title":{},"body":{"index.html":{}}}],["e2e/src/app.po.ts",{"_index":441,"title":{},"body":{"classes/AppPage.html":{},"coverage.html":{}}}],["e2e/src/app.po.ts:4",{"_index":445,"title":{},"body":{"classes/AppPage.html":{}}}],["e2e/src/app.po.ts:8",{"_index":444,"title":{},"body":{"classes/AppPage.html":{}}}],["ein",{"_index":921,"title":{},"body":{"components/WebcamComponent.html":{}}}],["einem",{"_index":918,"title":{},"body":{"components/WebcamComponent.html":{}}}],["einzelnen",{"_index":1213,"title":{},"body":{"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["element",{"_index":162,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"classes/AppPage.html":{},"components/GraphsComponent.html":{},"components/WebcamComponent.html":{}}}],["element(by.css('app",{"_index":449,"title":{},"body":{"classes/AppPage.html":{}}}],["end",{"_index":231,"title":{},"body":{"injectables/AdminpanelDataService.html":{},"injectables/WeatherDataService.html":{},"index.html":{}}}],["end.setdate(date.getdate()+1",{"_index":766,"title":{},"body":{"interfaces/ImageData.html":{},"injectables/ImageService.html":{}}}],["end=new",{"_index":765,"title":{},"body":{"interfaces/ImageData.html":{},"injectables/ImageService.html":{}}}],["enddate",{"_index":689,"title":{},"body":{"components/GraphsComponent.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["enddate).subscribe((data",{"_index":692,"title":{},"body":{"components/GraphsComponent.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["enddateevents",{"_index":504,"title":{},"body":{"components/GraphsComponent.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["enddatum",{"_index":711,"title":{},"body":{"components/GraphsComponent.html":{}}}],["endpickform,.applydates,.startpickform",{"_index":750,"title":{},"body":{"components/GraphsComponent.html":{}}}],["endstring",{"_index":687,"title":{},"body":{"components/GraphsComponent.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["environment",{"_index":967,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["error",{"_index":81,"title":{},"body":{"components/AdminComponent.html":{},"injectables/AdminService.html":{},"interfaces/AuthToken.html":{}}}],["errors",{"_index":25,"title":{},"body":{"components/AdminComponent.html":{}}}],["erw",{"_index":708,"title":{},"body":{"components/GraphsComponent.html":{}}}],["event",{"_index":536,"title":{},"body":{"components/GraphsComponent.html":{},"components/WebcamComponent.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["event.target.innerwidth",{"_index":695,"title":{},"body":{"components/GraphsComponent.html":{}}}],["event.value",{"_index":1127,"title":{},"body":{"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["eventhandles",{"_index":676,"title":{},"body":{"components/GraphsComponent.html":{},"classes/NgbdDropdownBasic.html":{},"components/WebcamComponent.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["example",{"_index":823,"title":{},"body":{"classes/NgbdDropdownBasic.html":{},"components/WebcamComponent.html":{}}}],["execute",{"_index":1039,"title":{},"body":{"index.html":{}}}],["expansion",{"_index":941,"title":{},"body":{"components/WebcamComponent.html":{}}}],["expired",{"_index":487,"title":{},"body":{"injectables/AuthService.html":{}}}],["export",{"_index":70,"title":{},"body":{"components/AdminComponent.html":{},"injectables/AdminService.html":{},"injectables/AdminpanelDataService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuardService.html":{},"injectables/AuthService.html":{},"interfaces/AuthToken.html":{},"interfaces/BatteryData.html":{},"components/GraphsComponent.html":{},"interfaces/ImageData.html":{},"injectables/ImageService.html":{},"classes/NgbdDropdownBasic.html":{},"interfaces/RaspberryData.html":{},"interfaces/SolarData.html":{},"interfaces/TemperatureData.html":{},"interfaces/VolumeData.html":{},"injectables/WeatherDataService.html":{},"components/WebcamComponent.html":{},"interfaces/WindData.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["exports",{"_index":302,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"overview.html":{}}}],["extendedmodestatus",{"_index":505,"title":{},"body":{"components/GraphsComponent.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["extra",{"_index":130,"title":{},"body":{"components/AdminComponent.html":{}}}],["f44336",{"_index":141,"title":{},"body":{"components/AdminComponent.html":{}}}],["false",{"_index":82,"title":{},"body":{"components/AdminComponent.html":{},"guards/AuthGuardService.html":{},"injectables/AuthService.html":{},"components/GraphsComponent.html":{},"classes/NgbdDropdownBasic.html":{},"components/WebcamComponent.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{},"miscellaneous/variables.html":{}}}],["fehlgeschlagen",{"_index":98,"title":{},"body":{"components/AdminComponent.html":{}}}],["ff0000",{"_index":1101,"title":{},"body":{"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["field",{"_index":329,"title":{},"body":{"modules/AppModule.html":{}}}],["file",{"_index":9,"title":{},"body":{"components/AdminComponent.html":{},"injectables/AdminService.html":{},"injectables/AdminpanelDataService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuardService.html":{},"injectables/AuthService.html":{},"interfaces/AuthToken.html":{},"interfaces/BatteryData.html":{},"components/GraphsComponent.html":{},"interfaces/ImageData.html":{},"injectables/ImageService.html":{},"classes/NgbdDropdownBasic.html":{},"interfaces/RaspberryData.html":{},"interfaces/SolarData.html":{},"interfaces/TemperatureData.html":{},"interfaces/VolumeData.html":{},"injectables/WeatherDataService.html":{},"components/WebcamComponent.html":{},"interfaces/WindData.html":{},"coverage.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["files",{"_index":1021,"title":{},"body":{"index.html":{}}}],["fill",{"_index":581,"title":{},"body":{"components/GraphsComponent.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["firstmonthday",{"_index":1136,"title":{},"body":{"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["flag",{"_index":1033,"title":{},"body":{"index.html":{}}}],["flex",{"_index":126,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/GraphsComponent.html":{}}}],["float",{"_index":148,"title":{},"body":{"components/AdminComponent.html":{},"components/GraphsComponent.html":{}}}],["font",{"_index":732,"title":{},"body":{"components/GraphsComponent.html":{},"components/WebcamComponent.html":{}}}],["fontsize",{"_index":1112,"title":{},"body":{"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["forgot",{"_index":146,"title":{},"body":{"components/AdminComponent.html":{}}}],["formatdate",{"_index":213,"title":{},"body":{"injectables/AdminpanelDataService.html":{},"injectables/ImageService.html":{},"injectables/WeatherDataService.html":{}}}],["formatdate(date",{"_index":223,"title":{},"body":{"injectables/AdminpanelDataService.html":{},"interfaces/BatteryData.html":{},"interfaces/ImageData.html":{},"injectables/ImageService.html":{},"interfaces/RaspberryData.html":{},"interfaces/SolarData.html":{},"interfaces/TemperatureData.html":{},"interfaces/VolumeData.html":{},"injectables/WeatherDataService.html":{},"interfaces/WindData.html":{}}}],["formsmodule",{"_index":337,"title":{},"body":{"modules/AppModule.html":{}}}],["frontend",{"_index":1005,"title":{},"body":{"index.html":{}}}],["full",{"_index":99,"title":{},"body":{"components/AdminComponent.html":{}}}],["further",{"_index":1043,"title":{},"body":{"index.html":{}}}],["für",{"_index":1077,"title":{},"body":{"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["gallerizemodule",{"_index":435,"title":{},"body":{"modules/AppModule.html":{}}}],["gallery",{"_index":785,"title":{},"body":{"classes/NgbdDropdownBasic.html":{},"components/WebcamComponent.html":{},"dependencies.html":{}}}],["gallery,public",{"_index":806,"title":{},"body":{"classes/NgbdDropdownBasic.html":{},"components/WebcamComponent.html":{}}}],["gallery/core",{"_index":432,"title":{},"body":{"modules/AppModule.html":{},"classes/NgbdDropdownBasic.html":{},"components/WebcamComponent.html":{},"dependencies.html":{}}}],["gallery/gallerize",{"_index":436,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["gallery/lightbox",{"_index":434,"title":{},"body":{"modules/AppModule.html":{},"classes/NgbdDropdownBasic.html":{},"components/WebcamComponent.html":{},"dependencies.html":{}}}],["galleryid",{"_index":842,"title":{},"body":{"classes/NgbdDropdownBasic.html":{},"components/WebcamComponent.html":{}}}],["galleryitem",{"_index":786,"title":{},"body":{"classes/NgbdDropdownBasic.html":{},"components/WebcamComponent.html":{}}}],["gallerymodule",{"_index":430,"title":{},"body":{"modules/AppModule.html":{}}}],["generate",{"_index":1024,"title":{},"body":{"index.html":{}}}],["generated",{"_index":1007,"title":{},"body":{"index.html":{}}}],["gestern",{"_index":911,"title":{},"body":{"components/WebcamComponent.html":{}}}],["getbatterydata",{"_index":214,"title":{},"body":{"injectables/AdminpanelDataService.html":{}}}],["getbatterydata(time",{"_index":226,"title":{},"body":{"injectables/AdminpanelDataService.html":{},"interfaces/BatteryData.html":{},"interfaces/RaspberryData.html":{},"interfaces/SolarData.html":{},"interfaces/VolumeData.html":{}}}],["getbatterydataframe",{"_index":215,"title":{},"body":{"injectables/AdminpanelDataService.html":{}}}],["getbatterydataframe(start",{"_index":230,"title":{},"body":{"injectables/AdminpanelDataService.html":{}}}],["getbatterydataframe(start:date,end:date",{"_index":270,"title":{},"body":{"injectables/AdminpanelDataService.html":{},"interfaces/BatteryData.html":{},"interfaces/RaspberryData.html":{},"interfaces/SolarData.html":{},"interfaces/VolumeData.html":{}}}],["getbatterydataset",{"_index":1197,"title":{},"body":{"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["getdateimages",{"_index":768,"title":{},"body":{"injectables/ImageService.html":{}}}],["getdateimages(date",{"_index":771,"title":{},"body":{"injectables/ImageService.html":{}}}],["getdateimages(date:date",{"_index":764,"title":{},"body":{"interfaces/ImageData.html":{},"injectables/ImageService.html":{}}}],["getraspberrydata",{"_index":216,"title":{},"body":{"injectables/AdminpanelDataService.html":{}}}],["getraspberrydata(time",{"_index":234,"title":{},"body":{"injectables/AdminpanelDataService.html":{},"interfaces/BatteryData.html":{},"interfaces/RaspberryData.html":{},"interfaces/SolarData.html":{},"interfaces/VolumeData.html":{}}}],["getraspberrydataframe",{"_index":217,"title":{},"body":{"injectables/AdminpanelDataService.html":{}}}],["getraspberrydataframe(start",{"_index":236,"title":{},"body":{"injectables/AdminpanelDataService.html":{}}}],["getraspberrydataframe(start:date,end:date",{"_index":272,"title":{},"body":{"injectables/AdminpanelDataService.html":{},"interfaces/BatteryData.html":{},"interfaces/RaspberryData.html":{},"interfaces/SolarData.html":{},"interfaces/VolumeData.html":{}}}],["getraspberrydataset",{"_index":1203,"title":{},"body":{"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["getrecentimages",{"_index":769,"title":{},"body":{"injectables/ImageService.html":{}}}],["getrecentvalues",{"_index":522,"title":{},"body":{"components/GraphsComponent.html":{}}}],["getrecentwind",{"_index":863,"title":{},"body":{"interfaces/TemperatureData.html":{},"injectables/WeatherDataService.html":{},"interfaces/WindData.html":{}}}],["getsolardata",{"_index":218,"title":{},"body":{"injectables/AdminpanelDataService.html":{}}}],["getsolardata(time",{"_index":238,"title":{},"body":{"injectables/AdminpanelDataService.html":{}}}],["getsolardataframe",{"_index":219,"title":{},"body":{"injectables/AdminpanelDataService.html":{}}}],["getsolardataframe(start",{"_index":240,"title":{},"body":{"injectables/AdminpanelDataService.html":{}}}],["getsolardataframe(start:date,end:date",{"_index":268,"title":{},"body":{"injectables/AdminpanelDataService.html":{},"interfaces/BatteryData.html":{},"interfaces/RaspberryData.html":{},"interfaces/SolarData.html":{},"interfaces/VolumeData.html":{}}}],["getsolardataset",{"_index":1193,"title":{},"body":{"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["gettemperatures",{"_index":867,"title":{},"body":{"injectables/WeatherDataService.html":{}}}],["gettemperatures(time",{"_index":872,"title":{},"body":{"injectables/WeatherDataService.html":{}}}],["gettemperaturesdataframe",{"_index":868,"title":{},"body":{"injectables/WeatherDataService.html":{}}}],["gettemperaturesdataframe(start",{"_index":873,"title":{},"body":{"injectables/WeatherDataService.html":{}}}],["gettemperaturesdataframe(start:date,end:date",{"_index":861,"title":{},"body":{"interfaces/TemperatureData.html":{},"injectables/WeatherDataService.html":{},"interfaces/WindData.html":{}}}],["getting",{"_index":1002,"title":{"index.html":{}},"body":{}}],["gettitletext",{"_index":442,"title":{},"body":{"classes/AppPage.html":{}}}],["gettodayimages",{"_index":758,"title":{},"body":{"interfaces/ImageData.html":{},"injectables/ImageService.html":{}}}],["gettoken",{"_index":31,"title":{},"body":{"components/AdminComponent.html":{}}}],["getvolumedata",{"_index":220,"title":{},"body":{"injectables/AdminpanelDataService.html":{}}}],["getvolumedata(time",{"_index":242,"title":{},"body":{"injectables/AdminpanelDataService.html":{},"interfaces/BatteryData.html":{},"interfaces/RaspberryData.html":{},"interfaces/SolarData.html":{},"interfaces/VolumeData.html":{}}}],["getvolumedataframe",{"_index":221,"title":{},"body":{"injectables/AdminpanelDataService.html":{}}}],["getvolumedataframe(start",{"_index":244,"title":{},"body":{"injectables/AdminpanelDataService.html":{}}}],["getvolumedataframe(start:date,end:date",{"_index":273,"title":{},"body":{"injectables/AdminpanelDataService.html":{},"interfaces/BatteryData.html":{},"interfaces/RaspberryData.html":{},"interfaces/SolarData.html":{},"interfaces/VolumeData.html":{}}}],["getvolumedataset",{"_index":1208,"title":{},"body":{"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["getwinddata",{"_index":869,"title":{},"body":{"injectables/WeatherDataService.html":{}}}],["getwinddata(time",{"_index":857,"title":{},"body":{"interfaces/TemperatureData.html":{},"injectables/WeatherDataService.html":{},"interfaces/WindData.html":{}}}],["getwinddataframe",{"_index":870,"title":{},"body":{"injectables/WeatherDataService.html":{}}}],["getwinddataframe(start",{"_index":875,"title":{},"body":{"injectables/WeatherDataService.html":{}}}],["getwinddataframe(start:date,end:date",{"_index":859,"title":{},"body":{"interfaces/TemperatureData.html":{},"injectables/WeatherDataService.html":{},"interfaces/WindData.html":{}}}],["getyesterdayimages",{"_index":760,"title":{},"body":{"interfaces/ImageData.html":{},"injectables/ImageService.html":{}}}],["gibt",{"_index":1076,"title":{},"body":{"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["go",{"_index":1046,"title":{},"body":{"index.html":{}}}],["graph",{"_index":1051,"title":{},"body":{"modules.html":{}}}],["graphen",{"_index":291,"title":{},"body":{"components/AppComponent.html":{}}}],["graphs",{"_index":496,"title":{},"body":{"components/GraphsComponent.html":{}}}],["graphs'},{'name",{"_index":172,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/GraphsComponent.html":{},"components/WebcamComponent.html":{}}}],["graphs.component.html",{"_index":498,"title":{},"body":{"components/GraphsComponent.html":{}}}],["graphs.component.scss",{"_index":497,"title":{},"body":{"components/GraphsComponent.html":{}}}],["graphs/graphs.component",{"_index":332,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["graphscomponent",{"_index":171,"title":{"components/GraphsComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/GraphsComponent.html":{},"components/WebcamComponent.html":{},"coverage.html":{},"overview.html":{}}}],["guard",{"_index":461,"title":{"guards/AuthGuardService.html":{}},"body":{"coverage.html":{},"overview.html":{}}}],["guard.service",{"_index":429,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["guard.service.ts",{"_index":464,"title":{},"body":{"guards/AuthGuardService.html":{},"coverage.html":{}}}],["guard.service.ts:6",{"_index":468,"title":{},"body":{"guards/AuthGuardService.html":{}}}],["guard.service.ts:8",{"_index":469,"title":{},"body":{"guards/AuthGuardService.html":{}}}],["guards",{"_index":462,"title":{},"body":{"guards/AuthGuardService.html":{}}}],["h1",{"_index":743,"title":{},"body":{"components/GraphsComponent.html":{}}}],["hammerjs",{"_index":789,"title":{},"body":{"classes/NgbdDropdownBasic.html":{},"components/WebcamComponent.html":{},"dependencies.html":{}}}],["handler",{"_index":693,"title":{},"body":{"components/GraphsComponent.html":{}}}],["height",{"_index":728,"title":{},"body":{"components/GraphsComponent.html":{},"components/WebcamComponent.html":{}}}],["height:100",{"_index":717,"title":{},"body":{"components/GraphsComponent.html":{}}}],["height:55",{"_index":739,"title":{},"body":{"components/GraphsComponent.html":{}}}],["height:auto",{"_index":723,"title":{},"body":{"components/GraphsComponent.html":{}}}],["help",{"_index":1044,"title":{},"body":{"index.html":{}}}],["heute",{"_index":904,"title":{},"body":{"components/WebcamComponent.html":{}}}],["hidden",{"_index":1078,"title":{},"body":{"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["hover",{"_index":1116,"title":{},"body":{"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["html",{"_index":161,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/GraphsComponent.html":{},"components/WebcamComponent.html":{}}}],["http",{"_index":184,"title":{},"body":{"injectables/AdminService.html":{},"injectables/AdminpanelDataService.html":{},"interfaces/AuthToken.html":{},"interfaces/BatteryData.html":{},"interfaces/ImageData.html":{},"injectables/ImageService.html":{},"interfaces/RaspberryData.html":{},"interfaces/SolarData.html":{},"interfaces/TemperatureData.html":{},"interfaces/VolumeData.html":{},"injectables/WeatherDataService.html":{},"interfaces/WindData.html":{}}}],["http://127.0.0.1:8000/api",{"_index":855,"title":{},"body":{"interfaces/TemperatureData.html":{},"injectables/WeatherDataService.html":{},"interfaces/WindData.html":{}}}],["http://localhost:4200",{"_index":1018,"title":{},"body":{"index.html":{}}}],["http://localhost:8000/api",{"_index":193,"title":{},"body":{"injectables/AdminService.html":{},"injectables/AdminpanelDataService.html":{},"interfaces/AuthToken.html":{},"interfaces/BatteryData.html":{},"interfaces/ImageData.html":{},"injectables/ImageService.html":{},"interfaces/RaspberryData.html":{},"interfaces/SolarData.html":{},"interfaces/VolumeData.html":{}}}],["httpclient",{"_index":187,"title":{},"body":{"injectables/AdminService.html":{},"injectables/AdminpanelDataService.html":{},"modules/AppModule.html":{},"interfaces/AuthToken.html":{},"interfaces/BatteryData.html":{},"interfaces/ImageData.html":{},"injectables/ImageService.html":{},"interfaces/RaspberryData.html":{},"interfaces/SolarData.html":{},"interfaces/TemperatureData.html":{},"interfaces/VolumeData.html":{},"injectables/WeatherDataService.html":{},"interfaces/WindData.html":{}}}],["httpclientmodule",{"_index":424,"title":{},"body":{"modules/AppModule.html":{}}}],["httperrorresponse",{"_index":196,"title":{},"body":{"injectables/AdminService.html":{},"interfaces/AuthToken.html":{}}}],["https://cdn.jsdelivr.net/npm/chart.js@2.9.3/dist/chart.min.js",{"_index":697,"title":{},"body":{"components/GraphsComponent.html":{}}}],["id",{"_index":275,"title":{},"body":{"injectables/AdminpanelDataService.html":{},"interfaces/BatteryData.html":{},"components/GraphsComponent.html":{},"interfaces/ImageData.html":{},"injectables/ImageService.html":{},"interfaces/RaspberryData.html":{},"interfaces/SolarData.html":{},"interfaces/TemperatureData.html":{},"interfaces/VolumeData.html":{},"injectables/WeatherDataService.html":{},"interfaces/WindData.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["identifier",{"_index":945,"title":{},"body":{"coverage.html":{}}}],["if(this.chart!=undefined",{"_index":1183,"title":{},"body":{"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["if(this.lastevent",{"_index":1222,"title":{},"body":{"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["if(this.tempchart!=undefined",{"_index":646,"title":{},"body":{"components/GraphsComponent.html":{}}}],["im",{"_index":1215,"title":{},"body":{"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["image",{"_index":425,"title":{},"body":{"modules/AppModule.html":{},"interfaces/ImageData.html":{},"injectables/ImageService.html":{},"classes/NgbdDropdownBasic.html":{},"components/WebcamComponent.html":{}}}],["image_size",{"_index":283,"title":{},"body":{"injectables/AdminpanelDataService.html":{},"interfaces/BatteryData.html":{},"interfaces/RaspberryData.html":{},"interfaces/SolarData.html":{},"interfaces/VolumeData.html":{}}}],["imagecontainer",{"_index":745,"title":{},"body":{"components/GraphsComponent.html":{}}}],["imagedata",{"_index":753,"title":{"interfaces/ImageData.html":{}},"body":{"interfaces/ImageData.html":{},"injectables/ImageService.html":{},"classes/NgbdDropdownBasic.html":{},"components/WebcamComponent.html":{},"coverage.html":{}}}],["imageitem",{"_index":787,"title":{},"body":{"classes/NgbdDropdownBasic.html":{},"components/WebcamComponent.html":{}}}],["imageitem({src:data.image,thumb:data.image",{"_index":827,"title":{},"body":{"classes/NgbdDropdownBasic.html":{},"components/WebcamComponent.html":{}}}],["imageone",{"_index":922,"title":{},"body":{"components/WebcamComponent.html":{}}}],["images/?start='+this.formatdate(today",{"_index":759,"title":{},"body":{"interfaces/ImageData.html":{},"injectables/ImageService.html":{}}}],["images/?start='+this.formatdate(yesterday)+'&end='+this.formatdate(today",{"_index":763,"title":{},"body":{"interfaces/ImageData.html":{},"injectables/ImageService.html":{}}}],["images/recent",{"_index":757,"title":{},"body":{"interfaces/ImageData.html":{},"injectables/ImageService.html":{}}}],["imageservice",{"_index":309,"title":{"injectables/ImageService.html":{}},"body":{"modules/AppModule.html":{},"interfaces/ImageData.html":{},"injectables/ImageService.html":{},"classes/NgbdDropdownBasic.html":{},"components/WebcamComponent.html":{},"coverage.html":{},"overview.html":{}}}],["imageservice,public",{"_index":805,"title":{},"body":{"classes/NgbdDropdownBasic.html":{},"components/WebcamComponent.html":{}}}],["imagesize",{"_index":816,"title":{},"body":{"classes/NgbdDropdownBasic.html":{},"components/WebcamComponent.html":{}}}],["img",{"_index":663,"title":{},"body":{"components/GraphsComponent.html":{},"components/WebcamComponent.html":{}}}],["img.style.transform",{"_index":665,"title":{},"body":{"components/GraphsComponent.html":{}}}],["imgtext",{"_index":929,"title":{},"body":{"components/WebcamComponent.html":{}}}],["implements",{"_index":11,"title":{},"body":{"components/AdminComponent.html":{},"guards/AuthGuardService.html":{},"components/GraphsComponent.html":{},"classes/NgbdDropdownBasic.html":{},"components/WebcamComponent.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["import",{"_index":64,"title":{},"body":{"components/AdminComponent.html":{},"injectables/AdminService.html":{},"injectables/AdminpanelDataService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuardService.html":{},"injectables/AuthService.html":{},"interfaces/AuthToken.html":{},"interfaces/BatteryData.html":{},"components/GraphsComponent.html":{},"interfaces/ImageData.html":{},"injectables/ImageService.html":{},"classes/NgbdDropdownBasic.html":{},"interfaces/RaspberryData.html":{},"interfaces/SolarData.html":{},"interfaces/TemperatureData.html":{},"interfaces/VolumeData.html":{},"injectables/WeatherDataService.html":{},"components/WebcamComponent.html":{},"interfaces/WindData.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["important",{"_index":940,"title":{},"body":{"components/WebcamComponent.html":{}}}],["imports",{"_index":315,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["index",{"_index":21,"title":{"index.html":{}},"body":{"components/AdminComponent.html":{},"injectables/AdminService.html":{},"injectables/AdminpanelDataService.html":{},"components/AppComponent.html":{},"classes/AppPage.html":{},"guards/AuthGuardService.html":{},"injectables/AuthService.html":{},"interfaces/AuthToken.html":{},"interfaces/BatteryData.html":{},"components/GraphsComponent.html":{},"interfaces/ImageData.html":{},"injectables/ImageService.html":{},"interfaces/RaspberryData.html":{},"interfaces/SolarData.html":{},"interfaces/TemperatureData.html":{},"interfaces/VolumeData.html":{},"injectables/WeatherDataService.html":{},"components/WebcamComponent.html":{},"interfaces/WindData.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AdminComponent.html":{},"injectables/AdminService.html":{},"injectables/AdminpanelDataService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuardService.html":{},"injectables/AuthService.html":{},"interfaces/AuthToken.html":{},"interfaces/BatteryData.html":{},"components/GraphsComponent.html":{},"interfaces/ImageData.html":{},"injectables/ImageService.html":{},"classes/NgbdDropdownBasic.html":{},"interfaces/RaspberryData.html":{},"interfaces/SolarData.html":{},"interfaces/TemperatureData.html":{},"interfaces/VolumeData.html":{},"injectables/WeatherDataService.html":{},"components/WebcamComponent.html":{},"interfaces/WindData.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["initdata",{"_index":1135,"title":{},"body":{"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["injectable",{"_index":180,"title":{"injectables/AdminService.html":{},"injectables/AdminpanelDataService.html":{},"injectables/AuthService.html":{},"injectables/ImageService.html":{},"injectables/WeatherDataService.html":{}},"body":{"injectables/AdminService.html":{},"injectables/AdminpanelDataService.html":{},"guards/AuthGuardService.html":{},"injectables/AuthService.html":{},"interfaces/AuthToken.html":{},"interfaces/BatteryData.html":{},"interfaces/ImageData.html":{},"injectables/ImageService.html":{},"interfaces/RaspberryData.html":{},"interfaces/SolarData.html":{},"interfaces/TemperatureData.html":{},"interfaces/VolumeData.html":{},"injectables/WeatherDataService.html":{},"interfaces/WindData.html":{},"coverage.html":{}}}],["injectable({providedin",{"_index":471,"title":{},"body":{"guards/AuthGuardService.html":{}}}],["injectables",{"_index":181,"title":{},"body":{"injectables/AdminService.html":{},"injectables/AdminpanelDataService.html":{},"injectables/AuthService.html":{},"injectables/ImageService.html":{},"injectables/WeatherDataService.html":{},"overview.html":{}}}],["inline",{"_index":924,"title":{},"body":{"components/WebcamComponent.html":{}}}],["input",{"_index":562,"title":{},"body":{"components/GraphsComponent.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["input[type=password",{"_index":103,"title":{},"body":{"components/AdminComponent.html":{}}}],["input[type=text",{"_index":102,"title":{},"body":{"components/AdminComponent.html":{}}}],["inputs",{"_index":101,"title":{},"body":{"components/AdminComponent.html":{}}}],["interface",{"_index":207,"title":{"interfaces/AuthToken.html":{},"interfaces/BatteryData.html":{},"interfaces/ImageData.html":{},"interfaces/RaspberryData.html":{},"interfaces/SolarData.html":{},"interfaces/TemperatureData.html":{},"interfaces/VolumeData.html":{},"interfaces/WindData.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}},"body":{"injectables/AdminService.html":{},"injectables/AdminpanelDataService.html":{},"interfaces/AuthToken.html":{},"interfaces/BatteryData.html":{},"interfaces/ImageData.html":{},"injectables/ImageService.html":{},"interfaces/RaspberryData.html":{},"interfaces/SolarData.html":{},"interfaces/TemperatureData.html":{},"interfaces/VolumeData.html":{},"injectables/WeatherDataService.html":{},"interfaces/WindData.html":{},"coverage.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["interfaces",{"_index":493,"title":{},"body":{"interfaces/AuthToken.html":{},"interfaces/BatteryData.html":{},"interfaces/ImageData.html":{},"interfaces/RaspberryData.html":{},"interfaces/SolarData.html":{},"interfaces/TemperatureData.html":{},"interfaces/VolumeData.html":{},"interfaces/WindData.html":{},"overview.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["isauthenticated",{"_index":477,"title":{},"body":{"injectables/AuthService.html":{}}}],["items",{"_index":746,"title":{},"body":{"components/GraphsComponent.html":{}}}],["js",{"_index":991,"title":{},"body":{"dependencies.html":{}}}],["justify",{"_index":127,"title":{},"body":{"components/AdminComponent.html":{},"components/GraphsComponent.html":{}}}],["jwt",{"_index":482,"title":{},"body":{"injectables/AuthService.html":{},"dependencies.html":{}}}],["jwthelper",{"_index":476,"title":{},"body":{"injectables/AuthService.html":{}}}],["jwthelperservice",{"_index":480,"title":{},"body":{"injectables/AuthService.html":{}}}],["karma",{"_index":1041,"title":{},"body":{"index.html":{}}}],["konnte",{"_index":86,"title":{},"body":{"components/AdminComponent.html":{}}}],["label",{"_index":577,"title":{},"body":{"components/GraphsComponent.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["labels",{"_index":569,"title":{},"body":{"components/GraphsComponent.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["labelstring",{"_index":1120,"title":{},"body":{"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["ladestrom",{"_index":1072,"title":{},"body":{"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{},"miscellaneous/variables.html":{}}}],["lassen",{"_index":914,"title":{},"body":{"components/WebcamComponent.html":{}}}],["lastevent",{"_index":1075,"title":{},"body":{"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["lasthourswind",{"_index":506,"title":{},"body":{"components/GraphsComponent.html":{}}}],["lastleistung",{"_index":1106,"title":{},"body":{"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["lastmonthday",{"_index":1139,"title":{},"body":{"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["lastspannung",{"_index":1104,"title":{},"body":{"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["lazy",{"_index":819,"title":{},"body":{"classes/NgbdDropdownBasic.html":{},"components/WebcamComponent.html":{}}}],["left",{"_index":113,"title":{},"body":{"components/AdminComponent.html":{},"components/GraphsComponent.html":{},"components/WebcamComponent.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["legend",{"_index":160,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/GraphsComponent.html":{},"components/WebcamComponent.html":{},"overview.html":{}}}],["leistung",{"_index":1092,"title":{},"body":{"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["leistungsaufnahme",{"_index":1071,"title":{},"body":{"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{},"miscellaneous/variables.html":{}}}],["letzten",{"_index":704,"title":{},"body":{"components/GraphsComponent.html":{}}}],["lightbox",{"_index":788,"title":{},"body":{"classes/NgbdDropdownBasic.html":{},"components/WebcamComponent.html":{}}}],["lightboxmodule",{"_index":433,"title":{},"body":{"modules/AppModule.html":{}}}],["lightgray",{"_index":721,"title":{},"body":{"components/GraphsComponent.html":{}}}],["line",{"_index":1190,"title":{},"body":{"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["list",{"_index":379,"title":{},"body":{"modules/AppModule.html":{}}}],["loaddatepics",{"_index":843,"title":{},"body":{"classes/NgbdDropdownBasic.html":{},"components/WebcamComponent.html":{}}}],["loadingstrategy",{"_index":818,"title":{},"body":{"classes/NgbdDropdownBasic.html":{},"components/WebcamComponent.html":{}}}],["loadrecentpics",{"_index":825,"title":{},"body":{"classes/NgbdDropdownBasic.html":{},"components/WebcamComponent.html":{}}}],["loadtodaypics",{"_index":828,"title":{},"body":{"classes/NgbdDropdownBasic.html":{},"components/WebcamComponent.html":{}}}],["loadyesterdaypics",{"_index":834,"title":{},"body":{"classes/NgbdDropdownBasic.html":{},"components/WebcamComponent.html":{}}}],["localstorage.getitem('weathertoken",{"_index":483,"title":{},"body":{"injectables/AuthService.html":{}}}],["localstorage.removeitem(\"weathertoken",{"_index":92,"title":{},"body":{"components/AdminComponent.html":{}}}],["localstorage.setitem(\"weathertoken\",this.token[\"access",{"_index":91,"title":{},"body":{"components/AdminComponent.html":{}}}],["logdata",{"_index":960,"title":{},"body":{"coverage.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{},"miscellaneous/variables.html":{}}}],["login",{"_index":97,"title":{},"body":{"components/AdminComponent.html":{}}}],["loginerror",{"_index":26,"title":{},"body":{"components/AdminComponent.html":{}}}],["logtabledata",{"_index":1157,"title":{},"body":{"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["logtoken",{"_index":32,"title":{},"body":{"components/AdminComponent.html":{}}}],["logtoken(tok",{"_index":47,"title":{},"body":{"components/AdminComponent.html":{}}}],["m/s",{"_index":593,"title":{},"body":{"components/GraphsComponent.html":{}}}],["margin",{"_index":108,"title":{},"body":{"components/AdminComponent.html":{},"components/GraphsComponent.html":{},"components/WebcamComponent.html":{}}}],["margin:0.25em",{"_index":751,"title":{},"body":{"components/GraphsComponent.html":{}}}],["mat",{"_index":122,"title":{},"body":{"components/AdminComponent.html":{},"components/GraphsComponent.html":{},"components/WebcamComponent.html":{}}}],["matautocompletemodule",{"_index":354,"title":{},"body":{"modules/AppModule.html":{}}}],["matbadgemodule",{"_index":356,"title":{},"body":{"modules/AppModule.html":{}}}],["matbottomsheetmodule",{"_index":358,"title":{},"body":{"modules/AppModule.html":{}}}],["matbuttonmodule",{"_index":361,"title":{},"body":{"modules/AppModule.html":{}}}],["matbuttontogglechange",{"_index":1059,"title":{},"body":{"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["matbuttontogglemodule",{"_index":363,"title":{},"body":{"modules/AppModule.html":{}}}],["matcardmodule",{"_index":323,"title":{},"body":{"modules/AppModule.html":{}}}],["matcheckboxmodule",{"_index":365,"title":{},"body":{"modules/AppModule.html":{}}}],["matching",{"_index":178,"title":{},"body":{"components/AdminComponent.html":{},"injectables/AdminService.html":{},"injectables/AdminpanelDataService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuardService.html":{},"injectables/AuthService.html":{},"interfaces/AuthToken.html":{},"interfaces/BatteryData.html":{},"interfaces/ImageData.html":{},"injectables/ImageService.html":{},"classes/NgbdDropdownBasic.html":{},"interfaces/RaspberryData.html":{},"interfaces/SolarData.html":{},"interfaces/TemperatureData.html":{},"interfaces/VolumeData.html":{},"injectables/WeatherDataService.html":{},"interfaces/WindData.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"interfaces/raspyActions.html":{},"routes.html":{},"interfaces/sensorActions.html":{},"miscellaneous/variables.html":{}}}],["matchipsmodule",{"_index":367,"title":{},"body":{"modules/AppModule.html":{}}}],["matdatepickerinputevent",{"_index":534,"title":{},"body":{"components/GraphsComponent.html":{},"classes/NgbdDropdownBasic.html":{},"components/WebcamComponent.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["matdatepickermodule",{"_index":325,"title":{},"body":{"modules/AppModule.html":{}}}],["matdialog",{"_index":784,"title":{},"body":{"classes/NgbdDropdownBasic.html":{},"components/WebcamComponent.html":{}}}],["matdialogmodule",{"_index":371,"title":{},"body":{"modules/AppModule.html":{}}}],["matdividermodule",{"_index":373,"title":{},"body":{"modules/AppModule.html":{}}}],["matexpansionmodule",{"_index":375,"title":{},"body":{"modules/AppModule.html":{}}}],["matformfieldmodule",{"_index":327,"title":{},"body":{"modules/AppModule.html":{}}}],["matgridlistmodule",{"_index":377,"title":{},"body":{"modules/AppModule.html":{}}}],["maticonmodule",{"_index":380,"title":{},"body":{"modules/AppModule.html":{}}}],["matinputmodule",{"_index":382,"title":{},"body":{"modules/AppModule.html":{}}}],["matlistmodule",{"_index":384,"title":{},"body":{"modules/AppModule.html":{}}}],["matmenumodule",{"_index":386,"title":{},"body":{"modules/AppModule.html":{}}}],["matnativedatemodule",{"_index":388,"title":{},"body":{"modules/AppModule.html":{}}}],["matpaginatormodule",{"_index":391,"title":{},"body":{"modules/AppModule.html":{}}}],["matprogressbarmodule",{"_index":393,"title":{},"body":{"modules/AppModule.html":{}}}],["matprogressspinnermodule",{"_index":396,"title":{},"body":{"modules/AppModule.html":{}}}],["matradiobutton",{"_index":620,"title":{},"body":{"components/GraphsComponent.html":{}}}],["matradiochange",{"_index":546,"title":{},"body":{"components/GraphsComponent.html":{}}}],["matradiomodule",{"_index":398,"title":{},"body":{"modules/AppModule.html":{}}}],["matripplemodule",{"_index":389,"title":{},"body":{"modules/AppModule.html":{}}}],["matselectmodule",{"_index":400,"title":{},"body":{"modules/AppModule.html":{}}}],["matsidenavmodule",{"_index":402,"title":{},"body":{"modules/AppModule.html":{}}}],["matslidermodule",{"_index":404,"title":{},"body":{"modules/AppModule.html":{}}}],["matslidetogglechange",{"_index":549,"title":{},"body":{"components/GraphsComponent.html":{}}}],["matslidetogglemodule",{"_index":406,"title":{},"body":{"modules/AppModule.html":{}}}],["matsnackbarmodule",{"_index":408,"title":{},"body":{"modules/AppModule.html":{}}}],["matsortmodule",{"_index":410,"title":{},"body":{"modules/AppModule.html":{}}}],["matsteppermodule",{"_index":369,"title":{},"body":{"modules/AppModule.html":{}}}],["mattablemodule",{"_index":412,"title":{},"body":{"modules/AppModule.html":{}}}],["mattabsmodule",{"_index":414,"title":{},"body":{"modules/AppModule.html":{}}}],["mattoolbarmodule",{"_index":416,"title":{},"body":{"modules/AppModule.html":{}}}],["mattooltipmodule",{"_index":418,"title":{},"body":{"modules/AppModule.html":{}}}],["mattreemodule",{"_index":420,"title":{},"body":{"modules/AppModule.html":{}}}],["max",{"_index":157,"title":{},"body":{"components/AdminComponent.html":{}}}],["md",{"_index":322,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["mdbbootstrapmodule",{"_index":320,"title":{},"body":{"modules/AppModule.html":{}}}],["mdbbootstrapmodule.forroot",{"_index":437,"title":{},"body":{"modules/AppModule.html":{}}}],["mdbootstrap",{"_index":994,"title":{},"body":{"dependencies.html":{}}}],["measure_time",{"_index":278,"title":{},"body":{"injectables/AdminpanelDataService.html":{},"interfaces/BatteryData.html":{},"interfaces/RaspberryData.html":{},"interfaces/SolarData.html":{},"interfaces/TemperatureData.html":{},"interfaces/VolumeData.html":{},"injectables/WeatherDataService.html":{},"interfaces/WindData.html":{}}}],["measurement_time",{"_index":755,"title":{},"body":{"interfaces/ImageData.html":{},"injectables/ImageService.html":{}}}],["media",{"_index":155,"title":{},"body":{"components/AdminComponent.html":{}}}],["menu",{"_index":293,"title":{},"body":{"components/AppComponent.html":{}}}],["metadata",{"_index":13,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/GraphsComponent.html":{},"components/WebcamComponent.html":{}}}],["methods",{"_index":30,"title":{},"body":{"components/AdminComponent.html":{},"injectables/AdminService.html":{},"injectables/AdminpanelDataService.html":{},"classes/AppPage.html":{},"guards/AuthGuardService.html":{},"injectables/AuthService.html":{},"components/GraphsComponent.html":{},"injectables/ImageService.html":{},"injectables/WeatherDataService.html":{},"components/WebcamComponent.html":{}}}],["middle",{"_index":727,"title":{},"body":{"components/GraphsComponent.html":{}}}],["miscellaneous",{"_index":1225,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["module",{"_index":295,"title":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["modules",{"_index":297,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["modus",{"_index":709,"title":{},"body":{"components/GraphsComponent.html":{}}}],["month",{"_index":250,"title":{},"body":{"injectables/AdminpanelDataService.html":{},"interfaces/BatteryData.html":{},"interfaces/ImageData.html":{},"injectables/ImageService.html":{},"interfaces/RaspberryData.html":{},"interfaces/SolarData.html":{},"interfaces/TemperatureData.html":{},"interfaces/VolumeData.html":{},"injectables/WeatherDataService.html":{},"interfaces/WindData.html":{}}}],["month.length",{"_index":257,"title":{},"body":{"injectables/AdminpanelDataService.html":{},"interfaces/BatteryData.html":{},"interfaces/ImageData.html":{},"injectables/ImageService.html":{},"interfaces/RaspberryData.html":{},"interfaces/SolarData.html":{},"interfaces/TemperatureData.html":{},"interfaces/VolumeData.html":{},"injectables/WeatherDataService.html":{},"interfaces/WindData.html":{}}}],["more",{"_index":1045,"title":{},"body":{"index.html":{}}}],["name",{"_index":41,"title":{},"body":{"components/AdminComponent.html":{},"injectables/AdminService.html":{},"injectables/AdminpanelDataService.html":{},"components/AppComponent.html":{},"guards/AuthGuardService.html":{},"components/GraphsComponent.html":{},"injectables/ImageService.html":{},"injectables/WeatherDataService.html":{},"components/WebcamComponent.html":{},"index.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["navigate",{"_index":1017,"title":{},"body":{"index.html":{}}}],["navigateto",{"_index":443,"title":{},"body":{"classes/AppPage.html":{}}}],["new",{"_index":248,"title":{},"body":{"injectables/AdminpanelDataService.html":{},"injectables/AuthService.html":{},"interfaces/BatteryData.html":{},"components/GraphsComponent.html":{},"interfaces/ImageData.html":{},"injectables/ImageService.html":{},"classes/NgbdDropdownBasic.html":{},"interfaces/RaspberryData.html":{},"interfaces/SolarData.html":{},"interfaces/TemperatureData.html":{},"interfaces/VolumeData.html":{},"injectables/WeatherDataService.html":{},"components/WebcamComponent.html":{},"interfaces/WindData.html":{},"coverage.html":{},"index.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["ng",{"_index":1014,"title":{},"body":{"index.html":{}}}],["ngbddropdownbasic",{"_index":777,"title":{"classes/NgbdDropdownBasic.html":{}},"body":{"classes/NgbdDropdownBasic.html":{},"components/WebcamComponent.html":{},"coverage.html":{}}}],["ngmodule",{"_index":319,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["ngondestroy",{"_index":523,"title":{},"body":{"components/GraphsComponent.html":{},"classes/NgbdDropdownBasic.html":{},"components/WebcamComponent.html":{}}}],["ngoninit",{"_index":33,"title":{},"body":{"components/AdminComponent.html":{},"components/GraphsComponent.html":{},"classes/NgbdDropdownBasic.html":{},"components/WebcamComponent.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["ngx",{"_index":431,"title":{},"body":{"modules/AppModule.html":{},"classes/NgbdDropdownBasic.html":{},"components/WebcamComponent.html":{},"dependencies.html":{}}}],["nicht",{"_index":87,"title":{},"body":{"components/AdminComponent.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["none",{"_index":159,"title":{},"body":{"components/AdminComponent.html":{},"components/WebcamComponent.html":{}}}],["number",{"_index":227,"title":{},"body":{"injectables/AdminpanelDataService.html":{},"interfaces/BatteryData.html":{},"components/GraphsComponent.html":{},"interfaces/ImageData.html":{},"injectables/ImageService.html":{},"interfaces/RaspberryData.html":{},"interfaces/SolarData.html":{},"interfaces/TemperatureData.html":{},"interfaces/VolumeData.html":{},"injectables/WeatherDataService.html":{},"components/WebcamComponent.html":{},"interfaces/WindData.html":{}}}],["ob",{"_index":1079,"title":{},"body":{"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["object",{"_index":563,"title":{},"body":{"components/GraphsComponent.html":{},"miscellaneous/variables.html":{}}}],["observable",{"_index":780,"title":{},"body":{"classes/NgbdDropdownBasic.html":{},"components/WebcamComponent.html":{}}}],["oder",{"_index":1082,"title":{},"body":{"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["ok",{"_index":1066,"title":{},"body":{"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{},"miscellaneous/variables.html":{}}}],["onbtnchange",{"_index":524,"title":{},"body":{"components/GraphsComponent.html":{}}}],["onbtnchange(event",{"_index":545,"title":{},"body":{"components/GraphsComponent.html":{}}}],["onchange",{"_index":525,"title":{},"body":{"components/GraphsComponent.html":{}}}],["onchange(event",{"_index":548,"title":{},"body":{"components/GraphsComponent.html":{}}}],["onchanges,viewchild",{"_index":618,"title":{},"body":{"components/GraphsComponent.html":{}}}],["ondestroy",{"_index":495,"title":{},"body":{"components/GraphsComponent.html":{}}}],["onimageload",{"_index":526,"title":{},"body":{"components/GraphsComponent.html":{}}}],["onimageload(i",{"_index":551,"title":{},"body":{"components/GraphsComponent.html":{}}}],["oninit",{"_index":12,"title":{},"body":{"components/AdminComponent.html":{},"components/GraphsComponent.html":{},"classes/NgbdDropdownBasic.html":{},"components/WebcamComponent.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["onresize",{"_index":527,"title":{},"body":{"components/GraphsComponent.html":{}}}],["onresize(event",{"_index":553,"title":{},"body":{"components/GraphsComponent.html":{}}}],["openlightbox",{"_index":880,"title":{},"body":{"components/WebcamComponent.html":{}}}],["openlightbox(index",{"_index":889,"title":{},"body":{"components/WebcamComponent.html":{}}}],["openlightbox(index:number,galleryid:string",{"_index":840,"title":{},"body":{"classes/NgbdDropdownBasic.html":{},"components/WebcamComponent.html":{}}}],["optional",{"_index":43,"title":{},"body":{"components/AdminComponent.html":{},"injectables/AdminService.html":{},"injectables/AdminpanelDataService.html":{},"guards/AuthGuardService.html":{},"components/GraphsComponent.html":{},"injectables/ImageService.html":{},"injectables/WeatherDataService.html":{},"components/WebcamComponent.html":{}}}],["options",{"_index":1191,"title":{},"body":{"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["options:this.chartoptions",{"_index":654,"title":{},"body":{"components/GraphsComponent.html":{}}}],["out",{"_index":313,"title":{},"body":{"modules/AppModule.html":{},"index.html":{},"overview.html":{}}}],["overview",{"_index":1053,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["p0sktxgnn6dxz5rw3prvzz59pk6ei6oq",{"_index":489,"title":{},"body":{"injectables/AuthService.html":{}}}],["package",{"_index":974,"title":{"dependencies.html":{}},"body":{}}],["padding",{"_index":105,"title":{},"body":{"components/AdminComponent.html":{}}}],["padding:0.5em",{"_index":736,"title":{},"body":{"components/GraphsComponent.html":{}}}],["panel",{"_index":942,"title":{},"body":{"components/WebcamComponent.html":{}}}],["panelopenstate",{"_index":803,"title":{},"body":{"classes/NgbdDropdownBasic.html":{},"components/WebcamComponent.html":{}}}],["parameters",{"_index":39,"title":{},"body":{"components/AdminComponent.html":{},"injectables/AdminService.html":{},"injectables/AdminpanelDataService.html":{},"guards/AuthGuardService.html":{},"components/GraphsComponent.html":{},"injectables/ImageService.html":{},"injectables/WeatherDataService.html":{},"components/WebcamComponent.html":{}}}],["password",{"_index":27,"title":{},"body":{"components/AdminComponent.html":{}}}],["password\":pwd",{"_index":206,"title":{},"body":{"injectables/AdminService.html":{},"interfaces/AuthToken.html":{}}}],["passwort",{"_index":95,"title":{},"body":{"components/AdminComponent.html":{}}}],["path",{"_index":458,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["photovoltaik",{"_index":1070,"title":{},"body":{"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{},"miscellaneous/variables.html":{}}}],["pick",{"_index":715,"title":{},"body":{"components/GraphsComponent.html":{}}}],["pipe(takeuntil(this.destroy",{"_index":811,"title":{},"body":{"classes/NgbdDropdownBasic.html":{},"components/WebcamComponent.html":{}}}],["pointer",{"_index":935,"title":{},"body":{"components/WebcamComponent.html":{}}}],["portalmodule",{"_index":344,"title":{},"body":{"modules/AppModule.html":{}}}],["position",{"_index":730,"title":{},"body":{"components/GraphsComponent.html":{},"components/WebcamComponent.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["private",{"_index":72,"title":{},"body":{"components/AdminComponent.html":{},"injectables/AdminService.html":{},"injectables/AdminpanelDataService.html":{},"interfaces/AuthToken.html":{},"interfaces/BatteryData.html":{},"interfaces/ImageData.html":{},"injectables/ImageService.html":{},"interfaces/RaspberryData.html":{},"interfaces/SolarData.html":{},"interfaces/TemperatureData.html":{},"interfaces/VolumeData.html":{},"injectables/WeatherDataService.html":{},"interfaces/WindData.html":{}}}],["prod",{"_index":1032,"title":{},"body":{"index.html":{}}}],["production",{"_index":1034,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["project",{"_index":1006,"title":{},"body":{"index.html":{}}}],["promise",{"_index":448,"title":{},"body":{"classes/AppPage.html":{}}}],["properties",{"_index":22,"title":{},"body":{"components/AdminComponent.html":{},"injectables/AdminService.html":{},"injectables/AdminpanelDataService.html":{},"components/AppComponent.html":{},"guards/AuthGuardService.html":{},"injectables/AuthService.html":{},"interfaces/AuthToken.html":{},"interfaces/BatteryData.html":{},"components/GraphsComponent.html":{},"interfaces/ImageData.html":{},"injectables/ImageService.html":{},"interfaces/RaspberryData.html":{},"interfaces/SolarData.html":{},"interfaces/TemperatureData.html":{},"interfaces/VolumeData.html":{},"injectables/WeatherDataService.html":{},"components/WebcamComponent.html":{},"interfaces/WindData.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["protractor",{"_index":446,"title":{},"body":{"classes/AppPage.html":{},"index.html":{}}}],["providedin",{"_index":200,"title":{},"body":{"injectables/AdminService.html":{},"injectables/AdminpanelDataService.html":{},"injectables/AuthService.html":{},"interfaces/AuthToken.html":{},"interfaces/BatteryData.html":{},"interfaces/ImageData.html":{},"injectables/ImageService.html":{},"interfaces/RaspberryData.html":{},"interfaces/SolarData.html":{},"interfaces/TemperatureData.html":{},"interfaces/VolumeData.html":{},"injectables/WeatherDataService.html":{},"interfaces/WindData.html":{}}}],["providers",{"_index":301,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"overview.html":{}}}],["providetoken",{"_index":185,"title":{},"body":{"injectables/AdminService.html":{}}}],["providetoken(user",{"_index":189,"title":{},"body":{"injectables/AdminService.html":{},"interfaces/AuthToken.html":{}}}],["public",{"_index":465,"title":{},"body":{"guards/AuthGuardService.html":{},"injectables/AuthService.html":{},"classes/NgbdDropdownBasic.html":{},"components/WebcamComponent.html":{}}}],["pwd",{"_index":190,"title":{},"body":{"injectables/AdminService.html":{},"interfaces/AuthToken.html":{}}}],["radio",{"_index":735,"title":{},"body":{"components/GraphsComponent.html":{}}}],["raspberry",{"_index":1068,"title":{},"body":{"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{},"miscellaneous/variables.html":{}}}],["raspberrychart",{"_index":1171,"title":{},"body":{"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["raspberrydata",{"_index":281,"title":{"interfaces/RaspberryData.html":{}},"body":{"injectables/AdminpanelDataService.html":{},"interfaces/BatteryData.html":{},"interfaces/RaspberryData.html":{},"interfaces/SolarData.html":{},"interfaces/VolumeData.html":{},"coverage.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["raspi",{"_index":1103,"title":{},"body":{"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["raspyactions",{"_index":954,"title":{"interfaces/raspyActions.html":{}},"body":{"coverage.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{},"miscellaneous/variables.html":{}}}],["readme",{"_index":1047,"title":{},"body":{"index.html":{}}}],["recentdata",{"_index":737,"title":{},"body":{"components/GraphsComponent.html":{}}}],["recentimages",{"_index":797,"title":{},"body":{"classes/NgbdDropdownBasic.html":{},"components/WebcamComponent.html":{}}}],["recentpics",{"_index":796,"title":{},"body":{"classes/NgbdDropdownBasic.html":{},"components/WebcamComponent.html":{}}}],["recenttemp",{"_index":507,"title":{},"body":{"components/GraphsComponent.html":{}}}],["recenttemp}}°c",{"_index":699,"title":{},"body":{"components/GraphsComponent.html":{}}}],["recentwinddir",{"_index":508,"title":{},"body":{"components/GraphsComponent.html":{}}}],["recentwindspeed",{"_index":509,"title":{},"body":{"components/GraphsComponent.html":{}}}],["red",{"_index":134,"title":{},"body":{"components/AdminComponent.html":{}}}],["refresh",{"_index":208,"title":{},"body":{"injectables/AdminService.html":{},"interfaces/AuthToken.html":{}}}],["relative",{"_index":928,"title":{},"body":{"components/WebcamComponent.html":{}}}],["reload",{"_index":1020,"title":{},"body":{"index.html":{}}}],["require",{"_index":971,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["require.context",{"_index":1231,"title":{},"body":{"miscellaneous/variables.html":{}}}],["reset",{"_index":312,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["resizing",{"_index":694,"title":{},"body":{"components/GraphsComponent.html":{}}}],["responsiveanimationduration",{"_index":1118,"title":{},"body":{"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["result",{"_index":177,"title":{},"body":{"components/AdminComponent.html":{},"injectables/AdminService.html":{},"injectables/AdminpanelDataService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuardService.html":{},"injectables/AuthService.html":{},"interfaces/AuthToken.html":{},"interfaces/BatteryData.html":{},"interfaces/ImageData.html":{},"injectables/ImageService.html":{},"classes/NgbdDropdownBasic.html":{},"interfaces/RaspberryData.html":{},"interfaces/SolarData.html":{},"interfaces/TemperatureData.html":{},"interfaces/VolumeData.html":{},"injectables/WeatherDataService.html":{},"interfaces/WindData.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"interfaces/raspyActions.html":{},"routes.html":{},"interfaces/sensorActions.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":179,"title":{},"body":{"components/AdminComponent.html":{},"injectables/AdminService.html":{},"injectables/AdminpanelDataService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuardService.html":{},"injectables/AuthService.html":{},"interfaces/AuthToken.html":{},"interfaces/BatteryData.html":{},"interfaces/ImageData.html":{},"injectables/ImageService.html":{},"classes/NgbdDropdownBasic.html":{},"interfaces/RaspberryData.html":{},"interfaces/SolarData.html":{},"interfaces/TemperatureData.html":{},"interfaces/VolumeData.html":{},"injectables/WeatherDataService.html":{},"interfaces/WindData.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"interfaces/raspyActions.html":{},"routes.html":{},"interfaces/sensorActions.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":203,"title":{},"body":{"injectables/AdminService.html":{},"injectables/AdminpanelDataService.html":{},"classes/AppPage.html":{},"guards/AuthGuardService.html":{},"injectables/AuthService.html":{},"interfaces/AuthToken.html":{},"interfaces/BatteryData.html":{},"components/GraphsComponent.html":{},"interfaces/ImageData.html":{},"injectables/ImageService.html":{},"classes/NgbdDropdownBasic.html":{},"interfaces/RaspberryData.html":{},"interfaces/SolarData.html":{},"interfaces/TemperatureData.html":{},"interfaces/VolumeData.html":{},"injectables/WeatherDataService.html":{},"components/WebcamComponent.html":{},"interfaces/WindData.html":{}}}],["returns",{"_index":45,"title":{},"body":{"components/AdminComponent.html":{},"injectables/AdminService.html":{},"injectables/AdminpanelDataService.html":{},"classes/AppPage.html":{},"guards/AuthGuardService.html":{},"injectables/AuthService.html":{},"components/GraphsComponent.html":{},"injectables/ImageService.html":{},"injectables/WeatherDataService.html":{},"components/WebcamComponent.html":{}}}],["rgba(128",{"_index":595,"title":{},"body":{"components/GraphsComponent.html":{}}}],["rgba(255",{"_index":583,"title":{},"body":{"components/GraphsComponent.html":{}}}],["right",{"_index":149,"title":{},"body":{"components/AdminComponent.html":{},"components/GraphsComponent.html":{},"components/WebcamComponent.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["right:0.25em",{"_index":748,"title":{},"body":{"components/GraphsComponent.html":{}}}],["root",{"_index":201,"title":{},"body":{"injectables/AdminService.html":{},"injectables/AdminpanelDataService.html":{},"components/AppComponent.html":{},"classes/AppPage.html":{},"guards/AuthGuardService.html":{},"injectables/AuthService.html":{},"interfaces/AuthToken.html":{},"interfaces/BatteryData.html":{},"interfaces/ImageData.html":{},"injectables/ImageService.html":{},"interfaces/RaspberryData.html":{},"interfaces/SolarData.html":{},"interfaces/TemperatureData.html":{},"interfaces/VolumeData.html":{},"injectables/WeatherDataService.html":{},"interfaces/WindData.html":{}}}],["root'},{'name",{"_index":170,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/GraphsComponent.html":{},"components/WebcamComponent.html":{}}}],["rotate",{"_index":666,"title":{},"body":{"components/GraphsComponent.html":{}}}],["rotatedircardarrow",{"_index":528,"title":{},"body":{"components/GraphsComponent.html":{}}}],["rotatedircardarrow(angle",{"_index":555,"title":{},"body":{"components/GraphsComponent.html":{}}}],["router",{"_index":36,"title":{},"body":{"components/AdminComponent.html":{},"guards/AuthGuardService.html":{}}}],["routermodule",{"_index":454,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routermodule.forroot(routes",{"_index":460,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routes",{"_index":453,"title":{"routes.html":{}},"body":{"modules/AppRoutingModule.html":{},"overview.html":{},"routes.html":{}}}],["routing.module",{"_index":330,"title":{},"body":{"modules/AppModule.html":{}}}],["routing.module.ts",{"_index":452,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["run",{"_index":1013,"title":{},"body":{"index.html":{}}}],["running",{"_index":1035,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":69,"title":{},"body":{"components/AdminComponent.html":{},"components/GraphsComponent.html":{},"classes/NgbdDropdownBasic.html":{},"components/WebcamComponent.html":{},"dependencies.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["rxjs/operators",{"_index":199,"title":{},"body":{"injectables/AdminService.html":{},"interfaces/AuthToken.html":{},"classes/NgbdDropdownBasic.html":{},"components/WebcamComponent.html":{}}}],["scaffolding",{"_index":1023,"title":{},"body":{"index.html":{}}}],["scalelabel",{"_index":1119,"title":{},"body":{"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["scales",{"_index":564,"title":{},"body":{"components/GraphsComponent.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["screen",{"_index":156,"title":{},"body":{"components/AdminComponent.html":{}}}],["screens",{"_index":154,"title":{},"body":{"components/AdminComponent.html":{}}}],["scrollingmodule",{"_index":346,"title":{},"body":{"modules/AppModule.html":{}}}],["se",{"_index":288,"title":{},"body":{"components/AppComponent.html":{}}}],["selector",{"_index":14,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/GraphsComponent.html":{},"classes/NgbdDropdownBasic.html":{},"components/WebcamComponent.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["selectorcard",{"_index":716,"title":{},"body":{"components/GraphsComponent.html":{}}}],["sensor",{"_index":1063,"title":{},"body":{"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{},"miscellaneous/variables.html":{}}}],["sensoractions",{"_index":956,"title":{"interfaces/sensorActions.html":{}},"body":{"coverage.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{},"miscellaneous/variables.html":{}}}],["sensordata",{"_index":961,"title":{},"body":{"coverage.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{},"miscellaneous/variables.html":{}}}],["sensortabledata",{"_index":1159,"title":{},"body":{"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["serve",{"_index":1015,"title":{},"body":{"index.html":{}}}],["server",{"_index":1012,"title":{},"body":{"index.html":{}}}],["sheet",{"_index":360,"title":{},"body":{"modules/AppModule.html":{}}}],["sich",{"_index":916,"title":{},"body":{"components/WebcamComponent.html":{}}}],["sidenav",{"_index":936,"title":{},"body":{"components/WebcamComponent.html":{}}}],["sie",{"_index":915,"title":{},"body":{"components/WebcamComponent.html":{}}}],["simplemodelabel",{"_index":734,"title":{},"body":{"components/GraphsComponent.html":{}}}],["sind",{"_index":906,"title":{},"body":{"components/WebcamComponent.html":{}}}],["size",{"_index":733,"title":{},"body":{"components/GraphsComponent.html":{},"components/WebcamComponent.html":{}}}],["sizing",{"_index":121,"title":{},"body":{"components/AdminComponent.html":{}}}],["small",{"_index":153,"title":{},"body":{"components/AdminComponent.html":{}}}],["solar",{"_index":1128,"title":{},"body":{"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["solarcell/aggregate/?start='+this.formatdate(today",{"_index":259,"title":{},"body":{"injectables/AdminpanelDataService.html":{},"interfaces/BatteryData.html":{},"interfaces/RaspberryData.html":{},"interfaces/SolarData.html":{},"interfaces/VolumeData.html":{}}}],["solarchart",{"_index":1160,"title":{},"body":{"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["solardata",{"_index":274,"title":{"interfaces/SolarData.html":{}},"body":{"injectables/AdminpanelDataService.html":{},"interfaces/BatteryData.html":{},"interfaces/RaspberryData.html":{},"interfaces/SolarData.html":{},"interfaces/VolumeData.html":{},"coverage.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["solarzelle",{"_index":1086,"title":{},"body":{"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["solid",{"_index":118,"title":{},"body":{"components/AdminComponent.html":{},"components/GraphsComponent.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AdminComponent.html":{},"injectables/AdminService.html":{},"injectables/AdminpanelDataService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuardService.html":{},"injectables/AuthService.html":{},"interfaces/AuthToken.html":{},"interfaces/BatteryData.html":{},"components/GraphsComponent.html":{},"interfaces/ImageData.html":{},"injectables/ImageService.html":{},"classes/NgbdDropdownBasic.html":{},"interfaces/RaspberryData.html":{},"interfaces/SolarData.html":{},"interfaces/TemperatureData.html":{},"interfaces/VolumeData.html":{},"injectables/WeatherDataService.html":{},"components/WebcamComponent.html":{},"interfaces/WindData.html":{},"index.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["spacer",{"_index":294,"title":{},"body":{"components/AppComponent.html":{}}}],["span",{"_index":152,"title":{},"body":{"components/AdminComponent.html":{}}}],["span')).gettext",{"_index":450,"title":{},"body":{"classes/AppPage.html":{}}}],["span.psw",{"_index":147,"title":{},"body":{"components/AdminComponent.html":{}}}],["spannung",{"_index":1067,"title":{},"body":{"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{},"miscellaneous/variables.html":{}}}],["spec\\.ts",{"_index":1232,"title":{},"body":{"miscellaneous/variables.html":{}}}],["speed",{"_index":865,"title":{},"body":{"interfaces/TemperatureData.html":{},"injectables/WeatherDataService.html":{},"interfaces/WindData.html":{}}}],["spinner",{"_index":397,"title":{},"body":{"modules/AppModule.html":{}}}],["src",{"_index":696,"title":{},"body":{"components/GraphsComponent.html":{}}}],["src/.../adminpanel.component.ts",{"_index":1227,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.prod.ts",{"_index":1229,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.ts",{"_index":1230,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../test.ts",{"_index":1228,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/admin.service.ts",{"_index":182,"title":{},"body":{"injectables/AdminService.html":{},"interfaces/AuthToken.html":{},"coverage.html":{}}}],["src/app/admin.service.ts:10",{"_index":194,"title":{},"body":{"injectables/AdminService.html":{}}}],["src/app/admin.service.ts:11",{"_index":195,"title":{},"body":{"injectables/AdminService.html":{}}}],["src/app/admin.service.ts:12",{"_index":188,"title":{},"body":{"injectables/AdminService.html":{}}}],["src/app/admin.service.ts:18",{"_index":191,"title":{},"body":{"injectables/AdminService.html":{}}}],["src/app/admin/admin.component.ts",{"_index":10,"title":{},"body":{"components/AdminComponent.html":{},"coverage.html":{}}}],["src/app/admin/admin.component.ts:15",{"_index":51,"title":{},"body":{"components/AdminComponent.html":{}}}],["src/app/admin/admin.component.ts:16",{"_index":53,"title":{},"body":{"components/AdminComponent.html":{}}}],["src/app/admin/admin.component.ts:17",{"_index":62,"title":{},"body":{"components/AdminComponent.html":{}}}],["src/app/admin/admin.component.ts:18",{"_index":63,"title":{},"body":{"components/AdminComponent.html":{}}}],["src/app/admin/admin.component.ts:19",{"_index":60,"title":{},"body":{"components/AdminComponent.html":{}}}],["src/app/admin/admin.component.ts:20",{"_index":58,"title":{},"body":{"components/AdminComponent.html":{}}}],["src/app/admin/admin.component.ts:21",{"_index":38,"title":{},"body":{"components/AdminComponent.html":{}}}],["src/app/admin/admin.component.ts:27",{"_index":50,"title":{},"body":{"components/AdminComponent.html":{}}}],["src/app/admin/admin.component.ts:31",{"_index":44,"title":{},"body":{"components/AdminComponent.html":{}}}],["src/app/admin/admin.component.ts:45",{"_index":48,"title":{},"body":{"components/AdminComponent.html":{}}}],["src/app/adminpanel",{"_index":211,"title":{},"body":{"injectables/AdminpanelDataService.html":{},"interfaces/BatteryData.html":{},"interfaces/RaspberryData.html":{},"interfaces/SolarData.html":{},"interfaces/VolumeData.html":{},"coverage.html":{}}}],["src/app/adminpanel/adminpanel.component.ts",{"_index":952,"title":{},"body":{"coverage.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{},"miscellaneous/variables.html":{}}}],["src/app/app",{"_index":451,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/app.component.ts",{"_index":284,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:11",{"_index":290,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.ts",{"_index":314,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/auth",{"_index":463,"title":{},"body":{"guards/AuthGuardService.html":{},"coverage.html":{}}}],["src/app/auth.service.ts",{"_index":475,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/app/auth.service.ts:11",{"_index":479,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth.service.ts:8",{"_index":478,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/graphs/graphs.component.ts",{"_index":494,"title":{},"body":{"components/GraphsComponent.html":{},"coverage.html":{}}}],["src/app/graphs/graphs.component.ts:101",{"_index":543,"title":{},"body":{"components/GraphsComponent.html":{}}}],["src/app/graphs/graphs.component.ts:107",{"_index":542,"title":{},"body":{"components/GraphsComponent.html":{}}}],["src/app/graphs/graphs.component.ts:129",{"_index":561,"title":{},"body":{"components/GraphsComponent.html":{}}}],["src/app/graphs/graphs.component.ts:139",{"_index":540,"title":{},"body":{"components/GraphsComponent.html":{}}}],["src/app/graphs/graphs.component.ts:154",{"_index":541,"title":{},"body":{"components/GraphsComponent.html":{}}}],["src/app/graphs/graphs.component.ts:166",{"_index":552,"title":{},"body":{"components/GraphsComponent.html":{}}}],["src/app/graphs/graphs.component.ts:173",{"_index":556,"title":{},"body":{"components/GraphsComponent.html":{}}}],["src/app/graphs/graphs.component.ts:177",{"_index":559,"title":{},"body":{"components/GraphsComponent.html":{}}}],["src/app/graphs/graphs.component.ts:183",{"_index":550,"title":{},"body":{"components/GraphsComponent.html":{}}}],["src/app/graphs/graphs.component.ts:188",{"_index":547,"title":{},"body":{"components/GraphsComponent.html":{}}}],["src/app/graphs/graphs.component.ts:194",{"_index":538,"title":{},"body":{"components/GraphsComponent.html":{}}}],["src/app/graphs/graphs.component.ts:20",{"_index":614,"title":{},"body":{"components/GraphsComponent.html":{}}}],["src/app/graphs/graphs.component.ts:200",{"_index":535,"title":{},"body":{"components/GraphsComponent.html":{}}}],["src/app/graphs/graphs.component.ts:206",{"_index":539,"title":{},"body":{"components/GraphsComponent.html":{}}}],["src/app/graphs/graphs.component.ts:21",{"_index":608,"title":{},"body":{"components/GraphsComponent.html":{}}}],["src/app/graphs/graphs.component.ts:22",{"_index":617,"title":{},"body":{"components/GraphsComponent.html":{}}}],["src/app/graphs/graphs.component.ts:227",{"_index":554,"title":{},"body":{"components/GraphsComponent.html":{}}}],["src/app/graphs/graphs.component.ts:23",{"_index":601,"title":{},"body":{"components/GraphsComponent.html":{}}}],["src/app/graphs/graphs.component.ts:24",{"_index":600,"title":{},"body":{"components/GraphsComponent.html":{}}}],["src/app/graphs/graphs.component.ts:27",{"_index":615,"title":{},"body":{"components/GraphsComponent.html":{}}}],["src/app/graphs/graphs.component.ts:30",{"_index":598,"title":{},"body":{"components/GraphsComponent.html":{}}}],["src/app/graphs/graphs.component.ts:31",{"_index":613,"title":{},"body":{"components/GraphsComponent.html":{}}}],["src/app/graphs/graphs.component.ts:32",{"_index":605,"title":{},"body":{"components/GraphsComponent.html":{}}}],["src/app/graphs/graphs.component.ts:33",{"_index":599,"title":{},"body":{"components/GraphsComponent.html":{}}}],["src/app/graphs/graphs.component.ts:36",{"_index":602,"title":{},"body":{"components/GraphsComponent.html":{}}}],["src/app/graphs/graphs.component.ts:37",{"_index":604,"title":{},"body":{"components/GraphsComponent.html":{}}}],["src/app/graphs/graphs.component.ts:38",{"_index":603,"title":{},"body":{"components/GraphsComponent.html":{}}}],["src/app/graphs/graphs.component.ts:40",{"_index":607,"title":{},"body":{"components/GraphsComponent.html":{}}}],["src/app/graphs/graphs.component.ts:41",{"_index":616,"title":{},"body":{"components/GraphsComponent.html":{}}}],["src/app/graphs/graphs.component.ts:42",{"_index":589,"title":{},"body":{"components/GraphsComponent.html":{}}}],["src/app/graphs/graphs.component.ts:56",{"_index":597,"title":{},"body":{"components/GraphsComponent.html":{}}}],["src/app/graphs/graphs.component.ts:71",{"_index":568,"title":{},"body":{"components/GraphsComponent.html":{}}}],["src/app/graphs/graphs.component.ts:81",{"_index":532,"title":{},"body":{"components/GraphsComponent.html":{}}}],["src/app/graphs/graphs.component.ts:89",{"_index":544,"title":{},"body":{"components/GraphsComponent.html":{}}}],["src/app/image",{"_index":754,"title":{},"body":{"interfaces/ImageData.html":{},"injectables/ImageService.html":{},"coverage.html":{}}}],["src/app/weather",{"_index":854,"title":{},"body":{"interfaces/TemperatureData.html":{},"injectables/WeatherDataService.html":{},"interfaces/WindData.html":{},"coverage.html":{}}}],["src/app/webcam/webcam.component.ts",{"_index":778,"title":{},"body":{"classes/NgbdDropdownBasic.html":{},"components/WebcamComponent.html":{},"coverage.html":{}}}],["src/app/webcam/webcam.component.ts:100",{"_index":890,"title":{},"body":{"components/WebcamComponent.html":{}}}],["src/app/webcam/webcam.component.ts:106",{"_index":883,"title":{},"body":{"components/WebcamComponent.html":{}}}],["src/app/webcam/webcam.component.ts:120",{"_index":882,"title":{},"body":{"components/WebcamComponent.html":{}}}],["src/app/webcam/webcam.component.ts:128",{"_index":887,"title":{},"body":{"components/WebcamComponent.html":{}}}],["src/app/webcam/webcam.component.ts:22",{"_index":900,"title":{},"body":{"components/WebcamComponent.html":{}}}],["src/app/webcam/webcam.component.ts:23",{"_index":899,"title":{},"body":{"components/WebcamComponent.html":{}}}],["src/app/webcam/webcam.component.ts:25",{"_index":897,"title":{},"body":{"components/WebcamComponent.html":{}}}],["src/app/webcam/webcam.component.ts:26",{"_index":896,"title":{},"body":{"components/WebcamComponent.html":{}}}],["src/app/webcam/webcam.component.ts:28",{"_index":902,"title":{},"body":{"components/WebcamComponent.html":{}}}],["src/app/webcam/webcam.component.ts:29",{"_index":901,"title":{},"body":{"components/WebcamComponent.html":{}}}],["src/app/webcam/webcam.component.ts:31",{"_index":893,"title":{},"body":{"components/WebcamComponent.html":{}}}],["src/app/webcam/webcam.component.ts:32",{"_index":892,"title":{},"body":{"components/WebcamComponent.html":{}}}],["src/app/webcam/webcam.component.ts:35",{"_index":895,"title":{},"body":{"components/WebcamComponent.html":{}}}],["src/app/webcam/webcam.component.ts:37",{"_index":894,"title":{},"body":{"components/WebcamComponent.html":{}}}],["src/app/webcam/webcam.component.ts:39",{"_index":898,"title":{},"body":{"components/WebcamComponent.html":{}}}],["src/app/webcam/webcam.component.ts:40",{"_index":881,"title":{},"body":{"components/WebcamComponent.html":{}}}],["src/app/webcam/webcam.component.ts:43",{"_index":891,"title":{},"body":{"components/WebcamComponent.html":{}}}],["src/app/webcam/webcam.component.ts:47",{"_index":888,"title":{},"body":{"components/WebcamComponent.html":{}}}],["src/app/webcam/webcam.component.ts:67",{"_index":884,"title":{},"body":{"components/WebcamComponent.html":{}}}],["src/app/webcam/webcam.component.ts:73",{"_index":885,"title":{},"body":{"components/WebcamComponent.html":{}}}],["src/app/webcam/webcam.component.ts:87",{"_index":886,"title":{},"body":{"components/WebcamComponent.html":{}}}],["src/environments/environment.prod.ts",{"_index":966,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.ts",{"_index":968,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/test.ts",{"_index":969,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["start",{"_index":233,"title":{},"body":{"injectables/AdminpanelDataService.html":{},"injectables/WeatherDataService.html":{}}}],["startdate",{"_index":684,"title":{},"body":{"components/GraphsComponent.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["startdateevents",{"_index":510,"title":{},"body":{"components/GraphsComponent.html":{},"classes/NgbdDropdownBasic.html":{},"components/WebcamComponent.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["startdatum",{"_index":710,"title":{},"body":{"components/GraphsComponent.html":{}}}],["started",{"_index":1003,"title":{"index.html":{}},"body":{}}],["startstring",{"_index":682,"title":{},"body":{"components/GraphsComponent.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["statements",{"_index":946,"title":{},"body":{"coverage.html":{}}}],["status",{"_index":1064,"title":{},"body":{"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{},"miscellaneous/variables.html":{}}}],["stored",{"_index":1029,"title":{},"body":{"index.html":{}}}],["string",{"_index":59,"title":{},"body":{"components/AdminComponent.html":{},"injectables/AdminService.html":{},"injectables/AdminpanelDataService.html":{},"components/AppComponent.html":{},"interfaces/AuthToken.html":{},"components/GraphsComponent.html":{},"interfaces/ImageData.html":{},"injectables/ImageService.html":{},"injectables/WeatherDataService.html":{},"components/WebcamComponent.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["strom",{"_index":1069,"title":{},"body":{"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{},"miscellaneous/variables.html":{}}}],["stromstärke",{"_index":1091,"title":{},"body":{"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["stunden",{"_index":705,"title":{},"body":{"components/GraphsComponent.html":{}}}],["style",{"_index":131,"title":{},"body":{"components/AdminComponent.html":{}}}],["styles",{"_index":6,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/GraphsComponent.html":{},"components/WebcamComponent.html":{}}}],["styleurls",{"_index":17,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/GraphsComponent.html":{},"classes/NgbdDropdownBasic.html":{},"components/WebcamComponent.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["subject",{"_index":781,"title":{},"body":{"classes/NgbdDropdownBasic.html":{},"components/WebcamComponent.html":{}}}],["subscribe((data",{"_index":812,"title":{},"body":{"classes/NgbdDropdownBasic.html":{},"components/WebcamComponent.html":{}}}],["subscription",{"_index":52,"title":{},"body":{"components/AdminComponent.html":{},"components/GraphsComponent.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["summe",{"_index":1212,"title":{},"body":{"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["support",{"_index":1048,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":1049,"title":{},"body":{"modules.html":{}}}],["tab",{"_index":937,"title":{},"body":{"components/WebcamComponent.html":{}}}],["table",{"_index":973,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":972,"title":{},"body":{"coverage.html":{}}}],["tag",{"_index":919,"title":{},"body":{"components/WebcamComponent.html":{}}}],["tage",{"_index":714,"title":{},"body":{"components/GraphsComponent.html":{}}}],["takeuntil",{"_index":782,"title":{},"body":{"classes/NgbdDropdownBasic.html":{},"components/WebcamComponent.html":{}}}],["tby",{"_index":490,"title":{},"body":{"injectables/AuthService.html":{}}}],["tempcanvas=document.getelementbyid('temp",{"_index":650,"title":{},"body":{"components/GraphsComponent.html":{}}}],["tempchart",{"_index":511,"title":{},"body":{"components/GraphsComponent.html":{}}}],["tempchart:chart",{"_index":621,"title":{},"body":{"components/GraphsComponent.html":{}}}],["temperatur",{"_index":578,"title":{},"body":{"components/GraphsComponent.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{},"miscellaneous/variables.html":{}}}],["temperaturedata",{"_index":512,"title":{"interfaces/TemperatureData.html":{}},"body":{"components/GraphsComponent.html":{},"interfaces/TemperatureData.html":{},"injectables/WeatherDataService.html":{},"interfaces/WindData.html":{},"coverage.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/GraphsComponent.html":{},"components/WebcamComponent.html":{}}}],["templateurl",{"_index":19,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/GraphsComponent.html":{},"classes/NgbdDropdownBasic.html":{},"components/WebcamComponent.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["temps/aggregate/?start='+this.formatdate(today",{"_index":856,"title":{},"body":{"interfaces/TemperatureData.html":{},"injectables/WeatherDataService.html":{},"interfaces/WindData.html":{}}}],["test",{"_index":1038,"title":{},"body":{"index.html":{}}}],["tests",{"_index":1037,"title":{},"body":{"index.html":{}}}],["text",{"_index":111,"title":{},"body":{"components/AdminComponent.html":{},"components/GraphsComponent.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["this.adminpaneldataservice",{"_index":1122,"title":{},"body":{"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["this.adminpaneldataservice.getbatterydata(input).subscribe((databattery",{"_index":1144,"title":{},"body":{"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["this.adminpaneldataservice.getbatterydataframe(startdate",{"_index":1219,"title":{},"body":{"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["this.adminpaneldataservice.getraspberrydata(input).subscribe((datarasp",{"_index":1147,"title":{},"body":{"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["this.adminpaneldataservice.getraspberrydataframe(startdate",{"_index":1220,"title":{},"body":{"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["this.adminpaneldataservice.getsolardata(input).subscribe((datasolar",{"_index":1141,"title":{},"body":{"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["this.adminpaneldataservice.getsolardataframe(startdate",{"_index":1218,"title":{},"body":{"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["this.adminpaneldataservice.getvolumedataframe(firstmonthday,lastmonthday).subscribe((datavol",{"_index":1150,"title":{},"body":{"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["this.adminpaneldataservice.getvolumedataframe(startdate",{"_index":1221,"title":{},"body":{"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["this.adminpaneldatasubscription",{"_index":1140,"title":{},"body":{"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["this.adminservice",{"_index":73,"title":{},"body":{"components/AdminComponent.html":{}}}],["this.adminservice.providetoken(this.username",{"_index":76,"title":{},"body":{"components/AdminComponent.html":{}}}],["this.adminsubscription",{"_index":75,"title":{},"body":{"components/AdminComponent.html":{}}}],["this.apiurl",{"_index":258,"title":{},"body":{"injectables/AdminpanelDataService.html":{},"interfaces/BatteryData.html":{},"interfaces/ImageData.html":{},"injectables/ImageService.html":{},"interfaces/RaspberryData.html":{},"interfaces/SolarData.html":{},"interfaces/TemperatureData.html":{},"interfaces/VolumeData.html":{},"injectables/WeatherDataService.html":{},"interfaces/WindData.html":{}}}],["this.auth.isauthenticated",{"_index":473,"title":{},"body":{"guards/AuthGuardService.html":{}}}],["this.batterychart",{"_index":1132,"title":{},"body":{"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["this.batterydata",{"_index":1145,"title":{},"body":{"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["this.batterydata.map(data",{"_index":1199,"title":{},"body":{"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["this.batterydata.map(datesolar",{"_index":1169,"title":{},"body":{"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["this.breakpoint",{"_index":626,"title":{},"body":{"components/GraphsComponent.html":{}}}],["this.buildchart(this.chartdatasets[0",{"_index":1162,"title":{},"body":{"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["this.buildchart(this.chartdatasets[1",{"_index":1167,"title":{},"body":{"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["this.buildchart(this.chartdatasets[2",{"_index":1173,"title":{},"body":{"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["this.buildchart(this.chartdatasets[3",{"_index":1178,"title":{},"body":{"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["this.buildtempchart",{"_index":645,"title":{},"body":{"components/GraphsComponent.html":{}}}],["this.buildwindchart",{"_index":642,"title":{},"body":{"components/GraphsComponent.html":{}}}],["this.chart",{"_index":1188,"title":{},"body":{"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["this.chart.destroy",{"_index":1184,"title":{},"body":{"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["this.chartdatasets[0][0].data",{"_index":1194,"title":{},"body":{"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["this.chartdatasets[0][1].data",{"_index":1196,"title":{},"body":{"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["this.chartdatasets[1][0].data",{"_index":1198,"title":{},"body":{"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["this.chartdatasets[1][1].data",{"_index":1201,"title":{},"body":{"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["this.chartdatasets[2][0].data",{"_index":1204,"title":{},"body":{"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["this.chartdatasets[2][1].data",{"_index":1206,"title":{},"body":{"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["this.chartdatasets[3][0].data.reduce(add).tostring",{"_index":1211,"title":{},"body":{"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["this.chartdatasets[3][0].data=this.volumedata.map(datavolume",{"_index":1209,"title":{},"body":{"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["this.chartlabels",{"_index":1155,"title":{},"body":{"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["this.chartnames[0",{"_index":1163,"title":{},"body":{"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["this.chartnames[1",{"_index":1168,"title":{},"body":{"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["this.chartnames[2",{"_index":1174,"title":{},"body":{"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["this.chartnames[3",{"_index":1179,"title":{},"body":{"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["this.chartoptions",{"_index":1192,"title":{},"body":{"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["this.chartoptions.title.text=dianame",{"_index":1187,"title":{},"body":{"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["this.charttempdata.datasets[0].data=this.temperaturedata.map(data",{"_index":649,"title":{},"body":{"components/GraphsComponent.html":{}}}],["this.charttempdata.labels=this.temperaturedata.map(data",{"_index":648,"title":{},"body":{"components/GraphsComponent.html":{}}}],["this.chartwindata.datasets[0].data=this.winddata.map(datawind",{"_index":657,"title":{},"body":{"components/GraphsComponent.html":{}}}],["this.chartwindata.labels=this.winddata.map(datawind",{"_index":655,"title":{},"body":{"components/GraphsComponent.html":{}}}],["this.dateimages=data",{"_index":845,"title":{},"body":{"classes/NgbdDropdownBasic.html":{},"components/WebcamComponent.html":{}}}],["this.datepics=this.dateimages.map(data",{"_index":846,"title":{},"body":{"classes/NgbdDropdownBasic.html":{},"components/WebcamComponent.html":{}}}],["this.destroy$.next(true",{"_index":852,"title":{},"body":{"classes/NgbdDropdownBasic.html":{},"components/WebcamComponent.html":{}}}],["this.destroy$.unsubscribe",{"_index":853,"title":{},"body":{"classes/NgbdDropdownBasic.html":{},"components/WebcamComponent.html":{}}}],["this.diagramchange(this.lastevent",{"_index":1224,"title":{},"body":{"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["this.enddateevents.push(`${event.value",{"_index":680,"title":{},"body":{"components/GraphsComponent.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["this.enddateevents[this.enddateevents.length",{"_index":688,"title":{},"body":{"components/GraphsComponent.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["this.errors",{"_index":83,"title":{},"body":{"components/AdminComponent.html":{}}}],["this.extendedmodestatus",{"_index":624,"title":{},"body":{"components/GraphsComponent.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["this.extendedmodestatus.next(event.checked",{"_index":674,"title":{},"body":{"components/GraphsComponent.html":{}}}],["this.gallery.ref('lightbox",{"_index":815,"title":{},"body":{"classes/NgbdDropdownBasic.html":{},"components/WebcamComponent.html":{}}}],["this.gallery.ref('yesterday",{"_index":838,"title":{},"body":{"classes/NgbdDropdownBasic.html":{},"components/WebcamComponent.html":{}}}],["this.getbatterydataset",{"_index":1166,"title":{},"body":{"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["this.getraspberrydataset",{"_index":1172,"title":{},"body":{"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["this.getsolardataset",{"_index":1161,"title":{},"body":{"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["this.getvolumedataset",{"_index":1177,"title":{},"body":{"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["this.http",{"_index":202,"title":{},"body":{"injectables/AdminService.html":{},"injectables/AdminpanelDataService.html":{},"interfaces/AuthToken.html":{},"interfaces/BatteryData.html":{},"interfaces/ImageData.html":{},"injectables/ImageService.html":{},"interfaces/RaspberryData.html":{},"interfaces/SolarData.html":{},"interfaces/TemperatureData.html":{},"interfaces/VolumeData.html":{},"injectables/WeatherDataService.html":{},"interfaces/WindData.html":{}}}],["this.http.get(this.apiurl",{"_index":264,"title":{},"body":{"injectables/AdminpanelDataService.html":{},"interfaces/BatteryData.html":{},"interfaces/ImageData.html":{},"injectables/ImageService.html":{},"interfaces/RaspberryData.html":{},"interfaces/SolarData.html":{},"interfaces/TemperatureData.html":{},"interfaces/VolumeData.html":{},"injectables/WeatherDataService.html":{},"interfaces/WindData.html":{}}}],["this.http.get(this.apiurl+'battery/aggregate/?start='+this.formatdate(start)+'&end='+this.formatdate(end",{"_index":271,"title":{},"body":{"injectables/AdminpanelDataService.html":{},"interfaces/BatteryData.html":{},"interfaces/RaspberryData.html":{},"interfaces/SolarData.html":{},"interfaces/VolumeData.html":{}}}],["this.http.get(this.apiurl+'images/?start='+this.formatdate(date)+'&end='+this.formatdate(end",{"_index":767,"title":{},"body":{"interfaces/ImageData.html":{},"injectables/ImageService.html":{}}}],["this.http.get(this.apiurl+'solarcell/aggregate/?start='+this.formatdate(start)+'&end='+this.formatdate(end",{"_index":269,"title":{},"body":{"injectables/AdminpanelDataService.html":{},"interfaces/BatteryData.html":{},"interfaces/RaspberryData.html":{},"interfaces/SolarData.html":{},"interfaces/VolumeData.html":{}}}],["this.http.get(this.apiurl+'temps/aggregate/?start='+this.formatdate(start)+'&end='+this.formatdate(end",{"_index":862,"title":{},"body":{"interfaces/TemperatureData.html":{},"injectables/WeatherDataService.html":{},"interfaces/WindData.html":{}}}],["this.http.get(this.apiurl+'wind/recent",{"_index":864,"title":{},"body":{"interfaces/TemperatureData.html":{},"injectables/WeatherDataService.html":{},"interfaces/WindData.html":{}}}],["this.http.get(this.apiurl+'wind/recent/?start='+this.formatdate(start)+'&end='+this.formatdate(end",{"_index":860,"title":{},"body":{"interfaces/TemperatureData.html":{},"injectables/WeatherDataService.html":{},"interfaces/WindData.html":{}}}],["this.http.post(this.apiurl",{"_index":204,"title":{},"body":{"injectables/AdminService.html":{},"interfaces/AuthToken.html":{}}}],["this.imageservice",{"_index":809,"title":{},"body":{"classes/NgbdDropdownBasic.html":{},"components/WebcamComponent.html":{}}}],["this.imageservice.getdateimages(this.startdateevents",{"_index":844,"title":{},"body":{"classes/NgbdDropdownBasic.html":{},"components/WebcamComponent.html":{}}}],["this.imageservice.getrecentimages",{"_index":810,"title":{},"body":{"classes/NgbdDropdownBasic.html":{},"components/WebcamComponent.html":{}}}],["this.imageservice.gettodayimages",{"_index":829,"title":{},"body":{"classes/NgbdDropdownBasic.html":{},"components/WebcamComponent.html":{}}}],["this.imageservice.getyesterdayimages",{"_index":835,"title":{},"body":{"classes/NgbdDropdownBasic.html":{},"components/WebcamComponent.html":{}}}],["this.initdata",{"_index":1123,"title":{},"body":{"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["this.jwthelper.istokenexpired(token",{"_index":492,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.lastevent",{"_index":1126,"title":{},"body":{"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["this.lasthourswind",{"_index":640,"title":{},"body":{"components/GraphsComponent.html":{}}}],["this.lightbox.open(index",{"_index":841,"title":{},"body":{"classes/NgbdDropdownBasic.html":{},"components/WebcamComponent.html":{}}}],["this.loaddatepics",{"_index":851,"title":{},"body":{"classes/NgbdDropdownBasic.html":{},"components/WebcamComponent.html":{}}}],["this.loadrecentpics",{"_index":814,"title":{},"body":{"classes/NgbdDropdownBasic.html":{},"components/WebcamComponent.html":{}}}],["this.loginerror",{"_index":79,"title":{},"body":{"components/AdminComponent.html":{}}}],["this.logtoken(tokendata",{"_index":80,"title":{},"body":{"components/AdminComponent.html":{}}}],["this.password).subscribe",{"_index":77,"title":{},"body":{"components/AdminComponent.html":{}}}],["this.raspberrychart",{"_index":1133,"title":{},"body":{"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["this.raspberrydata",{"_index":1148,"title":{},"body":{"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["this.raspberrydata.map(datesolar",{"_index":1175,"title":{},"body":{"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["this.recentimages",{"_index":813,"title":{},"body":{"classes/NgbdDropdownBasic.html":{},"components/WebcamComponent.html":{}}}],["this.recentpics=this.recentimages.map(data",{"_index":826,"title":{},"body":{"classes/NgbdDropdownBasic.html":{},"components/WebcamComponent.html":{}}}],["this.recenttemp",{"_index":636,"title":{},"body":{"components/GraphsComponent.html":{}}}],["this.recentwinddir",{"_index":631,"title":{},"body":{"components/GraphsComponent.html":{}}}],["this.recentwindspeed",{"_index":628,"title":{},"body":{"components/GraphsComponent.html":{}}}],["this.router.navigate(['admin",{"_index":474,"title":{},"body":{"guards/AuthGuardService.html":{}}}],["this.router.navigate(['adminpanel",{"_index":74,"title":{},"body":{"components/AdminComponent.html":{}}}],["this.solarchart",{"_index":1130,"title":{},"body":{"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["this.solardata",{"_index":1142,"title":{},"body":{"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["this.solardata.map(data",{"_index":1164,"title":{},"body":{"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["this.solardata.map(datasolar",{"_index":1099,"title":{},"body":{"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["this.startdateevents.push(`${event.value",{"_index":678,"title":{},"body":{"components/GraphsComponent.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["this.startdateevents=event.value",{"_index":850,"title":{},"body":{"classes/NgbdDropdownBasic.html":{},"components/WebcamComponent.html":{}}}],["this.startdateevents[this.startdateevents.length",{"_index":683,"title":{},"body":{"components/GraphsComponent.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["this.tempchart.destroy",{"_index":647,"title":{},"body":{"components/GraphsComponent.html":{}}}],["this.tempchart=chart.line(tempcanvas",{"_index":652,"title":{},"body":{"components/GraphsComponent.html":{}}}],["this.temperaturedata",{"_index":644,"title":{},"body":{"components/GraphsComponent.html":{}}}],["this.temperaturedata.map(data",{"_index":570,"title":{},"body":{"components/GraphsComponent.html":{}}}],["this.today.ref('dategallery",{"_index":847,"title":{},"body":{"classes/NgbdDropdownBasic.html":{},"components/WebcamComponent.html":{}}}],["this.today.ref('today",{"_index":832,"title":{},"body":{"classes/NgbdDropdownBasic.html":{},"components/WebcamComponent.html":{}}}],["this.todayimages=data",{"_index":830,"title":{},"body":{"classes/NgbdDropdownBasic.html":{},"components/WebcamComponent.html":{}}}],["this.todaypics=this.todayimages.map(data",{"_index":831,"title":{},"body":{"classes/NgbdDropdownBasic.html":{},"components/WebcamComponent.html":{}}}],["this.token=tok",{"_index":90,"title":{},"body":{"components/AdminComponent.html":{}}}],["this.updategraphs(event.value",{"_index":675,"title":{},"body":{"components/GraphsComponent.html":{}}}],["this.volistoggled",{"_index":1129,"title":{},"body":{"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["this.volumechart",{"_index":1134,"title":{},"body":{"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["this.volumedata",{"_index":1152,"title":{},"body":{"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["this.volumedata.map(datavolume",{"_index":1110,"title":{},"body":{"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["this.weatherdataservice",{"_index":623,"title":{},"body":{"components/GraphsComponent.html":{}}}],["this.weatherdataservice.getrecentwind().subscribe((data",{"_index":639,"title":{},"body":{"components/GraphsComponent.html":{}}}],["this.weatherdataservice.gettemperatures(1).subscribe((data",{"_index":635,"title":{},"body":{"components/GraphsComponent.html":{}}}],["this.weatherdataservice.gettemperatures(input).subscribe((data",{"_index":643,"title":{},"body":{"components/GraphsComponent.html":{}}}],["this.weatherdataservice.gettemperaturesdataframe(startdate",{"_index":691,"title":{},"body":{"components/GraphsComponent.html":{}}}],["this.weatherdatasubscription",{"_index":634,"title":{},"body":{"components/GraphsComponent.html":{}}}],["this.windchart=chart.line(windcanvas",{"_index":659,"title":{},"body":{"components/GraphsComponent.html":{}}}],["this.winddata",{"_index":641,"title":{},"body":{"components/GraphsComponent.html":{}}}],["this.winddata.map(data",{"_index":661,"title":{},"body":{"components/GraphsComponent.html":{}}}],["this.winddata.map(datawind",{"_index":590,"title":{},"body":{"components/GraphsComponent.html":{}}}],["this.yesterdayimages=data",{"_index":836,"title":{},"body":{"classes/NgbdDropdownBasic.html":{},"components/WebcamComponent.html":{}}}],["this.yesterdaypics=this.yesterdayimages.map(data",{"_index":837,"title":{},"body":{"classes/NgbdDropdownBasic.html":{},"components/WebcamComponent.html":{}}}],["throttletime",{"_index":783,"title":{},"body":{"classes/NgbdDropdownBasic.html":{},"components/WebcamComponent.html":{}}}],["thumbposition",{"_index":820,"title":{},"body":{"classes/NgbdDropdownBasic.html":{},"components/WebcamComponent.html":{}}}],["ticks",{"_index":566,"title":{},"body":{"components/GraphsComponent.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["time",{"_index":229,"title":{},"body":{"injectables/AdminpanelDataService.html":{},"interfaces/BatteryData.html":{},"interfaces/RaspberryData.html":{},"interfaces/SolarData.html":{},"interfaces/VolumeData.html":{},"injectables/WeatherDataService.html":{}}}],["timeframe",{"_index":677,"title":{},"body":{"components/GraphsComponent.html":{},"classes/NgbdDropdownBasic.html":{},"components/WebcamComponent.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["timepickers",{"_index":513,"title":{},"body":{"components/GraphsComponent.html":{}}}],["title",{"_index":287,"title":{},"body":{"components/AppComponent.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["today",{"_index":260,"title":{},"body":{"injectables/AdminpanelDataService.html":{},"interfaces/BatteryData.html":{},"injectables/ImageService.html":{},"classes/NgbdDropdownBasic.html":{},"interfaces/RaspberryData.html":{},"interfaces/SolarData.html":{},"interfaces/TemperatureData.html":{},"interfaces/VolumeData.html":{},"injectables/WeatherDataService.html":{},"components/WebcamComponent.html":{},"interfaces/WindData.html":{}}}],["today.getdate",{"_index":262,"title":{},"body":{"injectables/AdminpanelDataService.html":{},"interfaces/BatteryData.html":{},"interfaces/RaspberryData.html":{},"interfaces/SolarData.html":{},"interfaces/VolumeData.html":{}}}],["today.setdate(yesterday",{"_index":263,"title":{},"body":{"injectables/AdminpanelDataService.html":{},"interfaces/BatteryData.html":{},"interfaces/RaspberryData.html":{},"interfaces/SolarData.html":{},"interfaces/VolumeData.html":{}}}],["today=new",{"_index":756,"title":{},"body":{"interfaces/ImageData.html":{},"injectables/ImageService.html":{}}}],["todayimages",{"_index":795,"title":{},"body":{"classes/NgbdDropdownBasic.html":{},"components/WebcamComponent.html":{}}}],["todaypics",{"_index":878,"title":{},"body":{"components/WebcamComponent.html":{}}}],["todaypics:galleryitem",{"_index":794,"title":{},"body":{"classes/NgbdDropdownBasic.html":{},"components/WebcamComponent.html":{}}}],["toggle",{"_index":364,"title":{},"body":{"modules/AppModule.html":{},"components/GraphsComponent.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["toggleslider",{"_index":729,"title":{},"body":{"components/GraphsComponent.html":{}}}],["tok",{"_index":49,"title":{},"body":{"components/AdminComponent.html":{}}}],["token",{"_index":28,"title":{},"body":{"components/AdminComponent.html":{},"injectables/AdminService.html":{},"injectables/AuthService.html":{},"interfaces/AuthToken.html":{}}}],["tokendata",{"_index":78,"title":{},"body":{"components/AdminComponent.html":{}}}],["top",{"_index":150,"title":{},"body":{"components/AdminComponent.html":{},"components/GraphsComponent.html":{},"components/WebcamComponent.html":{}}}],["top'}).load(this.datepics",{"_index":848,"title":{},"body":{"classes/NgbdDropdownBasic.html":{},"components/WebcamComponent.html":{}}}],["top'}).load(this.recentpics",{"_index":821,"title":{},"body":{"classes/NgbdDropdownBasic.html":{},"components/WebcamComponent.html":{}}}],["top'}).load(this.todaypics",{"_index":833,"title":{},"body":{"classes/NgbdDropdownBasic.html":{},"components/WebcamComponent.html":{}}}],["top'}).load(this.yesterdaypics",{"_index":839,"title":{},"body":{"classes/NgbdDropdownBasic.html":{},"components/WebcamComponent.html":{}}}],["transform",{"_index":939,"title":{},"body":{"components/WebcamComponent.html":{}}}],["transformdirectiondates",{"_index":529,"title":{},"body":{"components/GraphsComponent.html":{}}}],["transformdirectiondates(i",{"_index":558,"title":{},"body":{"components/GraphsComponent.html":{}}}],["transformdirectiondates(indexofelement",{"_index":706,"title":{},"body":{"components/GraphsComponent.html":{}}}],["tree",{"_index":8,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/GraphsComponent.html":{},"components/WebcamComponent.html":{}}}],["true",{"_index":57,"title":{},"body":{"components/AdminComponent.html":{},"guards/AuthGuardService.html":{},"injectables/AuthService.html":{},"components/GraphsComponent.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{},"miscellaneous/variables.html":{}}}],["tslib",{"_index":998,"title":{},"body":{"dependencies.html":{}}}],["type",{"_index":42,"title":{},"body":{"components/AdminComponent.html":{},"injectables/AdminService.html":{},"injectables/AdminpanelDataService.html":{},"components/AppComponent.html":{},"guards/AuthGuardService.html":{},"interfaces/AuthToken.html":{},"interfaces/BatteryData.html":{},"components/GraphsComponent.html":{},"interfaces/ImageData.html":{},"injectables/ImageService.html":{},"interfaces/RaspberryData.html":{},"interfaces/SolarData.html":{},"interfaces/TemperatureData.html":{},"interfaces/VolumeData.html":{},"injectables/WeatherDataService.html":{},"components/WebcamComponent.html":{},"interfaces/WindData.html":{},"coverage.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{},"miscellaneous/variables.html":{}}}],["uhr",{"_index":707,"title":{},"body":{"components/GraphsComponent.html":{}}}],["undefined",{"_index":1223,"title":{},"body":{"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["unit",{"_index":1036,"title":{},"body":{"index.html":{}}}],["updatechartlabels",{"_index":1154,"title":{},"body":{"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["updategraphs",{"_index":530,"title":{},"body":{"components/GraphsComponent.html":{}}}],["updategraphs(input",{"_index":560,"title":{},"body":{"components/GraphsComponent.html":{}}}],["use",{"_index":1025,"title":{},"body":{"index.html":{}}}],["user",{"_index":192,"title":{},"body":{"injectables/AdminService.html":{}}}],["username",{"_index":29,"title":{},"body":{"components/AdminComponent.html":{}}}],["username\":user",{"_index":205,"title":{},"body":{"injectables/AdminService.html":{},"interfaces/AuthToken.html":{}}}],["value",{"_index":56,"title":{},"body":{"components/AdminComponent.html":{},"injectables/AdminService.html":{},"injectables/AdminpanelDataService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/GraphsComponent.html":{},"injectables/ImageService.html":{},"injectables/WeatherDataService.html":{},"components/WebcamComponent.html":{},"miscellaneous/variables.html":{}}}],["var",{"_index":164,"title":{},"body":{"components/AdminComponent.html":{},"injectables/AdminpanelDataService.html":{},"components/AppComponent.html":{},"interfaces/BatteryData.html":{},"components/GraphsComponent.html":{},"interfaces/ImageData.html":{},"injectables/ImageService.html":{},"interfaces/RaspberryData.html":{},"interfaces/SolarData.html":{},"interfaces/TemperatureData.html":{},"interfaces/VolumeData.html":{},"injectables/WeatherDataService.html":{},"components/WebcamComponent.html":{},"interfaces/WindData.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["variable",{"_index":957,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1226,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":1009,"title":{},"body":{"index.html":{}}}],["vertical",{"_index":726,"title":{},"body":{"components/GraphsComponent.html":{}}}],["via",{"_index":1040,"title":{},"body":{"index.html":{}}}],["void",{"_index":46,"title":{},"body":{"components/AdminComponent.html":{},"components/GraphsComponent.html":{},"components/WebcamComponent.html":{}}}],["volistoggled",{"_index":1083,"title":{},"body":{"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["volt",{"_index":1090,"title":{},"body":{"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["voltage",{"_index":277,"title":{},"body":{"injectables/AdminpanelDataService.html":{},"interfaces/BatteryData.html":{},"interfaces/RaspberryData.html":{},"interfaces/SolarData.html":{},"interfaces/VolumeData.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["volume",{"_index":1109,"title":{},"body":{"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["volume/?start='+this.formatdate(today",{"_index":267,"title":{},"body":{"injectables/AdminpanelDataService.html":{},"interfaces/BatteryData.html":{},"interfaces/RaspberryData.html":{},"interfaces/SolarData.html":{},"interfaces/VolumeData.html":{}}}],["volumechart",{"_index":1176,"title":{},"body":{"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["volumedata",{"_index":282,"title":{"interfaces/VolumeData.html":{}},"body":{"injectables/AdminpanelDataService.html":{},"interfaces/BatteryData.html":{},"interfaces/RaspberryData.html":{},"interfaces/SolarData.html":{},"interfaces/VolumeData.html":{},"coverage.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["von",{"_index":910,"title":{},"body":{"components/WebcamComponent.html":{}}}],["wartung",{"_index":292,"title":{},"body":{"components/AppComponent.html":{}}}],["watt",{"_index":1093,"title":{},"body":{"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["weather",{"_index":422,"title":{},"body":{"modules/AppModule.html":{},"components/GraphsComponent.html":{}}}],["weatherdataservice",{"_index":310,"title":{"injectables/WeatherDataService.html":{}},"body":{"modules/AppModule.html":{},"components/GraphsComponent.html":{},"interfaces/TemperatureData.html":{},"injectables/WeatherDataService.html":{},"interfaces/WindData.html":{},"coverage.html":{},"overview.html":{}}}],["weatherdataservice,imageservice",{"_index":438,"title":{},"body":{"modules/AppModule.html":{}}}],["weatherdatasubscription",{"_index":514,"title":{},"body":{"components/GraphsComponent.html":{}}}],["webcam",{"_index":174,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/GraphsComponent.html":{},"classes/NgbdDropdownBasic.html":{},"components/WebcamComponent.html":{}}}],["webcam.component.html",{"_index":790,"title":{},"body":{"classes/NgbdDropdownBasic.html":{},"components/WebcamComponent.html":{}}}],["webcam.component.scss",{"_index":791,"title":{},"body":{"classes/NgbdDropdownBasic.html":{},"components/WebcamComponent.html":{}}}],["webcam/webcam.component",{"_index":333,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["webcamcomponent",{"_index":173,"title":{"components/WebcamComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/GraphsComponent.html":{},"classes/NgbdDropdownBasic.html":{},"components/WebcamComponent.html":{},"coverage.html":{},"overview.html":{}}}],["werden",{"_index":89,"title":{},"body":{"components/AdminComponent.html":{}}}],["werte",{"_index":1214,"title":{},"body":{"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["wetterstation",{"_index":1004,"title":{},"body":{"index.html":{}}}],["whether",{"_index":486,"title":{},"body":{"injectables/AuthService.html":{}}}],["white",{"_index":931,"title":{},"body":{"components/WebcamComponent.html":{}}}],["width",{"_index":100,"title":{},"body":{"components/AdminComponent.html":{},"components/GraphsComponent.html":{},"components/WebcamComponent.html":{}}}],["width:85",{"_index":738,"title":{},"body":{"components/GraphsComponent.html":{}}}],["wind",{"_index":592,"title":{},"body":{"components/GraphsComponent.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{},"miscellaneous/variables.html":{}}}],["wind/recent/?start='+this.formatdate(today",{"_index":858,"title":{},"body":{"interfaces/TemperatureData.html":{},"injectables/WeatherDataService.html":{},"interfaces/WindData.html":{}}}],["windcanvas=document.getelementbyid('wind",{"_index":658,"title":{},"body":{"components/GraphsComponent.html":{}}}],["windchart",{"_index":515,"title":{},"body":{"components/GraphsComponent.html":{}}}],["windchart:chart",{"_index":622,"title":{},"body":{"components/GraphsComponent.html":{}}}],["winddata",{"_index":516,"title":{"interfaces/WindData.html":{}},"body":{"components/GraphsComponent.html":{},"interfaces/TemperatureData.html":{},"injectables/WeatherDataService.html":{},"interfaces/WindData.html":{},"coverage.html":{}}}],["winddirtime",{"_index":749,"title":{},"body":{"components/GraphsComponent.html":{}}}],["windgeschwindigkeit",{"_index":700,"title":{},"body":{"components/GraphsComponent.html":{}}}],["window.innerwidth",{"_index":627,"title":{},"body":{"components/GraphsComponent.html":{}}}],["windrichtung",{"_index":701,"title":{},"body":{"components/GraphsComponent.html":{}}}],["windrichtungen",{"_index":702,"title":{},"body":{"components/GraphsComponent.html":{}}}],["wurde",{"_index":1081,"title":{},"body":{"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["wählen",{"_index":913,"title":{},"body":{"components/WebcamComponent.html":{}}}],["yaxes",{"_index":565,"title":{},"body":{"components/GraphsComponent.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["yaxisid",{"_index":1098,"title":{},"body":{"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["year",{"_index":255,"title":{},"body":{"injectables/AdminpanelDataService.html":{},"interfaces/BatteryData.html":{},"interfaces/ImageData.html":{},"injectables/ImageService.html":{},"interfaces/RaspberryData.html":{},"interfaces/SolarData.html":{},"interfaces/TemperatureData.html":{},"interfaces/VolumeData.html":{},"injectables/WeatherDataService.html":{},"interfaces/WindData.html":{}}}],["yesterday",{"_index":261,"title":{},"body":{"injectables/AdminpanelDataService.html":{},"interfaces/BatteryData.html":{},"interfaces/RaspberryData.html":{},"interfaces/SolarData.html":{},"interfaces/VolumeData.html":{},"components/WebcamComponent.html":{}}}],["yesterday.setdate(today.getdate",{"_index":762,"title":{},"body":{"interfaces/ImageData.html":{},"injectables/ImageService.html":{}}}],["yesterday:gallery,public",{"_index":807,"title":{},"body":{"classes/NgbdDropdownBasic.html":{},"components/WebcamComponent.html":{}}}],["yesterday=new",{"_index":761,"title":{},"body":{"interfaces/ImageData.html":{},"injectables/ImageService.html":{}}}],["yesterdayimages",{"_index":799,"title":{},"body":{"classes/NgbdDropdownBasic.html":{},"components/WebcamComponent.html":{}}}],["yesterdaypics",{"_index":798,"title":{},"body":{"classes/NgbdDropdownBasic.html":{},"components/WebcamComponent.html":{}}}],["zeitraum",{"_index":1216,"title":{},"body":{"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["zone.js",{"_index":1000,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":311,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["zugeordnet",{"_index":88,"title":{},"body":{"components/AdminComponent.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AdminComponent.html":{"url":"components/AdminComponent.html","title":"component - AdminComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AdminComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/admin/admin.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-admin\n            \n\n            \n                styleUrls\n                ./admin.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./admin.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                adminService\n                            \n                            \n                                adminSubscription\n                            \n                            \n                                errors\n                            \n                            \n                                loginError\n                            \n                            \n                                password\n                            \n                            \n                                token\n                            \n                            \n                                username\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getToken\n                            \n                            \n                                logToken\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(adminService: AdminService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/admin/admin.component.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        adminService\n                                                  \n                                                        \n                                                                        AdminService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getToken\n                        \n                        \n                    \n                \n            \n            \n                \ngetToken()\n                \n            \n\n\n            \n                \n                    Defined in src/app/admin/admin.component.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            logToken\n                        \n                        \n                    \n                \n            \n            \n                \nlogToken(tok)\n                \n            \n\n\n            \n                \n                    Defined in src/app/admin/admin.component.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    tok\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/admin/admin.component.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            adminService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         AdminService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/admin/admin.component.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            adminSubscription\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/admin/admin.component.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            errors\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/admin/admin.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loginError\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/admin/admin.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            password\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/admin/admin.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            token\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         AuthToken[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/admin/admin.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            username\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/admin/admin.component.ts:18\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { AuthToken, AdminService } from \"../admin.service\";\nimport { Router } from '@angular/router';\nimport { BehaviorSubject, Subscription } from 'rxjs';\n\n\n@Component({\n  selector: 'app-admin',\n  templateUrl: './admin.component.html',\n  styleUrls: ['./admin.component.scss']\n  \n})\nexport class AdminComponent implements OnInit {\n\n  adminService: AdminService;\n  adminSubscription: Subscription;\n  token: AuthToken[] = [];\n  username: string;\n  password: string;\n  loginError: boolean = true;\n  errors;\n\n  constructor(adminService: AdminService, private router: Router){\n    this.adminService = adminService;\n  }\n\n  ngOnInit() {\n    this.router.navigate(['adminpanel']);\n  }\n\n  getToken(){\n    this.adminSubscription =\n      this.adminService.provideToken(this.username, this.password).subscribe(\n        (tokendata) => {\n          this.loginError = true;\n          this.logToken(tokendata);\n        }, error => {\n          this.loginError = false;\n          this.errors = error; \n          console.log(\"Fehler: Account konnte nicht zugeordnet werden\");\n        }\n      );\n  }\n\n  logToken(tok){\n    this.token=tok;\n    localStorage.setItem(\"weatherToken\",this.token[\"access\"]);\n    //localStorage.removeItem(\"weatherToken\");\n    console.log(\"Token:\"+this.token);\n    this.router.navigate(['adminpanel']);\n  }\n  \n}\n\n    \n\n    \n        \n\n\n  \n  \n    Benutzername\n    \n\n    Passwort\n    \n\n    \n      Anmelden\n    \n    \n    \n\n\n  \n  Login fehlgeschlagen!\n\n\n\n\n    \n\n    \n                \n                    ./admin.component.scss\n                \n                \n\n/* Full-width inputs */\ninput[type=text], input[type=password] {\n  width: 100%;\n  padding: 12px 20px;\n  margin: 8px 0;\n  text-align: left;\n  display: block;\n  border: 1px solid #ccc;\n  box-sizing: border-box;\n}\n\nmat-card {\n  margin: 0 auto;\n  width: 30%;\n}\n\n.login{\n  display: flex;\n  justify-content: center;\n  margin: 0 auto;\n}\n/* Extra style for the cancel button (red) */\n.cancelbtn {\n  width: 3em;\n  padding: 10px 18px;\n  background-color: #f44336;\n}\n\n/* Add padding to containers */\n.container {\n  padding: 16px;\n}\n\n/* The \"Forgot password\" text */\nspan.psw {\n  float: right;\n  padding-top: 16px;\n}\n\n/* Change styles for span and cancel button on extra small screens */\n@media screen and (max-width: 300px) {\n  span.psw {\n    display: block;\n    float: none;\n  }\n  .cancelbtn {\n    width: 100%;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '        Benutzername        Passwort              Anmelden                Login fehlgeschlagen!'\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AdminpanelComponent', 'selector': 'app-adminpanel'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'GraphsComponent', 'selector': 'app-graphs'},{'name': 'WebcamComponent', 'selector': 'app-webcam'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AdminComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AdminService.html":{"url":"injectables/AdminService.html","title":"injectable - AdminService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AdminService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/admin.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                apiUrl\n                            \n                            \n                                    Private\n                                error\n                            \n                            \n                                    Private\n                                http\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                provideToken\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/admin.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            provideToken\n                        \n                        \n                    \n                \n            \n            \n                \nprovideToken(user, pwd)\n                \n            \n\n\n            \n                \n                    Defined in src/app/admin.service.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    pwd\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            apiUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'http://localhost:8000/api/'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/admin.service.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            error\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/admin.service.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            http\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         HttpClient\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/admin.service.ts:11\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {HttpClient, HttpErrorResponse} from \"@angular/common/http\";\nimport { catchError } from 'rxjs/operators'; \n\n@Injectable({\n    providedIn: 'root'\n})\n\nexport class AdminService {\n    private apiUrl = 'http://localhost:8000/api/';\n    private http: HttpClient;\n    private error;\n\n    constructor(http: HttpClient) {\n      this.http = http;\n    }\n\n    provideToken(user, pwd){\n        return this.http.post(this.apiUrl + 'token/', {\"username\":user, \"password\":pwd});;\n    }\n}\n\nexport interface AuthToken {\n    refresh: String;\n    access: String;\n  }\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AdminpanelDataService.html":{"url":"injectables/AdminpanelDataService.html","title":"injectable - AdminpanelDataService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AdminpanelDataService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/adminpanel-data.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                apiUrl\n                            \n                            \n                                    Private\n                                http\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                formatDate\n                            \n                            \n                                getBatteryData\n                            \n                            \n                                getBatteryDataFrame\n                            \n                            \n                                getRaspberryData\n                            \n                            \n                                getRaspberryDataFrame\n                            \n                            \n                                getSolarData\n                            \n                            \n                                getSolarDataFrame\n                            \n                            \n                                getVolumeData\n                            \n                            \n                                getVolumeDataFrame\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/adminpanel-data.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            formatDate\n                        \n                        \n                    \n                \n            \n            \n                \nformatDate(date: Date)\n                \n            \n\n\n            \n                \n                    Defined in src/app/adminpanel-data.service.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    date\n                                    \n                                                Date\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getBatteryData\n                        \n                        \n                    \n                \n            \n            \n                \ngetBatteryData(time: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/adminpanel-data.service.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    time\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getBatteryDataFrame\n                        \n                        \n                    \n                \n            \n            \n                \ngetBatteryDataFrame(start: Date, end: Date)\n                \n            \n\n\n            \n                \n                    Defined in src/app/adminpanel-data.service.ts:65\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    start\n                                    \n                                                Date\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    end\n                                    \n                                                Date\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getRaspberryData\n                        \n                        \n                    \n                \n            \n            \n                \ngetRaspberryData(time: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/adminpanel-data.service.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    time\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getRaspberryDataFrame\n                        \n                        \n                    \n                \n            \n            \n                \ngetRaspberryDataFrame(start: Date, end: Date)\n                \n            \n\n\n            \n                \n                    Defined in src/app/adminpanel-data.service.ts:69\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    start\n                                    \n                                                Date\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    end\n                                    \n                                                Date\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getSolarData\n                        \n                        \n                    \n                \n            \n            \n                \ngetSolarData(time: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/adminpanel-data.service.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    time\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getSolarDataFrame\n                        \n                        \n                    \n                \n            \n            \n                \ngetSolarDataFrame(start: Date, end: Date)\n                \n            \n\n\n            \n                \n                    Defined in src/app/adminpanel-data.service.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    start\n                                    \n                                                Date\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    end\n                                    \n                                                Date\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getVolumeData\n                        \n                        \n                    \n                \n            \n            \n                \ngetVolumeData(time: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/adminpanel-data.service.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    time\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getVolumeDataFrame\n                        \n                        \n                    \n                \n            \n            \n                \ngetVolumeDataFrame(start: Date, end: Date)\n                \n            \n\n\n            \n                \n                    Defined in src/app/adminpanel-data.service.ts:73\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    start\n                                    \n                                                Date\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    end\n                                    \n                                                Date\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            apiUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'http://localhost:8000/api/'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/adminpanel-data.service.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            http\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         HttpClient\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/adminpanel-data.service.ts:9\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {HttpClient} from \"@angular/common/http\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AdminpanelDataService {\n  private apiUrl = 'http://localhost:8000/api/';\n  private http: HttpClient;\n\n  constructor(http: HttpClient) {\n    this.http = http;\n  }\n\n  formatDate(date: Date) {\n    var d = new Date(date),\n        month = '' + (d.getMonth() + 1),\n        day = '' + d.getDate(),\n        year = d.getFullYear();\n\n    if (month.length (this.apiUrl + 'solarcell/aggregate/?start='+this.formatDate(today));\n  }\n\n  getBatteryData(time: number){\n    let today=  new Date();\n    let yesterday = today.getDate()-time;\n    today.setDate(yesterday);\n  \n  return  this.http.get(this.apiUrl + 'battery/aggregate/?start='+this.formatDate(today));\n  }\n\n  getRaspberryData(time: number){\n    let today=  new Date();\n    let yesterday = today.getDate()-time;\n    today.setDate(yesterday);\n  \n  return  this.http.get(this.apiUrl + 'solarcell/aggregate/?start='+this.formatDate(today));\n  }\n\n  getVolumeData(time: number){\n    let today=  new Date();\n    let yesterday = today.getDate()-time;\n    today.setDate(yesterday);\n  \n  return  this.http.get(this.apiUrl + 'data-volume/?start='+this.formatDate(today));\n  }\n\n  getSolarDataFrame(start:Date,end:Date){\n    return this.http.get(this.apiUrl+'solarcell/aggregate/?start='+this.formatDate(start)+'&end='+this.formatDate(end));\n  }\n\n  getBatteryDataFrame(start:Date,end:Date){\n    return this.http.get(this.apiUrl+'battery/aggregate/?start='+this.formatDate(start)+'&end='+this.formatDate(end));\n  }\n\n  getRaspberryDataFrame(start:Date,end:Date){\n    return this.http.get(this.apiUrl+'solarcell/aggregate/?start='+this.formatDate(start)+'&end='+this.formatDate(end));\n  }\n\n  getVolumeDataFrame(start:Date,end:Date){\n    return this.http.get(this.apiUrl+'solarcell/aggregate/?start='+this.formatDate(start)+'&end='+this.formatDate(end));\n  }\n}\n\nexport interface SolarData {\n  id: Number,\n  current: Number,\n  voltage: Number,\n  measure_time: Date\n}\n\nexport interface BatteryData {\n  id: Number,\n  current: Number,\n  voltage: Number,\n  degrees: Number,\n  measure_time: Date\n}\n\nexport interface RaspberryData {\n  id: Number,\n  current: Number,\n  voltage: Number,\n  measure_time: Date\n}\n\nexport interface VolumeData {\n  id: Number,\n  image_size: Number\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                ./app.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'SE-draft'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:11\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'SE-draft';\n}\n\n    \n\n    \n        \n\n  \n    \n      \n          \n      \n      \n      \n      \n         Graphen \n         Webcam \n         Wartung \n      \n    \n  \n\n\n\n\n  \n\n\n    \n\n    \n                \n                    ./app.component.scss\n                \n                .menu-spacer{\n    flex: 1 1 auto;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                       Graphen          Webcam          Wartung               '\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AdminpanelComponent', 'selector': 'app-adminpanel'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'GraphsComponent', 'selector': 'app-graphs'},{'name': 'WebcamComponent', 'selector': 'app-webcam'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAdminComponent\n\nAdminComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAdminComponent->AppModule\n\n\n\n\n\nAdminpanelComponent\n\nAdminpanelComponent\n\nAppModule -->\n\nAdminpanelComponent->AppModule\n\n\n\n\n\nAppComponent\n\nAppComponent\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nGraphsComponent\n\nGraphsComponent\n\nAppModule -->\n\nGraphsComponent->AppModule\n\n\n\n\n\nWebcamComponent\n\nWebcamComponent\n\nAppModule -->\n\nWebcamComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nImageService\n\nImageService\n\nAppModule -->\n\nImageService->AppModule\n\n\n\n\n\nWeatherDataService\n\nWeatherDataService\n\nAppModule -->\n\nWeatherDataService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AdminComponent\n                        \n                        \n                            AdminpanelComponent\n                        \n                        \n                            AppComponent\n                        \n                        \n                            GraphsComponent\n                        \n                        \n                            WebcamComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            ImageService\n                        \n                        \n                            WeatherDataService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppRoutingModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {BrowserModule} from '@angular/platform-browser';\nimport {NgModule} from '@angular/core';\nimport {MDBBootstrapModule,} from 'angular-bootstrap-md';\nimport {MatCardModule} from '@angular/material/card';\nimport {MatDatepickerModule} from '@angular/material/datepicker';\nimport {MatFormFieldModule} from '@angular/material/form-field';\nimport {AppRoutingModule} from './app-routing.module';\nimport {AppComponent} from './app.component';\nimport {GraphsComponent} from './graphs/graphs.component';\nimport {WebcamComponent} from './webcam/webcam.component';\nimport {AdminComponent} from './admin/admin.component';\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\n\nimport {FormsModule} from '@angular/forms';\nimport {ClipboardModule} from '@angular/cdk/clipboard';\nimport {DragDropModule} from '@angular/cdk/drag-drop';\nimport {PortalModule} from '@angular/cdk/portal';\nimport {ScrollingModule} from '@angular/cdk/scrolling';\nimport {CdkStepperModule} from '@angular/cdk/stepper';\nimport {CdkTableModule} from '@angular/cdk/table';\nimport {CdkTreeModule} from '@angular/cdk/tree';\nimport {MatAutocompleteModule} from '@angular/material/autocomplete';\nimport {MatBadgeModule} from '@angular/material/badge';\nimport {MatBottomSheetModule} from '@angular/material/bottom-sheet';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatButtonToggleModule} from '@angular/material/button-toggle';\n\n\nimport {MatCheckboxModule} from '@angular/material/checkbox';\nimport {MatChipsModule} from '@angular/material/chips';\nimport {MatStepperModule} from '@angular/material/stepper';\nimport {MatDialogModule} from '@angular/material/dialog';\nimport {MatDividerModule} from '@angular/material/divider';\nimport {MatExpansionModule} from '@angular/material/expansion';\nimport {MatGridListModule} from '@angular/material/grid-list';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatListModule} from '@angular/material/list';\nimport {MatMenuModule} from '@angular/material/menu';\nimport {MatNativeDateModule, MatRippleModule} from '@angular/material/core';\nimport {MatPaginatorModule} from '@angular/material/paginator';\nimport {MatProgressBarModule} from '@angular/material/progress-bar';\nimport {MatProgressSpinnerModule} from '@angular/material/progress-spinner';\nimport {MatRadioModule} from '@angular/material/radio';\nimport {MatSelectModule} from '@angular/material/select';\nimport {MatSidenavModule} from '@angular/material/sidenav';\nimport {MatSliderModule} from '@angular/material/slider';\nimport {MatSlideToggleModule} from '@angular/material/slide-toggle';\nimport {MatSnackBarModule} from '@angular/material/snack-bar';\nimport {MatSortModule} from '@angular/material/sort';\nimport {MatTableModule} from '@angular/material/table';\nimport {MatTabsModule} from '@angular/material/tabs';\nimport {MatToolbarModule} from '@angular/material/toolbar';\nimport {MatTooltipModule} from '@angular/material/tooltip';\nimport {MatTreeModule} from '@angular/material/tree';\nimport {WeatherDataService} from \"./weather-data.service\";\nimport {HttpClient, HttpClientModule} from \"@angular/common/http\";\nimport { ImageService } from './image-data.service';\nimport { AdminpanelComponent } from './adminpanel/adminpanel.component';\nimport { AuthGuardService} from './auth-guard.service';\nimport { GalleryModule } from '@ngx-gallery/core';\nimport { LightboxModule } from '@ngx-gallery/lightbox'\nimport { GallerizeModule } from '@ngx-gallery/gallerize';\n;\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    GraphsComponent,\n    WebcamComponent,\n    AdminComponent,\n    AdminpanelComponent\n  ],\n  imports: [\n    GallerizeModule,\n    GalleryModule,\n    LightboxModule,\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    MDBBootstrapModule.forRoot(),\n    FormsModule,\n    BrowserAnimationsModule,\n    MatCardModule,\n    MatDatepickerModule,\n    MatFormFieldModule,\n    ClipboardModule,\n    CdkStepperModule,\n    CdkTableModule,\n    CdkTreeModule,\n    DragDropModule,\n    MatAutocompleteModule,\n    MatBadgeModule,\n    MatBottomSheetModule,\n    MatButtonModule,\n    MatButtonToggleModule,\n    MatCardModule,\n    MatCheckboxModule,\n    MatChipsModule,\n    MatStepperModule,\n    MatDatepickerModule,\n    MatDialogModule,\n    MatDividerModule,\n    MatExpansionModule,\n    MatGridListModule,\n    MatIconModule,\n    MatInputModule,\n    MatListModule,\n    MatMenuModule,\n    MatNativeDateModule,\n    MatPaginatorModule,\n    MatProgressBarModule,\n    MatProgressSpinnerModule,\n    MatRadioModule,\n    MatRippleModule,\n    MatSelectModule,\n    MatSidenavModule,\n    MatSliderModule,\n    MatSlideToggleModule,\n    MatSnackBarModule,\n    MatSortModule,\n    MatTableModule,\n    MatTabsModule,\n    MatToolbarModule,\n    MatTooltipModule,\n    MatTreeModule,\n    PortalModule,\n    ScrollingModule,\n\n  ],\n  providers: [WeatherDataService,ImageService, HttpClient, AuthGuardService],\n  bootstrap: [AppComponent]\n\n})\nexport class AppModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AppPage.html":{"url":"classes/AppPage.html","title":"class - AppPage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AppPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            e2e/src/app.po.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getTitleText\n                            \n                            \n                                navigateTo\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getTitleText\n                        \n                        \n                    \n                \n            \n            \n                \ngetTitleText()\n                \n            \n\n\n            \n                \n                    Defined in e2e/src/app.po.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            navigateTo\n                        \n                        \n                    \n                \n            \n            \n                \nnavigateTo()\n                \n            \n\n\n            \n                \n                    Defined in e2e/src/app.po.ts:4\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { browser, by, element } from 'protractor';\n\nexport class AppPage {\n  navigateTo() {\n    return browser.get(browser.baseUrl) as Promise;\n  }\n\n  getTitleText() {\n    return element(by.css('app-root .content span')).getText() as Promise;\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule, CanActivate } from '@angular/router';\nimport { AuthGuardService as AuthGuard} from './auth-guard.service';\n\nimport { GraphsComponent } from './graphs/graphs.component'; \nimport { WebcamComponent } from './webcam/webcam.component'; \nimport { AdminComponent } from './admin/admin.component';\nimport { AdminpanelComponent } from './adminpanel/adminpanel.component'; // Add this\n\nconst routes: Routes = [\n  { path: '', component: GraphsComponent },              // Add this\n  { path: 'webcam', component: WebcamComponent },\n  { path: 'admin', component: AdminComponent },\n  { path: 'adminpanel', component: AdminpanelComponent, canActivate: [AuthGuard] }\n\n\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule],\n  providers: [AuthGuard]\n})\nexport class AppRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/AuthGuardService.html":{"url":"guards/AuthGuardService.html","title":"guard - AuthGuardService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    AuthGuardService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/auth-guard.service.ts\n            \n\n\n\n\n\n                \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                auth\n                            \n                            \n                                    Public\n                                router\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(auth: AuthService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth-guard.service.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        auth\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            canActivate\n                        \n                        \n                    \n                \n            \n            \n                \ncanActivate()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth-guard.service.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable } from '@angular/core';\nimport { Router, CanActivate } from '@angular/router';\nimport { AuthService } from './auth.service';\n\n@Injectable({providedIn: 'root'})\nexport class AuthGuardService implements CanActivate {\n  constructor(public auth: AuthService, public router: Router) {}\n  canActivate(): boolean {\n    if (!this.auth.isAuthenticated()) {\n      this.router.navigate(['admin']);\n      return false;\n    }\n    return true;\n  }\n}\n        \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/auth.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                jwtHelper\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                isAuthenticated\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/auth.service.ts:8\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            isAuthenticated\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isAuthenticated()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth.service.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            jwtHelper\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new JwtHelperService()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth.service.ts:8\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { JwtHelperService } from '@auth0/angular-jwt';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class AuthService {\n  public jwtHelper = new JwtHelperService();\n  constructor() {}\n  // ...\n  public isAuthenticated(): boolean {\n    const token = localStorage.getItem('weatherToken');\n    console.log(token);\n    // Check whether the token is expired and return\n    // true or false\n    //console.log(this.jwtHelper.getTokenExpirationDate(\"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ0b2tlbl90eXBlIjoiYWNjZXNzIiwiZXhwIjoxNTk1NjAwMjc2LCJqdGkiOiJkNDI4MzUwOWM4YjM0Mzc3OWE1ZjkxMDA4YmJlYzA3MSIsInVzZXJfaWQiOjF9.yJNowg-P0SkTXgnN6dxz5rw3PRVZZ59Pk6EI6oq-TBY\"));\n    console.log(this.jwtHelper.getTokenExpirationDate(token));\n    return !this.jwtHelper.isTokenExpired(token);\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AuthToken.html":{"url":"interfaces/AuthToken.html","title":"interface - AuthToken","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  AuthToken\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/admin.service.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        access\n                                \n                                \n                                        refresh\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        access\n                                    \n                                \n                                \n                                    \n                                        access:         String\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         String\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        refresh\n                                    \n                                \n                                \n                                    \n                                        refresh:         String\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         String\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {HttpClient, HttpErrorResponse} from \"@angular/common/http\";\nimport { catchError } from 'rxjs/operators'; \n\n@Injectable({\n    providedIn: 'root'\n})\n\nexport class AdminService {\n    private apiUrl = 'http://localhost:8000/api/';\n    private http: HttpClient;\n    private error;\n\n    constructor(http: HttpClient) {\n      this.http = http;\n    }\n\n    provideToken(user, pwd){\n        return this.http.post(this.apiUrl + 'token/', {\"username\":user, \"password\":pwd});;\n    }\n}\n\nexport interface AuthToken {\n    refresh: String;\n    access: String;\n  }\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/BatteryData.html":{"url":"interfaces/BatteryData.html","title":"interface - BatteryData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  BatteryData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/adminpanel-data.service.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        current\n                                \n                                \n                                        degrees\n                                \n                                \n                                        id\n                                \n                                \n                                        measure_time\n                                \n                                \n                                        voltage\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        current\n                                    \n                                \n                                \n                                    \n                                        current:         Number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        degrees\n                                    \n                                \n                                \n                                    \n                                        degrees:         Number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         Number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        measure_time\n                                    \n                                \n                                \n                                    \n                                        measure_time:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        voltage\n                                    \n                                \n                                \n                                    \n                                        voltage:         Number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {HttpClient} from \"@angular/common/http\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AdminpanelDataService {\n  private apiUrl = 'http://localhost:8000/api/';\n  private http: HttpClient;\n\n  constructor(http: HttpClient) {\n    this.http = http;\n  }\n\n  formatDate(date: Date) {\n    var d = new Date(date),\n        month = '' + (d.getMonth() + 1),\n        day = '' + d.getDate(),\n        year = d.getFullYear();\n\n    if (month.length (this.apiUrl + 'solarcell/aggregate/?start='+this.formatDate(today));\n  }\n\n  getBatteryData(time: number){\n    let today=  new Date();\n    let yesterday = today.getDate()-time;\n    today.setDate(yesterday);\n  \n  return  this.http.get(this.apiUrl + 'battery/aggregate/?start='+this.formatDate(today));\n  }\n\n  getRaspberryData(time: number){\n    let today=  new Date();\n    let yesterday = today.getDate()-time;\n    today.setDate(yesterday);\n  \n  return  this.http.get(this.apiUrl + 'solarcell/aggregate/?start='+this.formatDate(today));\n  }\n\n  getVolumeData(time: number){\n    let today=  new Date();\n    let yesterday = today.getDate()-time;\n    today.setDate(yesterday);\n  \n  return  this.http.get(this.apiUrl + 'data-volume/?start='+this.formatDate(today));\n  }\n\n  getSolarDataFrame(start:Date,end:Date){\n    return this.http.get(this.apiUrl+'solarcell/aggregate/?start='+this.formatDate(start)+'&end='+this.formatDate(end));\n  }\n\n  getBatteryDataFrame(start:Date,end:Date){\n    return this.http.get(this.apiUrl+'battery/aggregate/?start='+this.formatDate(start)+'&end='+this.formatDate(end));\n  }\n\n  getRaspberryDataFrame(start:Date,end:Date){\n    return this.http.get(this.apiUrl+'solarcell/aggregate/?start='+this.formatDate(start)+'&end='+this.formatDate(end));\n  }\n\n  getVolumeDataFrame(start:Date,end:Date){\n    return this.http.get(this.apiUrl+'solarcell/aggregate/?start='+this.formatDate(start)+'&end='+this.formatDate(end));\n  }\n}\n\nexport interface SolarData {\n  id: Number,\n  current: Number,\n  voltage: Number,\n  measure_time: Date\n}\n\nexport interface BatteryData {\n  id: Number,\n  current: Number,\n  voltage: Number,\n  degrees: Number,\n  measure_time: Date\n}\n\nexport interface RaspberryData {\n  id: Number,\n  current: Number,\n  voltage: Number,\n  measure_time: Date\n}\n\nexport interface VolumeData {\n  id: Number,\n  image_size: Number\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/GraphsComponent.html":{"url":"components/GraphsComponent.html","title":"component - GraphsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  GraphsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/graphs/graphs.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-graphs\n            \n\n            \n                styleUrls\n                ./graphs.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./graphs.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                breakpoint\n                            \n                            \n                                chartoptions\n                            \n                            \n                                charttempdata\n                            \n                            \n                                chartwindata\n                            \n                            \n                                chosenbtn\n                            \n                            \n                                enddateEvents\n                            \n                            \n                                extendedModeStatus\n                            \n                            \n                                lastHoursWind\n                            \n                            \n                                recentTemp\n                            \n                            \n                                recentWindDir\n                            \n                            \n                                recentWindSpeed\n                            \n                            \n                                startdateEvents\n                            \n                            \n                                tempchart\n                            \n                            \n                                temperatureData\n                            \n                            \n                                timepickers\n                            \n                            \n                                weatherDataService\n                            \n                            \n                                weatherDataSubscription\n                            \n                            \n                                windchart\n                            \n                            \n                                windData\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addEndEvent\n                            \n                            \n                                addStartEvent\n                            \n                            \n                                applyTimeframe\n                            \n                            \n                                buildTempChart\n                            \n                            \n                                buildWindChart\n                            \n                            \n                                getRecentValues\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onbtnChange\n                            \n                            \n                                onChange\n                            \n                            \n                                onImageLoad\n                            \n                            \n                                onResize\n                            \n                            \n                                rotateDirCardArrow\n                            \n                            \n                                transformDirectionDates\n                            \n                            \n                                updateGraphs\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(weatherDataService: WeatherDataService)\n                    \n                \n                        \n                            \n                                Defined in src/app/graphs/graphs.component.ts:81\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        weatherDataService\n                                                  \n                                                        \n                                                                        WeatherDataService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            addEndEvent\n                        \n                        \n                    \n                \n            \n            \n                \naddEndEvent(event: MatDatepickerInputEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/app/graphs/graphs.component.ts:200\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                            MatDatepickerInputEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            addStartEvent\n                        \n                        \n                    \n                \n            \n            \n                \naddStartEvent(event: MatDatepickerInputEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/app/graphs/graphs.component.ts:194\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                            MatDatepickerInputEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            applyTimeframe\n                        \n                        \n                    \n                \n            \n            \n                \napplyTimeframe()\n                \n            \n\n\n            \n                \n                    Defined in src/app/graphs/graphs.component.ts:206\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            buildTempChart\n                        \n                        \n                    \n                \n            \n            \n                \nbuildTempChart()\n                \n            \n\n\n            \n                \n                    Defined in src/app/graphs/graphs.component.ts:139\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            buildWindChart\n                        \n                        \n                    \n                \n            \n            \n                \nbuildWindChart()\n                \n            \n\n\n            \n                \n                    Defined in src/app/graphs/graphs.component.ts:154\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getRecentValues\n                        \n                        \n                    \n                \n            \n            \n                \ngetRecentValues()\n                \n            \n\n\n            \n                \n                    Defined in src/app/graphs/graphs.component.ts:107\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/graphs/graphs.component.ts:101\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/graphs/graphs.component.ts:89\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onbtnChange\n                        \n                        \n                    \n                \n            \n            \n                \nonbtnChange(event: MatRadioChange)\n                \n            \n\n\n            \n                \n                    Defined in src/app/graphs/graphs.component.ts:188\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                            MatRadioChange\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onChange\n                        \n                        \n                    \n                \n            \n            \n                \nonChange(event: MatSlideToggleChange)\n                \n            \n\n\n            \n                \n                    Defined in src/app/graphs/graphs.component.ts:183\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                            MatSlideToggleChange\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onImageLoad\n                        \n                        \n                    \n                \n            \n            \n                \nonImageLoad(i)\n                \n            \n\n\n            \n                \n                    Defined in src/app/graphs/graphs.component.ts:166\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    i\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onResize\n                        \n                        \n                    \n                \n            \n            \n                \nonResize(event)\n                \n            \n\n\n            \n                \n                    Defined in src/app/graphs/graphs.component.ts:227\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            rotateDirCardArrow\n                        \n                        \n                    \n                \n            \n            \n                \nrotateDirCardArrow(angle, id)\n                \n            \n\n\n            \n                \n                    Defined in src/app/graphs/graphs.component.ts:173\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    angle\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    id\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            transformDirectionDates\n                        \n                        \n                    \n                \n            \n            \n                \ntransformDirectionDates(i)\n                \n            \n\n\n            \n                \n                    Defined in src/app/graphs/graphs.component.ts:177\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    i\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateGraphs\n                        \n                        \n                    \n                \n            \n            \n                \nupdateGraphs(input)\n                \n            \n\n\n            \n                \n                    Defined in src/app/graphs/graphs.component.ts:129\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    input\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            breakpoint\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/graphs/graphs.component.ts:81\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            chartoptions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    scales: {\n      yAxes: [{\n        ticks: {\n          beginAtZero: false\n        }\n      }]\n    }\n  }\n                        \n                    \n                        \n                            \n                                    Defined in src/app/graphs/graphs.component.ts:71\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            charttempdata\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n      labels: this.temperatureData.map(data => new Date(data.measure_time).toLocaleString([],{month:'2-digit',day:'2-digit',hour:'2-digit',minute:'2-digit'})),\n      datasets: [{\n        label: 'Temperatur in C°',\n        data: this.temperatureData.map(data => data.degrees),\n        fill: true,\n        backgroundColor: \n          'rgba(255, 99, 132, 0.2)',\n        borderColor:\n          'rgba(255, 99, 132, 1)',\n        borderWidth: 0\n      }]\n    }\n                        \n                    \n                        \n                            \n                                    Defined in src/app/graphs/graphs.component.ts:42\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            chartwindata\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    labels: this.windData.map(datawind => new Date(datawind.measure_time).toLocaleString()),\n    datasets: [{\n      label: 'Wind in m/s',\n      data: this.windData.map(datawind => datawind.speed),\n      fill: true,\n      backgroundColor:\n        'rgba(128, 255, 132, 0.2)'\n      ,\n      borderColor:\n        'rgba(128, 255, 132, 1)',\n      borderWidth: 0\n    }]\n}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/graphs/graphs.component.ts:56\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            chosenbtn\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 1\n                        \n                    \n                        \n                            \n                                    Defined in src/app/graphs/graphs.component.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            enddateEvents\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/graphs/graphs.component.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            extendedModeStatus\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     BehaviorSubject\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/graphs/graphs.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            lastHoursWind\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         WindData[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/graphs/graphs.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            recentTemp\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/graphs/graphs.component.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            recentWindDir\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/graphs/graphs.component.ts:38\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            recentWindSpeed\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/graphs/graphs.component.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            startdateEvents\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/graphs/graphs.component.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            tempchart\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Chart\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/graphs/graphs.component.ts:40\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            temperatureData\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         TemperatureData[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/graphs/graphs.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            timepickers\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     number[]\n\n                        \n                    \n                    \n                        \n                            Default value : [1, 3, 7, 14, 21]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/graphs/graphs.component.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            weatherDataService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         WeatherDataService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/graphs/graphs.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            weatherDataSubscription\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/graphs/graphs.component.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            windchart\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Chart\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/graphs/graphs.component.ts:41\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            windData\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         WindData[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/graphs/graphs.component.ts:22\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, OnDestroy, OnChanges,ViewChild } from '@angular/core';\n\nimport { Chart } from 'chart.js';\nimport { TemperatureData, WeatherDataService, WindData } from \"../weather-data.service\";\nimport { BehaviorSubject, Subscription } from 'rxjs';\nimport { MatSlideToggleChange } from '@angular/material/slide-toggle';\nimport { MatRadioChange, MatRadioButton } from '@angular/material/radio';\nimport { MatDatepickerInputEvent } from '@angular/material/datepicker';\n\n\n\n\n\n@Component({\n  selector: 'app-graphs',\n  templateUrl: './graphs.component.html',\n  styleUrls: ['./graphs.component.scss']\n})\nexport class GraphsComponent implements OnInit, OnDestroy {\n  weatherDataService: WeatherDataService;\n  temperatureData: TemperatureData[] = [];\n  windData: WindData[] = [];\n  lastHoursWind: WindData[] = [];\n  extendedModeStatus: BehaviorSubject;\n\n\n  weatherDataSubscription: Subscription;\n\n\n  chosenbtn: number = 1;\n  timepickers: number[] = [1, 3, 7, 14, 21];\n  startdateEvents: string[] = [];\n  enddateEvents: string[] = [];\n\n\n  recentTemp: Number;\n  recentWindSpeed: Number;\n  recentWindDir: Number;\n\n  tempchart:Chart;\n  windchart:Chart;\n  charttempdata={\n      labels: this.temperatureData.map(data => new Date(data.measure_time).toLocaleString([],{month:'2-digit',day:'2-digit',hour:'2-digit',minute:'2-digit'})),\n      datasets: [{\n        label: 'Temperatur in C°',\n        data: this.temperatureData.map(data => data.degrees),\n        fill: true,\n        backgroundColor: \n          'rgba(255, 99, 132, 0.2)',\n        borderColor:\n          'rgba(255, 99, 132, 1)',\n        borderWidth: 0\n      }]\n    }\n  \nchartwindata={\n    labels: this.windData.map(datawind => new Date(datawind.measure_time).toLocaleString()),\n    datasets: [{\n      label: 'Wind in m/s',\n      data: this.windData.map(datawind => datawind.speed),\n      fill: true,\n      backgroundColor:\n        'rgba(128, 255, 132, 0.2)'\n      ,\n      borderColor:\n        'rgba(128, 255, 132, 1)',\n      borderWidth: 0\n    }]\n}\n\n  chartoptions={\n    scales: {\n      yAxes: [{\n        ticks: {\n          beginAtZero: false\n        }\n      }]\n    }\n  }\n\n  breakpoint: number;\n\n  constructor(weatherDataService: WeatherDataService) {\n    this.weatherDataService = weatherDataService\n    this.extendedModeStatus = new BehaviorSubject(false)\n\n  }\n\n  ngOnInit() {\n    this.breakpoint = (window.innerWidth  {\n      \n      this.recentWindSpeed = data.map(data => data.speed)[data.length - 1];\n      this.recentWindDir = data.map(data => data.direction)[data.length - 1];\n      console.log(this.recentWindSpeed)\n    });\n\n    this.weatherDataSubscription =\n      this.weatherDataService.getTemperatures(1).subscribe((data) => {\n        this.recentTemp = data.map(data => data.degrees)[data.length - 1];\n        console.log(data);\n      });\n\n    this.weatherDataService.getRecentWind().subscribe((data) => {\n      this.lastHoursWind = data;\n      this.windData = data;\n      this.buildWindChart();\n    });\n  }\n\n\n  updateGraphs(input) {\n    this.weatherDataSubscription =\n    this.weatherDataService.getTemperatures(input).subscribe((data) => {\n      this.temperatureData = data;\n      this.buildTempChart();\n      \n    });\n    \n  }\n\n  buildTempChart(){\n    if(this.tempchart!=undefined){\n      this.tempchart.destroy();\n    }\n\n    this.charttempdata.labels=this.temperatureData.map(data => new Date(data.measure_time).toLocaleString([],{month:'2-digit',day:'2-digit',hour:'2-digit',minute:'2-digit'}));\n    this.charttempdata.datasets[0].data=this.temperatureData.map(data => data.degrees);\n    let tempcanvas=document.getElementById('temp');\n    console.log(this.charttempdata)\n    this.tempchart=Chart.Line(tempcanvas,{\n      data:this.charttempdata,\n      options:this.chartoptions\n    })\n  }\n\n  buildWindChart() {\n  \n    this.chartwindata.labels=this.windData.map(datawind => new Date(datawind.measure_time).toLocaleString([],{month:'2-digit',day:'2-digit',hour:'2-digit',minute:'2-digit'}));\n    this.chartwindata.datasets[0].data=this.windData.map(datawind => datawind.speed)\n    let windcanvas=document.getElementById('wind');\n    this.windchart=Chart.Line(windcanvas,{\n      data:this.chartwindata,\n      options:this.chartoptions\n    })\n  }\n\n\n  onImageLoad(i) {\n    var data = this.windData.map(data => data.direction);\n    var img = document.getElementById(i);\n    img.style.transform = 'rotate(' + data[i] + 'deg)';\n\n  }\n\n  rotateDirCardArrow(angle, id) {\n    var img = document.getElementById(id);\n    img.style.transform = 'rotate(' + angle + 'deg)';\n  }\n  transformDirectionDates(i) {\n    let dirhours = this.windData.map(datawind => new Date(datawind.measure_time).toLocaleString([],{hour:'2-digit',minute:'2-digit'}));\n    return dirhours[i];\n  }\n\n\n  onChange(event: MatSlideToggleChange) {\n    console.log(event);\n    this.extendedModeStatus.next(event.checked)\n  }\n\n  onbtnChange(event: MatRadioChange) {\n\n    this.updateGraphs(event.value);\n  }\n\n  /*Eventhandles for Timeframe */\n  addStartEvent(event: MatDatepickerInputEvent) {\n    this.startdateEvents.push(`${event.value}`);\n    console.log(this.startdateEvents)\n\n  }\n\n  addEndEvent(event: MatDatepickerInputEvent) {\n    this.enddateEvents.push(`${event.value}`);\n    console.log(this.enddateEvents)\n\n  }\n\n  applyTimeframe() {\n    let startstring = this.startdateEvents[this.startdateEvents.length - 1]\n    let startdate = new Date(startstring);\n    console.log(startdate);\n\n    let endstring = this.enddateEvents[this.enddateEvents.length - 1]\n    let enddate = new Date(endstring);\n\n\n    if (enddate > startdate) {\n      this.weatherDataSubscription =\n        this.weatherDataService.getTemperaturesDataFrame(startdate, enddate).subscribe((data) => {\n          this.temperatureData = data;\n          this.buildTempChart();\n        });\n\n    }\n  }\n\n/* Handler for Resizing*/\n\nonResize(event) {\n  this.breakpoint = (event.target.innerWidth \n    \n\n    \n        \n\n\n\n   src = \"https://cdn.jsdelivr.net/npm/chart.js@2.9.3/dist/Chart.min.js\" \n\n\n\n\n  \n  \n    \n      \n        \n          Aktuelle Temperatur:\n          {{recentTemp}}°C\n        \n      \n    \n    \n      \n        \n          Windgeschwindigkeit:\n          {{recentWindSpeed}} m/s\n        \n      \n    \n    \n      \n        \n          Aktuelle Windrichtung\n          \n            \n          \n        \n      \n    \n  \n  \n\n  \n    Windrichtungen der letzten 3 Stunden:\n    \n    \n      \n      {{transformDirectionDates(indexOfelement)}} Uhr\n    \n  \n\n\n  \n    \n      \n    \n  \n\n\n\n\n  \n    \n    erw. Modus\n  \n    \n     \n      \n        Startdatum\n        \n        \n        \n      \n   \n\n      \n        Enddatum\n        \n        \n        \n      \n    \n      Anwenden\n    \n\n\n    \n      Anzahl der Tage:\n      \n        \n          {{pick}}\n        \n\n      \n    \n  \n  \n\n\n\n  \n    \n      \n    \n  \n\n\n\n\n\n\n\n\n\n    \n\n    \n                \n                    ./graphs.component.scss\n                \n                \n.selectorcard{\n    \n    height:100%;\n    margin-bottom: 0.5em;\n    margin-top: 0.5em;\n\n}\n\n.canvas-container {\n    display: flex;\n    box-align: center;\n    border: 1px solid lightgray;\n    margin-bottom: 0em;\n    width: auto;\n    height:auto\n    }\n\n.column {\n    margin-top: 0.5rem;\n   \n    vertical-align: middle;\n    width: 100%;\n    height: 100%;\n    \n  }\n\n.toggleslider{\n  position: absolute;\n  top: 8px;\n  right: 20px;\n  font-size: 18px;\n\n}\n.simplemodelabel{\n  text-align: left;\n \n}\n\n.mat-radio-button{\n  padding:0.5em;\n}\n\n\n.recentData{\nwidth:85%;\nheight:55%;\ntext-align: center;\n}\n\n.directions-card{\n  margin-top: 1em;\n  margin-bottom: 0.5em;\n  height: 4em;\n  text-align: center;\n  \n}\n\n.mat-h1{\n  text-align: center;\n  margin-top: 0.8em;\n  \n}\n\n\n.imagecontainer{\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: auto;\n  \n}\n\n.arrowscontainer{\n  float: left;\n  margin-right:0.25em ;\n}\n\n.windDirTime{\n  display: block;\n}\n.endpickform,.applydates,.startpickform{\nmargin:0.25em 0.25em 0.25em 0.25em;\n}\n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '   src = \"https://cdn.jsdelivr.net/npm/chart.js@2.9.3/dist/Chart.min.js\"                                 Aktuelle Temperatur:          {{recentTemp}}°C                                              Windgeschwindigkeit:          {{recentWindSpeed}} m/s                                              Aktuelle Windrichtung                                                            Windrichtungen der letzten 3 Stunden:                    {{transformDirectionDates(indexOfelement)}} Uhr                                  erw. Modus                         Startdatum                                               Enddatum                                        Anwenden              Anzahl der Tage:                        {{pick}}                                        '\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AdminpanelComponent', 'selector': 'app-adminpanel'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'GraphsComponent', 'selector': 'app-graphs'},{'name': 'WebcamComponent', 'selector': 'app-webcam'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'GraphsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   "},"interfaces/ImageData.html":{"url":"interfaces/ImageData.html","title":"interface - ImageData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ImageData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/image-data.service.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        id\n                                \n                                \n                                        image\n                                \n                                \n                                        measurement_time\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         Number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        image\n                                    \n                                \n                                \n                                    \n                                        image:         String\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         String\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        measurement_time\n                                    \n                                \n                                \n                                    \n                                        measurement_time:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {HttpClient} from \"@angular/common/http\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ImageService {\n  private apiUrl = 'http://localhost:8000/api/';\n  private http: HttpClient;\n  constructor(http: HttpClient) {\n    this.http = http;\n  }\n  today=new Date;\n  \n\n\n  formatDate(date: Date) {\n    var d = new Date(date),\n        month = '' + (d.getMonth() + 1),\n        day = '' + d.getDate(),\n        year = d.getFullYear();\n\n    if (month.length (this.apiUrl + 'images/recent/');\n}\n\n\n  getTodayImages() {\n    let today=new Date;\n    return this.http.get(this.apiUrl + 'images/?start='+this.formatDate(today));\n  }\n \n\n  getYesterdayImages(){\n    let today=new Date;\n    let yesterday=new Date();\n    yesterday.setDate(today.getDate()-1)\n   \n    return this.http.get(this.apiUrl + 'images/?start='+this.formatDate(yesterday)+'&end='+this.formatDate(today));\n  }\n\n getDateImages(date:Date){\n  let end=new Date() \n  end.setDate(date.getDate()+1)\n   \n  return this.http.get(this.apiUrl+'images/?start='+this.formatDate(date)+'&end='+this.formatDate(end));\n\n }\n\n\n}\n\nexport interface ImageData {\n  id: Number,\n  image: String,\n  measurement_time: Date\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ImageService.html":{"url":"injectables/ImageService.html","title":"injectable - ImageService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ImageService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/image-data.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                apiUrl\n                            \n                            \n                                    Private\n                                http\n                            \n                            \n                                today\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                formatDate\n                            \n                            \n                                getDateImages\n                            \n                            \n                                getrecentImages\n                            \n                            \n                                getTodayImages\n                            \n                            \n                                getYesterdayImages\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/image-data.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            formatDate\n                        \n                        \n                    \n                \n            \n            \n                \nformatDate(date: Date)\n                \n            \n\n\n            \n                \n                    Defined in src/app/image-data.service.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    date\n                                    \n                                                Date\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getDateImages\n                        \n                        \n                    \n                \n            \n            \n                \ngetDateImages(date: Date)\n                \n            \n\n\n            \n                \n                    Defined in src/app/image-data.service.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    date\n                                    \n                                                Date\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getrecentImages\n                        \n                        \n                    \n                \n            \n            \n                \ngetrecentImages()\n                \n            \n\n\n            \n                \n                    Defined in src/app/image-data.service.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getTodayImages\n                        \n                        \n                    \n                \n            \n            \n                \ngetTodayImages()\n                \n            \n\n\n            \n                \n                    Defined in src/app/image-data.service.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getYesterdayImages\n                        \n                        \n                    \n                \n            \n            \n                \ngetYesterdayImages()\n                \n            \n\n\n            \n                \n                    Defined in src/app/image-data.service.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            apiUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'http://localhost:8000/api/'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/image-data.service.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            http\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         HttpClient\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/image-data.service.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            today\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Date\n                        \n                    \n                        \n                            \n                                    Defined in src/app/image-data.service.ts:13\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {HttpClient} from \"@angular/common/http\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ImageService {\n  private apiUrl = 'http://localhost:8000/api/';\n  private http: HttpClient;\n  constructor(http: HttpClient) {\n    this.http = http;\n  }\n  today=new Date;\n  \n\n\n  formatDate(date: Date) {\n    var d = new Date(date),\n        month = '' + (d.getMonth() + 1),\n        day = '' + d.getDate(),\n        year = d.getFullYear();\n\n    if (month.length (this.apiUrl + 'images/recent/');\n}\n\n\n  getTodayImages() {\n    let today=new Date;\n    return this.http.get(this.apiUrl + 'images/?start='+this.formatDate(today));\n  }\n \n\n  getYesterdayImages(){\n    let today=new Date;\n    let yesterday=new Date();\n    yesterday.setDate(today.getDate()-1)\n   \n    return this.http.get(this.apiUrl + 'images/?start='+this.formatDate(yesterday)+'&end='+this.formatDate(today));\n  }\n\n getDateImages(date:Date){\n  let end=new Date() \n  end.setDate(date.getDate()+1)\n   \n  return this.http.get(this.apiUrl+'images/?start='+this.formatDate(date)+'&end='+this.formatDate(end));\n\n }\n\n\n}\n\nexport interface ImageData {\n  id: Number,\n  image: String,\n  measurement_time: Date\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/NgbdDropdownBasic.html":{"url":"classes/NgbdDropdownBasic.html","title":"class - NgbdDropdownBasic","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  NgbdDropdownBasic\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/webcam/webcam.component.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Component,ChangeDetectionStrategy, OnInit, } from \"@angular/core\";\nimport { ImageData, ImageService } from \"../image-data.service\";\nimport { Observable, Subject } from \"rxjs\";\nimport { takeUntil, throttleTime } from \"rxjs/operators\";\nimport { MatDialog } from '@angular/material/dialog';\nimport { MatDatepickerInputEvent } from '@angular/material/datepicker';\nimport { Gallery, GalleryItem, ImageItem } from '@ngx-gallery/core';\nimport { Lightbox } from '@ngx-gallery/lightbox';\n\nimport 'hammerjs';\n\n\n\n@Component({\n  selector: \"app-webcam\",\n  templateUrl: \"./webcam.component.html\",\n  styleUrls: [\"./webcam.component.scss\"],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class WebcamComponent implements OnInit {\n  \n  todayPics:GalleryItem[];\n  TodayImages: ImageData[] =[];\n\n  recentPics: GalleryItem[];\n  RecentImages: ImageData[] = [];\n\n  yesterdayPics: GalleryItem[];\n  YesterdayImages: ImageData[] = [];\n\n  DatePics: GalleryItem[];\n  DateImages: ImageData[] = [];\n\n\n  ImageService: ImageService;\n\n  destroy$: Subject = new Subject();\n  \n  startdateEvents: Date;\n  panelOpenState = false;\n\n\n  constructor(ImageService: ImageService,public gallery: Gallery,public today: Gallery,public yesterday:Gallery,public dategallery:Gallery, public lightbox: Lightbox) {\n    this.ImageService = ImageService;\n  }\n\n  ngOnInit() {\n    \n    this.ImageService.getrecentImages()\n    .pipe(takeUntil(this.destroy$))\n      .subscribe((data) => {\n        this.RecentImages = data;\n        this.loadrecentPics();\n      })\n      this.gallery.ref('lightbox', {imageSize: 'cover', loadingStrategy: 'lazy', thumbPosition: 'top'}).load(this.recentPics);\n      console.log(this.recentPics)\n\n\n \n      // This is for Lightbox example\n      \n      console.log(this.gallery)\n\n    }\n  \n\n    loadrecentPics(){\n      this.recentPics=this.RecentImages.map(data => {\n        return new ImageItem({src:data.image,thumb:data.image})\n      });\n    }\n    \n    loadtodayPics(){\n      this.ImageService.getTodayImages()\n      .pipe(takeUntil(this.destroy$))\n      .subscribe((data)=>{\n        this.TodayImages=data;\n        this.todayPics=this.TodayImages.map(data=>{\n          return new ImageItem({src:data.image,thumb:data.image})\n        });\n      this.today.ref('today', {imageSize: 'cover', loadingStrategy: 'lazy', thumbPosition: 'top'}).load(this.todayPics);\n        \n      })\n \n    }\n\n    loadyesterdayPics(){\n      this.ImageService.getYesterdayImages()\n      .pipe(takeUntil(this.destroy$))\n      .subscribe((data)=>{\n        this.YesterdayImages=data;\n        this.yesterdayPics=this.YesterdayImages.map(data=>{\n          return new ImageItem({src:data.image,thumb:data.image})\n        });\n        this.gallery.ref('yesterday', {imageSize: 'cover', loadingStrategy: 'lazy', thumbPosition: 'top'}).load(this.yesterdayPics);\n      })\n    }\n\n    \n    openLightbox(index:number,galleryid:string) {\n     \n      this.lightbox.open(index, galleryid);\n    }\n    \n    \n    loaddatePics(){\n      this.ImageService.getDateImages(this.startdateEvents)\n      .pipe(takeUntil(this.destroy$))\n      .subscribe((data)=>{\n        this.DateImages=data;\n        this.DatePics=this.DateImages.map(data=>{\n          return new ImageItem({src:data.image,thumb:data.image})\n        });\n        this.today.ref('dategallery', {imageSize: 'cover', loadingStrategy: 'lazy', thumbPosition: 'top'}).load(this.DatePics);\n      })\n    }\n\n\n    /*Eventhandles for Timeframe */\n    addDateEvent(event: MatDatepickerInputEvent) {\n      this.startdateEvents=event.value;\n    console.log(this.startdateEvents)\n      this.loaddatePics();\n\n  }\n  \n\n  ngOnDestroy() {\n    this.destroy$.next(true);\n    this.destroy$.unsubscribe();\n  }\n\n\n  }\n\nexport class NgbdDropdownBasic {\n  \n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/RaspberryData.html":{"url":"interfaces/RaspberryData.html","title":"interface - RaspberryData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  RaspberryData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/adminpanel-data.service.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        current\n                                \n                                \n                                        id\n                                \n                                \n                                        measure_time\n                                \n                                \n                                        voltage\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        current\n                                    \n                                \n                                \n                                    \n                                        current:         Number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         Number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        measure_time\n                                    \n                                \n                                \n                                    \n                                        measure_time:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        voltage\n                                    \n                                \n                                \n                                    \n                                        voltage:         Number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {HttpClient} from \"@angular/common/http\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AdminpanelDataService {\n  private apiUrl = 'http://localhost:8000/api/';\n  private http: HttpClient;\n\n  constructor(http: HttpClient) {\n    this.http = http;\n  }\n\n  formatDate(date: Date) {\n    var d = new Date(date),\n        month = '' + (d.getMonth() + 1),\n        day = '' + d.getDate(),\n        year = d.getFullYear();\n\n    if (month.length (this.apiUrl + 'solarcell/aggregate/?start='+this.formatDate(today));\n  }\n\n  getBatteryData(time: number){\n    let today=  new Date();\n    let yesterday = today.getDate()-time;\n    today.setDate(yesterday);\n  \n  return  this.http.get(this.apiUrl + 'battery/aggregate/?start='+this.formatDate(today));\n  }\n\n  getRaspberryData(time: number){\n    let today=  new Date();\n    let yesterday = today.getDate()-time;\n    today.setDate(yesterday);\n  \n  return  this.http.get(this.apiUrl + 'solarcell/aggregate/?start='+this.formatDate(today));\n  }\n\n  getVolumeData(time: number){\n    let today=  new Date();\n    let yesterday = today.getDate()-time;\n    today.setDate(yesterday);\n  \n  return  this.http.get(this.apiUrl + 'data-volume/?start='+this.formatDate(today));\n  }\n\n  getSolarDataFrame(start:Date,end:Date){\n    return this.http.get(this.apiUrl+'solarcell/aggregate/?start='+this.formatDate(start)+'&end='+this.formatDate(end));\n  }\n\n  getBatteryDataFrame(start:Date,end:Date){\n    return this.http.get(this.apiUrl+'battery/aggregate/?start='+this.formatDate(start)+'&end='+this.formatDate(end));\n  }\n\n  getRaspberryDataFrame(start:Date,end:Date){\n    return this.http.get(this.apiUrl+'solarcell/aggregate/?start='+this.formatDate(start)+'&end='+this.formatDate(end));\n  }\n\n  getVolumeDataFrame(start:Date,end:Date){\n    return this.http.get(this.apiUrl+'solarcell/aggregate/?start='+this.formatDate(start)+'&end='+this.formatDate(end));\n  }\n}\n\nexport interface SolarData {\n  id: Number,\n  current: Number,\n  voltage: Number,\n  measure_time: Date\n}\n\nexport interface BatteryData {\n  id: Number,\n  current: Number,\n  voltage: Number,\n  degrees: Number,\n  measure_time: Date\n}\n\nexport interface RaspberryData {\n  id: Number,\n  current: Number,\n  voltage: Number,\n  measure_time: Date\n}\n\nexport interface VolumeData {\n  id: Number,\n  image_size: Number\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SolarData.html":{"url":"interfaces/SolarData.html","title":"interface - SolarData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  SolarData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/adminpanel-data.service.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        current\n                                \n                                \n                                        id\n                                \n                                \n                                        measure_time\n                                \n                                \n                                        voltage\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        current\n                                    \n                                \n                                \n                                    \n                                        current:         Number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         Number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        measure_time\n                                    \n                                \n                                \n                                    \n                                        measure_time:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        voltage\n                                    \n                                \n                                \n                                    \n                                        voltage:         Number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {HttpClient} from \"@angular/common/http\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AdminpanelDataService {\n  private apiUrl = 'http://localhost:8000/api/';\n  private http: HttpClient;\n\n  constructor(http: HttpClient) {\n    this.http = http;\n  }\n\n  formatDate(date: Date) {\n    var d = new Date(date),\n        month = '' + (d.getMonth() + 1),\n        day = '' + d.getDate(),\n        year = d.getFullYear();\n\n    if (month.length (this.apiUrl + 'solarcell/aggregate/?start='+this.formatDate(today));\n  }\n\n  getBatteryData(time: number){\n    let today=  new Date();\n    let yesterday = today.getDate()-time;\n    today.setDate(yesterday);\n  \n  return  this.http.get(this.apiUrl + 'battery/aggregate/?start='+this.formatDate(today));\n  }\n\n  getRaspberryData(time: number){\n    let today=  new Date();\n    let yesterday = today.getDate()-time;\n    today.setDate(yesterday);\n  \n  return  this.http.get(this.apiUrl + 'solarcell/aggregate/?start='+this.formatDate(today));\n  }\n\n  getVolumeData(time: number){\n    let today=  new Date();\n    let yesterday = today.getDate()-time;\n    today.setDate(yesterday);\n  \n  return  this.http.get(this.apiUrl + 'data-volume/?start='+this.formatDate(today));\n  }\n\n  getSolarDataFrame(start:Date,end:Date){\n    return this.http.get(this.apiUrl+'solarcell/aggregate/?start='+this.formatDate(start)+'&end='+this.formatDate(end));\n  }\n\n  getBatteryDataFrame(start:Date,end:Date){\n    return this.http.get(this.apiUrl+'battery/aggregate/?start='+this.formatDate(start)+'&end='+this.formatDate(end));\n  }\n\n  getRaspberryDataFrame(start:Date,end:Date){\n    return this.http.get(this.apiUrl+'solarcell/aggregate/?start='+this.formatDate(start)+'&end='+this.formatDate(end));\n  }\n\n  getVolumeDataFrame(start:Date,end:Date){\n    return this.http.get(this.apiUrl+'solarcell/aggregate/?start='+this.formatDate(start)+'&end='+this.formatDate(end));\n  }\n}\n\nexport interface SolarData {\n  id: Number,\n  current: Number,\n  voltage: Number,\n  measure_time: Date\n}\n\nexport interface BatteryData {\n  id: Number,\n  current: Number,\n  voltage: Number,\n  degrees: Number,\n  measure_time: Date\n}\n\nexport interface RaspberryData {\n  id: Number,\n  current: Number,\n  voltage: Number,\n  measure_time: Date\n}\n\nexport interface VolumeData {\n  id: Number,\n  image_size: Number\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TemperatureData.html":{"url":"interfaces/TemperatureData.html","title":"interface - TemperatureData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  TemperatureData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/weather-data.service.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        degrees\n                                \n                                \n                                        id\n                                \n                                \n                                        measure_time\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        degrees\n                                    \n                                \n                                \n                                    \n                                        degrees:         Number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         Number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        measure_time\n                                    \n                                \n                                \n                                    \n                                        measure_time:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {HttpClient} from \"@angular/common/http\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class WeatherDataService {\n  private apiUrl = 'http://127.0.0.1:8000/api/';\n  private http: HttpClient;\n\n  constructor(http: HttpClient) {\n    this.http = http;\n  }\n\n  formatDate(date: Date) {\n    var d = new Date(date),\n        month = '' + (d.getMonth() + 1),\n        day = '' + d.getDate(),\n        year = d.getFullYear();\n\n    if (month.length (this.apiUrl + 'temps/aggregate/?start='+this.formatDate(today));\n\n  }  \n  getWindData(time: number){\n    let today=  new Date();\n \n  \n  return  this.http.get(this.apiUrl + 'wind/recent/?start='+this.formatDate(today));\n}\n\ngetWindDataFrame(start:Date,end:Date){\n  return this.http.get(this.apiUrl+'wind/recent/?start='+this.formatDate(start)+'&end='+this.formatDate(end));\n\n}\n\ngetTemperaturesDataFrame(start:Date,end:Date){\n  \n  return this.http.get(this.apiUrl+'temps/aggregate/?start='+this.formatDate(start)+'&end='+this.formatDate(end));\n\n}\ngetRecentWind(){\n  return this.http.get(this.apiUrl+'wind/recent')\n}\n\n\n}\n\nexport interface WindData {\n  id: Number,\n  speed: Number,\n  direction: Number,\n  measure_time: Date\n\n}\n\nexport interface TemperatureData {\n  id: Number,\n  degrees: Number,\n  measure_time: Date\n}\n\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/VolumeData.html":{"url":"interfaces/VolumeData.html","title":"interface - VolumeData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  VolumeData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/adminpanel-data.service.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        id\n                                \n                                \n                                        image_size\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         Number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        image_size\n                                    \n                                \n                                \n                                    \n                                        image_size:         Number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {HttpClient} from \"@angular/common/http\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AdminpanelDataService {\n  private apiUrl = 'http://localhost:8000/api/';\n  private http: HttpClient;\n\n  constructor(http: HttpClient) {\n    this.http = http;\n  }\n\n  formatDate(date: Date) {\n    var d = new Date(date),\n        month = '' + (d.getMonth() + 1),\n        day = '' + d.getDate(),\n        year = d.getFullYear();\n\n    if (month.length (this.apiUrl + 'solarcell/aggregate/?start='+this.formatDate(today));\n  }\n\n  getBatteryData(time: number){\n    let today=  new Date();\n    let yesterday = today.getDate()-time;\n    today.setDate(yesterday);\n  \n  return  this.http.get(this.apiUrl + 'battery/aggregate/?start='+this.formatDate(today));\n  }\n\n  getRaspberryData(time: number){\n    let today=  new Date();\n    let yesterday = today.getDate()-time;\n    today.setDate(yesterday);\n  \n  return  this.http.get(this.apiUrl + 'solarcell/aggregate/?start='+this.formatDate(today));\n  }\n\n  getVolumeData(time: number){\n    let today=  new Date();\n    let yesterday = today.getDate()-time;\n    today.setDate(yesterday);\n  \n  return  this.http.get(this.apiUrl + 'data-volume/?start='+this.formatDate(today));\n  }\n\n  getSolarDataFrame(start:Date,end:Date){\n    return this.http.get(this.apiUrl+'solarcell/aggregate/?start='+this.formatDate(start)+'&end='+this.formatDate(end));\n  }\n\n  getBatteryDataFrame(start:Date,end:Date){\n    return this.http.get(this.apiUrl+'battery/aggregate/?start='+this.formatDate(start)+'&end='+this.formatDate(end));\n  }\n\n  getRaspberryDataFrame(start:Date,end:Date){\n    return this.http.get(this.apiUrl+'solarcell/aggregate/?start='+this.formatDate(start)+'&end='+this.formatDate(end));\n  }\n\n  getVolumeDataFrame(start:Date,end:Date){\n    return this.http.get(this.apiUrl+'solarcell/aggregate/?start='+this.formatDate(start)+'&end='+this.formatDate(end));\n  }\n}\n\nexport interface SolarData {\n  id: Number,\n  current: Number,\n  voltage: Number,\n  measure_time: Date\n}\n\nexport interface BatteryData {\n  id: Number,\n  current: Number,\n  voltage: Number,\n  degrees: Number,\n  measure_time: Date\n}\n\nexport interface RaspberryData {\n  id: Number,\n  current: Number,\n  voltage: Number,\n  measure_time: Date\n}\n\nexport interface VolumeData {\n  id: Number,\n  image_size: Number\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/WeatherDataService.html":{"url":"injectables/WeatherDataService.html","title":"injectable - WeatherDataService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  WeatherDataService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/weather-data.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                apiUrl\n                            \n                            \n                                    Private\n                                http\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                formatDate\n                            \n                            \n                                getRecentWind\n                            \n                            \n                                getTemperatures\n                            \n                            \n                                getTemperaturesDataFrame\n                            \n                            \n                                getWindData\n                            \n                            \n                                getWindDataFrame\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/weather-data.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            formatDate\n                        \n                        \n                    \n                \n            \n            \n                \nformatDate(date: Date)\n                \n            \n\n\n            \n                \n                    Defined in src/app/weather-data.service.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    date\n                                    \n                                                Date\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getRecentWind\n                        \n                        \n                    \n                \n            \n            \n                \ngetRecentWind()\n                \n            \n\n\n            \n                \n                    Defined in src/app/weather-data.service.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getTemperatures\n                        \n                        \n                    \n                \n            \n            \n                \ngetTemperatures(time: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/weather-data.service.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    time\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getTemperaturesDataFrame\n                        \n                        \n                    \n                \n            \n            \n                \ngetTemperaturesDataFrame(start: Date, end: Date)\n                \n            \n\n\n            \n                \n                    Defined in src/app/weather-data.service.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    start\n                                    \n                                                Date\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    end\n                                    \n                                                Date\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getWindData\n                        \n                        \n                    \n                \n            \n            \n                \ngetWindData(time: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/weather-data.service.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    time\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getWindDataFrame\n                        \n                        \n                    \n                \n            \n            \n                \ngetWindDataFrame(start: Date, end: Date)\n                \n            \n\n\n            \n                \n                    Defined in src/app/weather-data.service.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    start\n                                    \n                                                Date\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    end\n                                    \n                                                Date\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            apiUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'http://127.0.0.1:8000/api/'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/weather-data.service.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            http\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         HttpClient\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/weather-data.service.ts:9\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {HttpClient} from \"@angular/common/http\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class WeatherDataService {\n  private apiUrl = 'http://127.0.0.1:8000/api/';\n  private http: HttpClient;\n\n  constructor(http: HttpClient) {\n    this.http = http;\n  }\n\n  formatDate(date: Date) {\n    var d = new Date(date),\n        month = '' + (d.getMonth() + 1),\n        day = '' + d.getDate(),\n        year = d.getFullYear();\n\n    if (month.length (this.apiUrl + 'temps/aggregate/?start='+this.formatDate(today));\n\n  }  \n  getWindData(time: number){\n    let today=  new Date();\n \n  \n  return  this.http.get(this.apiUrl + 'wind/recent/?start='+this.formatDate(today));\n}\n\ngetWindDataFrame(start:Date,end:Date){\n  return this.http.get(this.apiUrl+'wind/recent/?start='+this.formatDate(start)+'&end='+this.formatDate(end));\n\n}\n\ngetTemperaturesDataFrame(start:Date,end:Date){\n  \n  return this.http.get(this.apiUrl+'temps/aggregate/?start='+this.formatDate(start)+'&end='+this.formatDate(end));\n\n}\ngetRecentWind(){\n  return this.http.get(this.apiUrl+'wind/recent')\n}\n\n\n}\n\nexport interface WindData {\n  id: Number,\n  speed: Number,\n  direction: Number,\n  measure_time: Date\n\n}\n\nexport interface TemperatureData {\n  id: Number,\n  degrees: Number,\n  measure_time: Date\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/WebcamComponent.html":{"url":"components/WebcamComponent.html","title":"component - WebcamComponent","body":"\n                   \n\n\n\n\n\n  Components\n  WebcamComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/webcam/webcam.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-webcam\n            \n\n            \n                styleUrls\n                ./webcam.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./webcam.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                dategallery\n                            \n                            \n                                DateImages\n                            \n                            \n                                DatePics\n                            \n                            \n                                destroy$\n                            \n                            \n                                    Public\n                                gallery\n                            \n                            \n                                ImageService\n                            \n                            \n                                    Public\n                                lightbox\n                            \n                            \n                                panelOpenState\n                            \n                            \n                                RecentImages\n                            \n                            \n                                recentPics\n                            \n                            \n                                startdateEvents\n                            \n                            \n                                    Public\n                                today\n                            \n                            \n                                TodayImages\n                            \n                            \n                                todayPics\n                            \n                            \n                                    Public\n                                yesterday\n                            \n                            \n                                YesterdayImages\n                            \n                            \n                                yesterdayPics\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addDateEvent\n                            \n                            \n                                loaddatePics\n                            \n                            \n                                loadrecentPics\n                            \n                            \n                                loadtodayPics\n                            \n                            \n                                loadyesterdayPics\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                openLightbox\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(ImageService: ImageService, gallery: Gallery, today: Gallery, yesterday: Gallery, dategallery: Gallery, lightbox: Lightbox)\n                    \n                \n                        \n                            \n                                Defined in src/app/webcam/webcam.component.ts:40\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        ImageService\n                                                  \n                                                        \n                                                                        ImageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        gallery\n                                                  \n                                                        \n                                                                    Gallery\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        today\n                                                  \n                                                        \n                                                                    Gallery\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        yesterday\n                                                  \n                                                        \n                                                                    Gallery\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dategallery\n                                                  \n                                                        \n                                                                    Gallery\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        lightbox\n                                                  \n                                                        \n                                                                    Lightbox\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            addDateEvent\n                        \n                        \n                    \n                \n            \n            \n                \naddDateEvent(event: MatDatepickerInputEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/app/webcam/webcam.component.ts:120\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                            MatDatepickerInputEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            loaddatePics\n                        \n                        \n                    \n                \n            \n            \n                \nloaddatePics()\n                \n            \n\n\n            \n                \n                    Defined in src/app/webcam/webcam.component.ts:106\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            loadrecentPics\n                        \n                        \n                    \n                \n            \n            \n                \nloadrecentPics()\n                \n            \n\n\n            \n                \n                    Defined in src/app/webcam/webcam.component.ts:67\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            loadtodayPics\n                        \n                        \n                    \n                \n            \n            \n                \nloadtodayPics()\n                \n            \n\n\n            \n                \n                    Defined in src/app/webcam/webcam.component.ts:73\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            loadyesterdayPics\n                        \n                        \n                    \n                \n            \n            \n                \nloadyesterdayPics()\n                \n            \n\n\n            \n                \n                    Defined in src/app/webcam/webcam.component.ts:87\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/webcam/webcam.component.ts:128\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/webcam/webcam.component.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            openLightbox\n                        \n                        \n                    \n                \n            \n            \n                \nopenLightbox(index: number, galleryid: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/webcam/webcam.component.ts:100\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    galleryid\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dategallery\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Gallery\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/webcam/webcam.component.ts:43\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            DateImages\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ImageData[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/webcam/webcam.component.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            DatePics\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     GalleryItem[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/webcam/webcam.component.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            destroy$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subject\n\n                        \n                    \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/webcam/webcam.component.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            gallery\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Gallery\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/webcam/webcam.component.ts:43\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ImageService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ImageService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/webcam/webcam.component.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            lightbox\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Lightbox\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/webcam/webcam.component.ts:43\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            panelOpenState\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/webcam/webcam.component.ts:40\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            RecentImages\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ImageData[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/webcam/webcam.component.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            recentPics\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     GalleryItem[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/webcam/webcam.component.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            startdateEvents\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/webcam/webcam.component.ts:39\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            today\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Gallery\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/webcam/webcam.component.ts:43\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            TodayImages\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ImageData[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/webcam/webcam.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            todayPics\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     GalleryItem[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/webcam/webcam.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            yesterday\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Gallery\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/webcam/webcam.component.ts:43\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            YesterdayImages\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ImageData[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/webcam/webcam.component.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            yesterdayPics\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     GalleryItem[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/webcam/webcam.component.ts:28\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component,ChangeDetectionStrategy, OnInit, } from \"@angular/core\";\nimport { ImageData, ImageService } from \"../image-data.service\";\nimport { Observable, Subject } from \"rxjs\";\nimport { takeUntil, throttleTime } from \"rxjs/operators\";\nimport { MatDialog } from '@angular/material/dialog';\nimport { MatDatepickerInputEvent } from '@angular/material/datepicker';\nimport { Gallery, GalleryItem, ImageItem } from '@ngx-gallery/core';\nimport { Lightbox } from '@ngx-gallery/lightbox';\n\nimport 'hammerjs';\n\n\n\n@Component({\n  selector: \"app-webcam\",\n  templateUrl: \"./webcam.component.html\",\n  styleUrls: [\"./webcam.component.scss\"],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class WebcamComponent implements OnInit {\n  \n  todayPics:GalleryItem[];\n  TodayImages: ImageData[] =[];\n\n  recentPics: GalleryItem[];\n  RecentImages: ImageData[] = [];\n\n  yesterdayPics: GalleryItem[];\n  YesterdayImages: ImageData[] = [];\n\n  DatePics: GalleryItem[];\n  DateImages: ImageData[] = [];\n\n\n  ImageService: ImageService;\n\n  destroy$: Subject = new Subject();\n  \n  startdateEvents: Date;\n  panelOpenState = false;\n\n\n  constructor(ImageService: ImageService,public gallery: Gallery,public today: Gallery,public yesterday:Gallery,public dategallery:Gallery, public lightbox: Lightbox) {\n    this.ImageService = ImageService;\n  }\n\n  ngOnInit() {\n    \n    this.ImageService.getrecentImages()\n    .pipe(takeUntil(this.destroy$))\n      .subscribe((data) => {\n        this.RecentImages = data;\n        this.loadrecentPics();\n      })\n      this.gallery.ref('lightbox', {imageSize: 'cover', loadingStrategy: 'lazy', thumbPosition: 'top'}).load(this.recentPics);\n      console.log(this.recentPics)\n\n\n \n      // This is for Lightbox example\n      \n      console.log(this.gallery)\n\n    }\n  \n\n    loadrecentPics(){\n      this.recentPics=this.RecentImages.map(data => {\n        return new ImageItem({src:data.image,thumb:data.image})\n      });\n    }\n    \n    loadtodayPics(){\n      this.ImageService.getTodayImages()\n      .pipe(takeUntil(this.destroy$))\n      .subscribe((data)=>{\n        this.TodayImages=data;\n        this.todayPics=this.TodayImages.map(data=>{\n          return new ImageItem({src:data.image,thumb:data.image})\n        });\n      this.today.ref('today', {imageSize: 'cover', loadingStrategy: 'lazy', thumbPosition: 'top'}).load(this.todayPics);\n        \n      })\n \n    }\n\n    loadyesterdayPics(){\n      this.ImageService.getYesterdayImages()\n      .pipe(takeUntil(this.destroy$))\n      .subscribe((data)=>{\n        this.YesterdayImages=data;\n        this.yesterdayPics=this.YesterdayImages.map(data=>{\n          return new ImageItem({src:data.image,thumb:data.image})\n        });\n        this.gallery.ref('yesterday', {imageSize: 'cover', loadingStrategy: 'lazy', thumbPosition: 'top'}).load(this.yesterdayPics);\n      })\n    }\n\n    \n    openLightbox(index:number,galleryid:string) {\n     \n      this.lightbox.open(index, galleryid);\n    }\n    \n    \n    loaddatePics(){\n      this.ImageService.getDateImages(this.startdateEvents)\n      .pipe(takeUntil(this.destroy$))\n      .subscribe((data)=>{\n        this.DateImages=data;\n        this.DatePics=this.DateImages.map(data=>{\n          return new ImageItem({src:data.image,thumb:data.image})\n        });\n        this.today.ref('dategallery', {imageSize: 'cover', loadingStrategy: 'lazy', thumbPosition: 'top'}).load(this.DatePics);\n      })\n    }\n\n\n    /*Eventhandles for Timeframe */\n    addDateEvent(event: MatDatepickerInputEvent) {\n      this.startdateEvents=event.value;\n    console.log(this.startdateEvents)\n      this.loaddatePics();\n\n  }\n  \n\n  ngOnDestroy() {\n    this.destroy$.next(true);\n    this.destroy$.unsubscribe();\n  }\n\n\n  }\n\nexport class NgbdDropdownBasic {\n  \n}\n\n    \n\n    \n        \n\n\n\n  \n  \n  Document\n  \n  \n\n\n\n  \n\n    \n      \n        \n      \n      \n        \n      \n      \n        \n      \n      \n        \n      \n      \n        \n      \n    \n\n  \n\n\n  \n    \n      \n        \n          Heute\n        \n        \n          Dies sind alle aufgenommenen Bilder von heute.\n        \n      \n      \n        \n          \n            \n\n\n          \n        \n      \n    \n  \n\n\n  \n    \n      \n        \n          Gestern\n        \n        \n          Dies sind alle aufgenommenen Bilder von gestern.\n        \n      \n\n      \n        \n          \n            \n          \n        \n      \n    \n  \n\n\n  \n    \n      \n        \n          Datum wählen\n        \n        \n          Lassen Sie sich die Bilder von einem Tag anzeigen\n        \n      \n        \n          Wählen Sie ein Datum\n          \n          \n          \n        \n        \n        \n          \n            \n              \n  \n  \n            \n          \n        \n    \n  \n\n\n  \n    \n  \n\n\n\n\n\n\n\n    \n\n    \n                \n                    ./webcam.component.scss\n                \n                .imageone {\n  margin-left: 15%;\n  display: inline;\n  clear: both;\n}\n\n.imageone img {\n  width: 70%;\n  height: auto;\n}\n\n.container {\n  position: relative;\n  display: none;\n}\n\n#imgtext {\n  position: absolute;\n  bottom: 15px;\n  left: 15px;\n  color: white;\n  font-size: 20px;\n}\n\n.closebtn {\n  position: absolute;\n  top: 10px;\n  right: 15px;\n  color: white;\n  font-size: 35px;\n  cursor: pointer;\n}\n\n\n.mat-sidenav-container, .mat-sidenav-content, .mat-tab-body-content {\n  transform: none !important;\n}\n\n.mat-card{\n  margin-top: 0.25em;\n  margin-bottom: 0.25em;\n}\n.mat-expansion-panel{\n  margin-top: 0.25em;\n  margin-bottom: 0.25em;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Document                                                                                                                                                  Heute                          Dies sind alle aufgenommenen Bilder von heute.                                                                                                              Gestern                          Dies sind alle aufgenommenen Bilder von gestern.                                                                                                              Datum wählen                          Lassen Sie sich die Bilder von einem Tag anzeigen                                Wählen Sie ein Datum                                                                                                                                          '\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AdminpanelComponent', 'selector': 'app-adminpanel'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'GraphsComponent', 'selector': 'app-graphs'},{'name': 'WebcamComponent', 'selector': 'app-webcam'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'WebcamComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   "},"interfaces/WindData.html":{"url":"interfaces/WindData.html","title":"interface - WindData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  WindData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/weather-data.service.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        direction\n                                \n                                \n                                        id\n                                \n                                \n                                        measure_time\n                                \n                                \n                                        speed\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        direction\n                                    \n                                \n                                \n                                    \n                                        direction:         Number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         Number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        measure_time\n                                    \n                                \n                                \n                                    \n                                        measure_time:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        speed\n                                    \n                                \n                                \n                                    \n                                        speed:         Number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {HttpClient} from \"@angular/common/http\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class WeatherDataService {\n  private apiUrl = 'http://127.0.0.1:8000/api/';\n  private http: HttpClient;\n\n  constructor(http: HttpClient) {\n    this.http = http;\n  }\n\n  formatDate(date: Date) {\n    var d = new Date(date),\n        month = '' + (d.getMonth() + 1),\n        day = '' + d.getDate(),\n        year = d.getFullYear();\n\n    if (month.length (this.apiUrl + 'temps/aggregate/?start='+this.formatDate(today));\n\n  }  \n  getWindData(time: number){\n    let today=  new Date();\n \n  \n  return  this.http.get(this.apiUrl + 'wind/recent/?start='+this.formatDate(today));\n}\n\ngetWindDataFrame(start:Date,end:Date){\n  return this.http.get(this.apiUrl+'wind/recent/?start='+this.formatDate(start)+'&end='+this.formatDate(end));\n\n}\n\ngetTemperaturesDataFrame(start:Date,end:Date){\n  \n  return this.http.get(this.apiUrl+'temps/aggregate/?start='+this.formatDate(start)+'&end='+this.formatDate(end));\n\n}\ngetRecentWind(){\n  return this.http.get(this.apiUrl+'wind/recent')\n}\n\n\n}\n\nexport interface WindData {\n  id: Number,\n  speed: Number,\n  direction: Number,\n  measure_time: Date\n\n}\n\nexport interface TemperatureData {\n  id: Number,\n  degrees: Number,\n  measure_time: Date\n}\n\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                e2e/src/app.po.ts\n            \n            class\n            AppPage\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/admin.service.ts\n            \n            injectable\n            AdminService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/admin.service.ts\n            \n            interface\n            AuthToken\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/admin/admin.component.ts\n            \n            component\n            AdminComponent\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/app/adminpanel-data.service.ts\n            \n            injectable\n            AdminpanelDataService\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/app/adminpanel-data.service.ts\n            \n            interface\n            BatteryData\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/adminpanel-data.service.ts\n            \n            interface\n            RaspberryData\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/adminpanel-data.service.ts\n            \n            interface\n            SolarData\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/adminpanel-data.service.ts\n            \n            interface\n            VolumeData\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/adminpanel/adminpanel.component.ts\n            \n            component\n            AdminpanelComponent\n            \n                0 %\n                (0/38)\n            \n        \n        \n            \n                \n                src/app/adminpanel/adminpanel.component.ts\n            \n            interface\n            raspyActions\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/adminpanel/adminpanel.component.ts\n            \n            interface\n            sensorActions\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/adminpanel/adminpanel.component.ts\n            \n            variable\n            add\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/adminpanel/adminpanel.component.ts\n            \n            variable\n            dates\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/adminpanel/adminpanel.component.ts\n            \n            variable\n            logData\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/adminpanel/adminpanel.component.ts\n            \n            variable\n            sensorData\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/auth-guard.service.ts\n            \n            guard\n            AuthGuardService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/graphs/graphs.component.ts\n            \n            component\n            GraphsComponent\n            \n                0 %\n                (0/36)\n            \n        \n        \n            \n                \n                src/app/image-data.service.ts\n            \n            injectable\n            ImageService\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/image-data.service.ts\n            \n            interface\n            ImageData\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/weather-data.service.ts\n            \n            injectable\n            WeatherDataService\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/weather-data.service.ts\n            \n            interface\n            TemperatureData\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/weather-data.service.ts\n            \n            interface\n            WindData\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/webcam/webcam.component.ts\n            \n            component\n            WebcamComponent\n            \n                0 %\n                (0/27)\n            \n        \n        \n            \n                \n                src/app/webcam/webcam.component.ts\n            \n            class\n            NgbdDropdownBasic\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            variable\n            context\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            variable\n            require\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular-devkit/schematics : ^9.1.8\n        \n            @angular/animations : ^9.1.7\n        \n            @angular/cdk : ^9.2.4\n        \n            @angular/common : ^9.1.7\n        \n            @angular/compiler : ^9.1.7\n        \n            @angular/core : ^9.1.7\n        \n            @angular/forms : ^9.1.7\n        \n            @angular/material : ^9.2.4\n        \n            @angular/platform-browser : ^9.1.7\n        \n            @angular/platform-browser-dynamic : ^9.1.7\n        \n            @angular/router : ^9.1.7\n        \n            @auth0/angular-jwt : ^5.0.1\n        \n            @ngx-gallery/core : ^5.0.0-beta.0\n        \n            @ngx-gallery/gallerize : ^5.0.0-beta.0\n        \n            @ngx-gallery/lightbox : ^5.0.0-beta.0\n        \n            angular-bootstrap-md : ^9.3.0\n        \n            chart.js : ^2.9.3\n        \n            core-js : ^3.6.5\n        \n            hammerjs : ^2.0.8\n        \n            mdbootstrap : ^4.18.0\n        \n            ngx-gallery : ^5.10.0\n        \n            rxjs : ~6.5.5\n        \n            tslib : ^1.13.0\n        \n            zone.js : ~0.10.2\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nWetterstation Frontend\nThis project was generated with Angular CLI version 8.3.19.\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The app will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory. Use the --prod flag for a production build.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via Protractor.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI README.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAdminComponent\n\nAdminComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAdminComponent->AppModule\n\n\n\n\n\nAdminpanelComponent\n\nAdminpanelComponent\n\nAppModule -->\n\nAdminpanelComponent->AppModule\n\n\n\n\n\nAppComponent\n\nAppComponent\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nGraphsComponent\n\nGraphsComponent\n\nAppModule -->\n\nGraphsComponent->AppModule\n\n\n\n\n\nWebcamComponent\n\nWebcamComponent\n\nAppModule -->\n\nWebcamComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nImageService\n\nImageService\n\nAppModule -->\n\nImageService->AppModule\n\n\n\n\n\nWeatherDataService\n\nWeatherDataService\n\nAppModule -->\n\nWeatherDataService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        2 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    5 Components\n                \n            \n        \n        \n            \n                \n                    \n                    5 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    2 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Guard\n                \n            \n        \n        \n            \n                \n                    \n                    10 Interfaces\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        4 Routes\n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/raspyActions.html":{"url":"interfaces/raspyActions.html","title":"interface - raspyActions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  raspyActions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/adminpanel/adminpanel.component.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        action\n                                \n                                \n                                        date\n                                \n                                \n                                        name\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        action\n                                    \n                                \n                                \n                                    \n                                        action:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        date\n                                    \n                                \n                                \n                                    \n                                        date:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { SolarData, AdminpanelDataService, BatteryData, VolumeData, RaspberryData } from \"../adminpanel-data.service\";\nimport { MatButtonToggleChange } from '@angular/material/button-toggle';\nimport { MatDatepickerInputEvent } from '@angular/material/datepicker';\nimport { BehaviorSubject, Subscription } from 'rxjs';\nimport { Chart } from 'chart.js';\n\n\nvar dates = ['25.05.2020', '26.05.2020', '27.05.2020']\n\nexport interface raspyActions {\n  date: string;\n  name: string;\n  action: string;\n}\n\nexport interface sensorActions {\n  sensor: string;\n  status: string;\n}\n\nconst add = (a, b) => a + b;\nconst logData: raspyActions[] = [];\nconst sensorData: sensorActions[] = [\n  { sensor: \"Temperatur\", status: \"OK\" },\n  { sensor: \"Wind\", status: \"OK\" },\n  { sensor: \"Spannung Raspberry\", status: \"OK\" },\n  { sensor: \"Strom Raspberry\", status: \"OK\" },\n  { sensor: \"Spannung Photovoltaik\", status: \"OK\" },\n  { sensor: \"Strom Photovoltaik\", status: \"OK\" },\n  { sensor: \"Leistungsaufnahme\", status: \"OK\" },\n  { sensor: \"Ladestrom\", status: \"OK\" }\n];\n\n@Component({\n  selector: 'app-adminpanel',\n  templateUrl: './adminpanel.component.html',\n  styleUrls: ['./adminpanel.component.scss']\n})\n\nexport class AdminpanelComponent implements OnInit {\n\n  adminpanelDataService: AdminpanelDataService;\n  solarData: SolarData[] = [];\n  batteryData: BatteryData[] = [];\n  raspberryData: RaspberryData[] = [];\n  volumeData: VolumeData[] = [];\n  extendedModeStatus: BehaviorSubject;\n  lastEvent: MatButtonToggleChange;\n\n  startdateEvents: string[] = [];\n  enddateEvents: string[] = [];\n\n  //Gibt für [hidden] an, ob die Leistungsaufnahme ausgewählt wurde oder nicht\n  volIsToggled: boolean = true;\n\n  adminpanelDataSubscription: Subscription;\n\n\n  chart: Chart;\n  chartnames: String[] = [\"Solarzelle\", \"Akku\", \"Raspberry\", \"Datenverbrauch\"];\n  chartlabels: String[] = ['Spannung in Volt', 'Stromstärke in A', 'Leistung in Watt', 'Datenmenge in Byte']\n\n  chartdatasets = [\n    [//Solarzelle\n      {\n        label: \"Spannung\",\n        borderColor: \"#013ADF\",\n        yAxisID: 'voltage',\n        data: this.solarData.map(datasolar => datasolar.voltage),\n        fill: false\n      },\n      {\n        label: \"Leistung\",\n        borderColor: \"#FF0000\",\n        yAxisID: 'watt',\n        data: [1, 2, 1.8],\n        fill: false\n      }],\n    [\n      {\n        //Akku\n        label: \"Spannung\",\n        borderColor: \"#013ADF\",\n        yAxisID: 'voltage',\n        data: [],\n        fill: false\n      },\n      {\n        label: \"Ladestrom\",\n        borderColor: \"#FF0000\",\n        yAxisID: 'current',\n        data: [],\n        fill: false\n      }\n    ],\n    [//Raspi\n      {\n        label: \"Lastspannung\",\n        borderColor: \"#013ADF\",\n        yAxisID: 'voltage',\n        data: [1.8, 2, 0.9],//TODO\n        fill: false\n      },\n      {\n        label: \"Lastleistung\",\n        borderColor: \"#FF0000\",\n        yAxisID: 'watt',\n        data: [1, 2, 1.8],//TODO\n        fill: false\n      }],\n    [{\n      label: \"Datenmenge\",\n      borderColor: \"#CE1A9E\",\n      yAxisID: 'volume',\n      data: this.volumeData.map(datavolume => datavolume.image_size),\n      fill: false\n    }]\n  ]\n\nchartoptions={\n  title: {\n    display: true,\n    text: '',\n    fontSize: 20\n  },\n  animation: {\n    duration: 0,\n  },\n  hover: {\n    animationDuration: 0,\n  },\n  responsiveAnimationDuration: 0,\n  scales: {\n    yAxes: [{\n      scaleLabel: {\n        display: true,\n        labelString: 'Spannung in Volt'\n      },\n      id: 'voltage',\n      position: 'left',\n      ticks: {\n        beginAtZero: true\n      }\n    },\n    {\n      scaleLabel: {\n        display: true,\n        labelString: 'Stromstärke in A'\n      },\n      id: 'current',\n      position: 'right',\n      ticks: {\n        beginAtZero: true\n      }\n    },\n    {\n      scaleLabel: {\n        display: true,\n        labelString: 'Leistung in Watt'\n      },\n      id: 'watt',\n      position: 'right',\n      ticks: {\n        beginAtZero: true\n      }\n    },\n    {\n      scaleLabel: {\n        display: true,\n        labelString: 'Datenmenge in Byte'\n      },\n\n      id: 'volume',\n      position: 'left',\n      ticks: {\n        beginAtZero: true\n      }\n    }\n    ]\n  }\n}\n\n  constructor(adminpanelDataService: AdminpanelDataService) {\n    this.adminpanelDataService = adminpanelDataService\n    this.extendedModeStatus = new BehaviorSubject(false)\n  }\n\n  ngOnInit() {\n    this.initData();\n    console.log(this.chartdatasets)\n    \n  }\n\n  diagramChange(event: MatButtonToggleChange) {\n    this.lastEvent = event;\n    if (event.value == \"solar\") {\n      this.volIsToggled = true;\n      this.solarChart();\n    }\n    else if (event.value == \"battery\") {\n      this.volIsToggled = true;\n      this.batteryChart();\n    }\n    else if (event.value == \"raspberry\") {\n      this.volIsToggled = true;\n      this.raspberryChart();\n    }\n    else if (event.value == \"volume\") {\n      this.volIsToggled = false;\n      this.volumeChart();\n    }\n \n  }\n  initData() {\n    var input = 4;\n    var date = new Date();\n    var firstMonthDay = new Date(date.getFullYear(), date.getMonth(), 1);\n    var lastMonthDay = new Date(date.getFullYear(), date.getMonth() + 1, 0);\n\n    this.adminpanelDataSubscription =\n      this.adminpanelDataService.getSolarData(input).subscribe((datasolar) => {\n        this.solarData = datasolar;\n        this.solarChart();\n      });\n\n    this.adminpanelDataSubscription =\n      this.adminpanelDataService.getBatteryData(input).subscribe((databattery) => {\n        this.batteryData = databattery;\n      });\n\n    this.adminpanelDataSubscription =\n      this.adminpanelDataService.getRaspberryData(input).subscribe((datarasp) => {\n        this.raspberryData = datarasp;\n      });\n\n    this.adminpanelDataSubscription =\n      this.adminpanelDataService.getVolumeDataFrame(firstMonthDay,lastMonthDay).subscribe((datavol) => {\n        console.log(datavol)\n        this.volumeData = datavol;\n      });\n  }\n  updateChartLabels() {\n    this.chartlabels\n  }\n\n  displayedLogColumns: string[] = ['date', 'name', 'action'];\n  logTableData = logData;\n\n  displayedSensorColumns: string[] = ['sensor', 'status'];\n  sensorTableData = sensorData;\n\n  solarChart() {\n\n    this.getSolarDataSet();\n    this.buildChart(this.chartdatasets[0], this.chartnames[0], this.solarData.map(data => new Date(data.measure_time).toLocaleString([],{month:'2-digit',day:'2-digit',hour:'2-digit',minute:'2-digit'})))\n  }\n\n  batteryChart() {\n    this.getBatteryDataSet()\n    this.buildChart(this.chartdatasets[1], this.chartnames[1], this.batteryData.map(datesolar => new Date(datesolar.measure_time).toLocaleString([],{month:'2-digit',day:'2-digit',hour:'2-digit',minute:'2-digit'})))\n  }\n\n  raspberryChart() {\n    this.getRaspberryDataSet()\n    this.buildChart(this.chartdatasets[2], this.chartnames[2], this.raspberryData.map(datesolar => new Date(datesolar.measure_time).toLocaleString([],{month:'2-digit',day:'2-digit',hour:'2-digit',minute:'2-digit'})))\n  }\n\n  volumeChart() {\n    this.getVolumeDataSet();\n    this.buildChart(this.chartdatasets[3], this.chartnames[3], this.raspberryData.map(datesolar => new Date(datesolar.measure_time).toLocaleString([],{month:'2-digit',day:'2-digit',hour:'2-digit',minute:'2-digit'})))\n  }\n\n  buildChart(data, diaName, dat) {\n    if(this.chart!=undefined){\n      this.chart.destroy();\n    }\n    let canvas = document.getElementById('elecChart');\n    let dataSet = data;\n    this.chartoptions.title.text=diaName\n  this.chart = new Chart(canvas, {\n      type: 'line',\n      data: {\n        labels: dat,\n        datasets: dataSet\n      },\n      options: this.chartoptions\n    });\n     \n    \n  }\n  getSolarDataSet() {\n    this.chartdatasets[0][0].data = this.solarData.map(datasolar => datasolar.voltage)\n    console.log(this.chartdatasets[0][0].data)\n    this.chartdatasets[0][1].data = [1, 2, 1.8]\n\n  }\n\n  getBatteryDataSet() {\n    this.chartdatasets[1][0].data = this.batteryData.map(data=> data.voltage);//TODO\n    this.chartdatasets[1][1].data = this.batteryData.map(data=> data.current);//TODO\n\n  }\n\n  getRaspberryDataSet() {\n    this.chartdatasets[2][0].data = [1.8, 2, 0.9];//TODO\n    this.chartdatasets[2][1].data = [1, 2, 1.8];//TODO\n  }\n\n  getVolumeDataSet() {\n    this.chartdatasets[3][0].data=this.volumeData.map(datavolume => datavolume.image_size);\n    document.getElementById(\"volSum\").innerHTML = this.chartdatasets[3][0].data.reduce(add).toString(); //Summe der einzelnen Werte im Zeitraum\n    console.log(this.chartdatasets)\n  }\n\n  /*Eventhandles for Timeframe */\n  addStartEvent(event: MatDatepickerInputEvent) {\n    this.startdateEvents.push(`${event.value}`);\n    console.log(this.startdateEvents)\n\n  }\n\n  addEndEvent(event: MatDatepickerInputEvent) {\n    this.enddateEvents.push(`${event.value}`);\n    console.log(this.enddateEvents)\n\n  }\n\n  applyTimeframe() {\n    let startstring = this.startdateEvents[this.startdateEvents.length - 1]\n    let startdate = new Date(startstring);\n    console.log(startdate);\n\n    let endstring = this.enddateEvents[this.enddateEvents.length - 1]\n    let enddate = new Date(endstring);\n    console.log(enddate);\n\n\n    if (enddate > startdate) {\n      this.adminpanelDataSubscription =\n        this.adminpanelDataService.getSolarDataFrame(startdate, enddate).subscribe((data) => {\n          this.solarData = data;\n        });\n\n      this.adminpanelDataSubscription =\n        this.adminpanelDataService.getBatteryDataFrame(startdate, enddate).subscribe((data) => {\n          this.batteryData = data;\n        });\n\n      this.adminpanelDataSubscription =\n        this.adminpanelDataService.getRaspberryDataFrame(startdate, enddate).subscribe((data) => {\n          this.raspberryData = data;\n        });\n\n      this.adminpanelDataSubscription =\n        this.adminpanelDataService.getVolumeDataFrame(startdate, enddate).subscribe((data) => {\n          this.volumeData = data;\n        });\n      if(this.lastEvent != undefined) this.diagramChange(this.lastEvent);\n      else{ this.solarChart() }\n    }\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/sensorActions.html":{"url":"interfaces/sensorActions.html","title":"interface - sensorActions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  sensorActions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/adminpanel/adminpanel.component.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        sensor\n                                \n                                \n                                        status\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        sensor\n                                    \n                                \n                                \n                                    \n                                        sensor:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        status\n                                    \n                                \n                                \n                                    \n                                        status:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { SolarData, AdminpanelDataService, BatteryData, VolumeData, RaspberryData } from \"../adminpanel-data.service\";\nimport { MatButtonToggleChange } from '@angular/material/button-toggle';\nimport { MatDatepickerInputEvent } from '@angular/material/datepicker';\nimport { BehaviorSubject, Subscription } from 'rxjs';\nimport { Chart } from 'chart.js';\n\n\nvar dates = ['25.05.2020', '26.05.2020', '27.05.2020']\n\nexport interface raspyActions {\n  date: string;\n  name: string;\n  action: string;\n}\n\nexport interface sensorActions {\n  sensor: string;\n  status: string;\n}\n\nconst add = (a, b) => a + b;\nconst logData: raspyActions[] = [];\nconst sensorData: sensorActions[] = [\n  { sensor: \"Temperatur\", status: \"OK\" },\n  { sensor: \"Wind\", status: \"OK\" },\n  { sensor: \"Spannung Raspberry\", status: \"OK\" },\n  { sensor: \"Strom Raspberry\", status: \"OK\" },\n  { sensor: \"Spannung Photovoltaik\", status: \"OK\" },\n  { sensor: \"Strom Photovoltaik\", status: \"OK\" },\n  { sensor: \"Leistungsaufnahme\", status: \"OK\" },\n  { sensor: \"Ladestrom\", status: \"OK\" }\n];\n\n@Component({\n  selector: 'app-adminpanel',\n  templateUrl: './adminpanel.component.html',\n  styleUrls: ['./adminpanel.component.scss']\n})\n\nexport class AdminpanelComponent implements OnInit {\n\n  adminpanelDataService: AdminpanelDataService;\n  solarData: SolarData[] = [];\n  batteryData: BatteryData[] = [];\n  raspberryData: RaspberryData[] = [];\n  volumeData: VolumeData[] = [];\n  extendedModeStatus: BehaviorSubject;\n  lastEvent: MatButtonToggleChange;\n\n  startdateEvents: string[] = [];\n  enddateEvents: string[] = [];\n\n  //Gibt für [hidden] an, ob die Leistungsaufnahme ausgewählt wurde oder nicht\n  volIsToggled: boolean = true;\n\n  adminpanelDataSubscription: Subscription;\n\n\n  chart: Chart;\n  chartnames: String[] = [\"Solarzelle\", \"Akku\", \"Raspberry\", \"Datenverbrauch\"];\n  chartlabels: String[] = ['Spannung in Volt', 'Stromstärke in A', 'Leistung in Watt', 'Datenmenge in Byte']\n\n  chartdatasets = [\n    [//Solarzelle\n      {\n        label: \"Spannung\",\n        borderColor: \"#013ADF\",\n        yAxisID: 'voltage',\n        data: this.solarData.map(datasolar => datasolar.voltage),\n        fill: false\n      },\n      {\n        label: \"Leistung\",\n        borderColor: \"#FF0000\",\n        yAxisID: 'watt',\n        data: [1, 2, 1.8],\n        fill: false\n      }],\n    [\n      {\n        //Akku\n        label: \"Spannung\",\n        borderColor: \"#013ADF\",\n        yAxisID: 'voltage',\n        data: [],\n        fill: false\n      },\n      {\n        label: \"Ladestrom\",\n        borderColor: \"#FF0000\",\n        yAxisID: 'current',\n        data: [],\n        fill: false\n      }\n    ],\n    [//Raspi\n      {\n        label: \"Lastspannung\",\n        borderColor: \"#013ADF\",\n        yAxisID: 'voltage',\n        data: [1.8, 2, 0.9],//TODO\n        fill: false\n      },\n      {\n        label: \"Lastleistung\",\n        borderColor: \"#FF0000\",\n        yAxisID: 'watt',\n        data: [1, 2, 1.8],//TODO\n        fill: false\n      }],\n    [{\n      label: \"Datenmenge\",\n      borderColor: \"#CE1A9E\",\n      yAxisID: 'volume',\n      data: this.volumeData.map(datavolume => datavolume.image_size),\n      fill: false\n    }]\n  ]\n\nchartoptions={\n  title: {\n    display: true,\n    text: '',\n    fontSize: 20\n  },\n  animation: {\n    duration: 0,\n  },\n  hover: {\n    animationDuration: 0,\n  },\n  responsiveAnimationDuration: 0,\n  scales: {\n    yAxes: [{\n      scaleLabel: {\n        display: true,\n        labelString: 'Spannung in Volt'\n      },\n      id: 'voltage',\n      position: 'left',\n      ticks: {\n        beginAtZero: true\n      }\n    },\n    {\n      scaleLabel: {\n        display: true,\n        labelString: 'Stromstärke in A'\n      },\n      id: 'current',\n      position: 'right',\n      ticks: {\n        beginAtZero: true\n      }\n    },\n    {\n      scaleLabel: {\n        display: true,\n        labelString: 'Leistung in Watt'\n      },\n      id: 'watt',\n      position: 'right',\n      ticks: {\n        beginAtZero: true\n      }\n    },\n    {\n      scaleLabel: {\n        display: true,\n        labelString: 'Datenmenge in Byte'\n      },\n\n      id: 'volume',\n      position: 'left',\n      ticks: {\n        beginAtZero: true\n      }\n    }\n    ]\n  }\n}\n\n  constructor(adminpanelDataService: AdminpanelDataService) {\n    this.adminpanelDataService = adminpanelDataService\n    this.extendedModeStatus = new BehaviorSubject(false)\n  }\n\n  ngOnInit() {\n    this.initData();\n    console.log(this.chartdatasets)\n    \n  }\n\n  diagramChange(event: MatButtonToggleChange) {\n    this.lastEvent = event;\n    if (event.value == \"solar\") {\n      this.volIsToggled = true;\n      this.solarChart();\n    }\n    else if (event.value == \"battery\") {\n      this.volIsToggled = true;\n      this.batteryChart();\n    }\n    else if (event.value == \"raspberry\") {\n      this.volIsToggled = true;\n      this.raspberryChart();\n    }\n    else if (event.value == \"volume\") {\n      this.volIsToggled = false;\n      this.volumeChart();\n    }\n \n  }\n  initData() {\n    var input = 4;\n    var date = new Date();\n    var firstMonthDay = new Date(date.getFullYear(), date.getMonth(), 1);\n    var lastMonthDay = new Date(date.getFullYear(), date.getMonth() + 1, 0);\n\n    this.adminpanelDataSubscription =\n      this.adminpanelDataService.getSolarData(input).subscribe((datasolar) => {\n        this.solarData = datasolar;\n        this.solarChart();\n      });\n\n    this.adminpanelDataSubscription =\n      this.adminpanelDataService.getBatteryData(input).subscribe((databattery) => {\n        this.batteryData = databattery;\n      });\n\n    this.adminpanelDataSubscription =\n      this.adminpanelDataService.getRaspberryData(input).subscribe((datarasp) => {\n        this.raspberryData = datarasp;\n      });\n\n    this.adminpanelDataSubscription =\n      this.adminpanelDataService.getVolumeDataFrame(firstMonthDay,lastMonthDay).subscribe((datavol) => {\n        console.log(datavol)\n        this.volumeData = datavol;\n      });\n  }\n  updateChartLabels() {\n    this.chartlabels\n  }\n\n  displayedLogColumns: string[] = ['date', 'name', 'action'];\n  logTableData = logData;\n\n  displayedSensorColumns: string[] = ['sensor', 'status'];\n  sensorTableData = sensorData;\n\n  solarChart() {\n\n    this.getSolarDataSet();\n    this.buildChart(this.chartdatasets[0], this.chartnames[0], this.solarData.map(data => new Date(data.measure_time).toLocaleString([],{month:'2-digit',day:'2-digit',hour:'2-digit',minute:'2-digit'})))\n  }\n\n  batteryChart() {\n    this.getBatteryDataSet()\n    this.buildChart(this.chartdatasets[1], this.chartnames[1], this.batteryData.map(datesolar => new Date(datesolar.measure_time).toLocaleString([],{month:'2-digit',day:'2-digit',hour:'2-digit',minute:'2-digit'})))\n  }\n\n  raspberryChart() {\n    this.getRaspberryDataSet()\n    this.buildChart(this.chartdatasets[2], this.chartnames[2], this.raspberryData.map(datesolar => new Date(datesolar.measure_time).toLocaleString([],{month:'2-digit',day:'2-digit',hour:'2-digit',minute:'2-digit'})))\n  }\n\n  volumeChart() {\n    this.getVolumeDataSet();\n    this.buildChart(this.chartdatasets[3], this.chartnames[3], this.raspberryData.map(datesolar => new Date(datesolar.measure_time).toLocaleString([],{month:'2-digit',day:'2-digit',hour:'2-digit',minute:'2-digit'})))\n  }\n\n  buildChart(data, diaName, dat) {\n    if(this.chart!=undefined){\n      this.chart.destroy();\n    }\n    let canvas = document.getElementById('elecChart');\n    let dataSet = data;\n    this.chartoptions.title.text=diaName\n  this.chart = new Chart(canvas, {\n      type: 'line',\n      data: {\n        labels: dat,\n        datasets: dataSet\n      },\n      options: this.chartoptions\n    });\n     \n    \n  }\n  getSolarDataSet() {\n    this.chartdatasets[0][0].data = this.solarData.map(datasolar => datasolar.voltage)\n    console.log(this.chartdatasets[0][0].data)\n    this.chartdatasets[0][1].data = [1, 2, 1.8]\n\n  }\n\n  getBatteryDataSet() {\n    this.chartdatasets[1][0].data = this.batteryData.map(data=> data.voltage);//TODO\n    this.chartdatasets[1][1].data = this.batteryData.map(data=> data.current);//TODO\n\n  }\n\n  getRaspberryDataSet() {\n    this.chartdatasets[2][0].data = [1.8, 2, 0.9];//TODO\n    this.chartdatasets[2][1].data = [1, 2, 1.8];//TODO\n  }\n\n  getVolumeDataSet() {\n    this.chartdatasets[3][0].data=this.volumeData.map(datavolume => datavolume.image_size);\n    document.getElementById(\"volSum\").innerHTML = this.chartdatasets[3][0].data.reduce(add).toString(); //Summe der einzelnen Werte im Zeitraum\n    console.log(this.chartdatasets)\n  }\n\n  /*Eventhandles for Timeframe */\n  addStartEvent(event: MatDatepickerInputEvent) {\n    this.startdateEvents.push(`${event.value}`);\n    console.log(this.startdateEvents)\n\n  }\n\n  addEndEvent(event: MatDatepickerInputEvent) {\n    this.enddateEvents.push(`${event.value}`);\n    console.log(this.enddateEvents)\n\n  }\n\n  applyTimeframe() {\n    let startstring = this.startdateEvents[this.startdateEvents.length - 1]\n    let startdate = new Date(startstring);\n    console.log(startdate);\n\n    let endstring = this.enddateEvents[this.enddateEvents.length - 1]\n    let enddate = new Date(endstring);\n    console.log(enddate);\n\n\n    if (enddate > startdate) {\n      this.adminpanelDataSubscription =\n        this.adminpanelDataService.getSolarDataFrame(startdate, enddate).subscribe((data) => {\n          this.solarData = data;\n        });\n\n      this.adminpanelDataSubscription =\n        this.adminpanelDataService.getBatteryDataFrame(startdate, enddate).subscribe((data) => {\n          this.batteryData = data;\n        });\n\n      this.adminpanelDataSubscription =\n        this.adminpanelDataService.getRaspberryDataFrame(startdate, enddate).subscribe((data) => {\n          this.raspberryData = data;\n        });\n\n      this.adminpanelDataSubscription =\n        this.adminpanelDataService.getVolumeDataFrame(startdate, enddate).subscribe((data) => {\n          this.volumeData = data;\n        });\n      if(this.lastEvent != undefined) this.diagramChange(this.lastEvent);\n      else{ this.solarChart() }\n    }\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            add   (src/.../adminpanel.component.ts)\n                        \n                        \n                            context   (src/.../test.ts)\n                        \n                        \n                            dates   (src/.../adminpanel.component.ts)\n                        \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            logData   (src/.../adminpanel.component.ts)\n                        \n                        \n                            require   (src/.../test.ts)\n                        \n                        \n                            sensorData   (src/.../adminpanel.component.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/adminpanel/adminpanel.component.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            add\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (a, b) => a + b\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dates\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : ['25.05.2020', '26.05.2020', '27.05.2020']\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            logData\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         raspyActions[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sensorData\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         sensorActions[]\n\n                        \n                    \n                    \n                        \n                            Default value : [\n  { sensor: \"Temperatur\", status: \"OK\" },\n  { sensor: \"Wind\", status: \"OK\" },\n  { sensor: \"Spannung Raspberry\", status: \"OK\" },\n  { sensor: \"Strom Raspberry\", status: \"OK\" },\n  { sensor: \"Spannung Photovoltaik\", status: \"OK\" },\n  { sensor: \"Strom Photovoltaik\", status: \"OK\" },\n  { sensor: \"Leistungsaufnahme\", status: \"OK\" },\n  { sensor: \"Ladestrom\", status: \"OK\" }\n]\n                        \n                    \n\n\n            \n        \n\n    src/test.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            context\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : require.context('./', true, /\\.spec\\.ts$/)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            require\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.prod.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: true\n}\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: false\n}\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
