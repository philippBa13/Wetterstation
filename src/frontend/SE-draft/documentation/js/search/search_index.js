var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.8","fields":["title","body"],"fieldVectors":[["title/components/AdminComponent.html",[0,0.504,1,0.966]],["body/components/AdminComponent.html",[0,0.783,1,1.613,2,1.988,3,0.333,4,0.282,5,1.627,6,2.221,7,1.627,8,1.627,9,0.282,10,2.433,11,1.788,12,2.036,13,1.627,14,2.183,15,1.784,16,3.322,17,1.613,18,4.595,19,1.613,20,4.035,21,0.387,22,1.613,23,2.188,24,2.036,25,1.458,26,2.955,27,2.955,28,1.182,29,0.04,30,1.832,31,0.333,32,0.333,33,0.333,34,0.186,35,4.035,36,4.035,37,4.035,38,4.595,39,4.035,40,2.955,41,3.307,42,2.955,43,2.955,44,2.955,45,2.852,46,3.653,47,2.955,48,2.433,49,2.848,50,2.955,51,2.264,52,2.221,53,2.089,54,1.456,55,2.264,56,3.322,57,3.322,58,2.433,59,2.433,60,2.955,61,3.322,62,2.955,63,1.832,64,2.089,65,2.852,66,2.433,67,2.089,68,2.433,69,1.627,70,2.089,71,4.035,72,2.955,73,4.035,74,3.322,75,2.955,76,4.035,77,2.955,78,2.089,79,2.955,80,2.955,81,2.433,82,2.955,83,2.433,84,2.955,85,2.089,86,4.035,87,2.955,88,2.955,89,4.035,90,4.035,91,1.456,92,1.832,93,2.433,94,2.955,95,2.955,96,2.955,97,2.955,98,2.955,99,2.955,100,2.955,101,2.433,102,1.31,103,2.221,104,1.988,105,1.627,106,0.948,107,1.627,108,1.191,109,1.627,110,0.787,111,1.627,112,1.068,113,1.627,114,0.966,115,1.627,116,0.873,117,1.31,118,1.627,119,1.627,120,0.142,121,0.194,122,0.142]],["title/components/AdminpanelComponent.html",[0,0.504,110,0.788]],["body/components/AdminpanelComponent.html",[0,0.5,1,0.462,2,1.139,3,0.159,4,0.135,5,0.778,6,0.778,7,0.778,8,0.778,9,0.135,11,1.024,12,1.3,13,0.778,14,1.695,15,1.385,17,0.924,19,0.924,21,0.185,22,0.924,23,1.503,24,0.626,25,1.97,28,1.883,29,0.04,30,2.627,31,0.421,32,0.159,33,0.33,34,0.089,41,2.102,45,1.634,46,0.998,49,0.876,51,2.088,52,2.059,53,2.397,54,1.139,55,1.978,63,0.876,64,0.998,66,1.163,67,0.998,69,0.778,70,2.074,78,0.998,91,0.696,92,0.876,102,0.626,103,1.272,104,1.139,105,0.778,106,0.879,107,0.778,108,1.306,109,0.778,110,0.903,111,0.778,112,0.51,113,0.778,114,0.462,115,0.778,116,0.417,117,0.626,118,0.778,119,0.778,123,0.778,124,1.819,125,2.074,126,1.634,127,0.497,128,1.929,129,2.074,130,1.606,131,2.074,132,2.074,133,1.819,134,2.312,135,2.074,136,2.074,137,1.606,138,2.397,139,2.312,140,2.397,141,2.312,142,2.397,143,2.397,144,2.397,145,2.397,146,2.397,147,1.634,148,2.312,149,1.446,150,0.839,151,1.446,152,1.413,153,1.413,154,2.074,155,2.074,156,1.413,157,2.996,158,1.413,159,1.634,160,2.397,161,1.413,162,1.163,163,1.413,164,1.413,165,1.413,166,1.413,167,1.413,168,1.413,169,1.413,170,1.819,171,1.695,172,1.695,173,1.413,174,1.496,175,1.634,176,1.413,177,1.634,178,1.413,179,1.819,180,1.413,181,1.413,182,2.255,183,1.413,184,1.615,185,1.413,186,1.615,187,1.413,188,1.413,189,0.626,190,0.876,191,0.778,192,0.626,193,0.876,194,0.778,195,1.272,196,0.876,197,0.876,198,0.876,199,0.26,200,1.139,201,0.417,202,0.998,203,1.139,204,2.99,205,2.074,206,1.433,207,0.876,208,2.742,209,0.876,210,2.627,211,1.433,212,2.489,213,1.433,214,0.876,215,0.876,216,0.998,217,0.998,218,1.634,219,0.998,220,0.998,221,2.074,222,0.998,223,0.998,224,0.998,225,0.998,226,0.998,227,0.998,228,0.876,229,0.578,230,0.876,231,1.634,232,1.634,233,0.998,234,2.074,235,2.593,236,0.998,237,0.998,238,0.998,239,0.998,240,1.634,241,0.998,242,0.998,243,0.998,244,0.998,245,0.998,246,0.998,247,0.998,248,1.433,249,1.634,250,0.998,251,0.998,252,0.998,253,1.634,254,1.433,255,1.433,256,2.179,257,1.433,258,0.998,259,0.998,260,1.433,261,1.433,262,1.433,263,0.998,264,1.634,265,1.634,266,2.397,267,2.397,268,1.634,269,0.835,270,1.634,271,1.634,272,1.634,273,1.634,274,1.634,275,1.634,276,1.433,277,1.433,278,2.074,279,2.074,280,0.998,281,0.616,282,1.446,283,1.272,284,1.819,285,1.819,286,0.998,287,1.446,288,0.998,289,0.998,290,0.998,291,2.838,292,1.634,293,2.397,294,2.489,295,0.998,296,2.397,297,1.634,298,0.998,299,2.489,300,2.397,301,0.998,302,0.998,303,0.998,304,1.634,305,0.998,306,0.998,307,0.998,308,0.998,309,0.998,310,1.634,311,0.998,312,1.634,313,0.998,314,0.998,315,0.998,316,0.998,317,1.634,318,0.998,319,0.998,320,0.998,321,0.998,322,0.998,323,0.998,324,0.998,325,0.998,326,0.998,327,0.998,328,0.998,329,0.998,330,0.998,331,0.998,332,0.998,333,0.998,334,0.998,335,2.312,336,2.312,337,2.312,338,2.312,339,2.312,340,2.312,341,2.312,342,2.312,343,2.312,344,2.312,345,2.312,346,1.413,347,2.074,348,1.413,349,1.163,350,1.903,351,1.413,352,1.413,353,1.413,354,1.413,355,2.312,356,1.413,357,1.413,358,1.163,359,1.413,360,1.413,361,1.163,362,1.413,363,1.413,364,1.163,365,1.413,366,1.413,367,2.312,368,1.413,369,1.413]],["title/injectables/AdminpanelDataService.html",[128,1.182,370,0.788]],["body/injectables/AdminpanelDataService.html",[3,0.329,4,0.278,9,0.278,21,0.382,22,1.601,24,1.295,25,2.003,28,2.058,29,0.04,31,0.451,32,0.329,33,0.514,34,0.184,106,0.561,108,1.57,120,0.14,121,0.192,122,0.14,127,0.861,128,1.601,130,1.168,137,1.168,149,2.619,150,0.945,151,2.619,171,1.168,172,1.168,174,0.955,199,0.451,201,1.741,229,0.682,269,1.651,281,1.067,282,1.973,287,1.973,370,1.067,371,1.811,372,3.486,373,1.056,374,2.126,375,1.826,376,2.058,377,2.83,378,4.004,379,4.004,380,4.004,381,4.004,382,1.601,383,1.921,384,2.83,385,1.601,386,2.405,387,2.83,388,1.892,389,2.922,390,2.922,391,3.473,392,2.922,393,3.296,394,2.922,395,2.405,396,2.922,397,2.922,398,2.83,399,2.065,400,1.056,401,1.168,402,0.955,403,1.168,404,1.168,405,1.168,406,1.168,407,1.168,408,1.056,409,1.168,410,1.168,411,1.168,412,1.168,413,1.168,414,1.168,415,2.065,416,1.056,417,1.168,418,1.439,419,1.168,420,1.217,421,1.168,422,2.065,423,2.065,424,2.065,425,2.065,426,2.065,427,1.973,428,1.439]],["title/components/AppComponent.html",[0,0.504,112,1.068]],["body/components/AppComponent.html",[0,0.874,1,1.209,2,2.304,3,0.416,4,0.352,5,2.036,6,2.036,7,2.036,8,2.036,9,0.352,13,2.036,14,2.306,15,1.884,17,1.87,19,1.87,21,0.484,25,1.337,29,0.04,31,0.416,32,0.416,33,0.416,34,0.233,102,1.639,103,2.575,104,2.304,105,2.036,106,1.035,107,2.036,108,1.381,109,2.036,110,0.986,111,2.036,112,1.948,113,2.036,114,1.209,115,2.036,116,1.092,117,2.273,118,2.036,119,2.036,120,0.178,121,0.225,122,0.178,127,1.006,150,0.63,171,1.479,172,1.479,174,1.209,262,3.18,402,1.528,429,3.045,430,5.129,431,4.677,432,4.677,433,4.677,434,3.699,435,4.677,436,4.677,437,4.677,438,4.677]],["title/modules/AppModule.html",[439,1.833,440,1.833]],["body/modules/AppModule.html",[1,1.632,3,0.271,4,0.23,9,0.23,15,0.788,29,0.039,31,0.697,32,0.271,33,0.271,34,0.152,102,1.069,110,1.331,112,2.022,114,1.632,116,1.475,120,0.116,121,0.168,122,0.116,189,1.55,190,2.168,191,1.925,383,1.264,400,0.871,439,1.495,440,3.657,441,1.327,442,1.495,443,3.387,444,3.189,445,3.387,446,1.704,447,1.985,448,1.985,449,1.985,450,1.985,451,1.985,452,2.75,453,1.915,454,1.915,455,2.879,456,1.985,457,1.704,458,2.411,459,2.879,460,3.497,461,2.879,462,1.495,463,2.879,464,2.411,465,1.704,466,1.985,467,4.114,468,2.411,469,4.114,470,1.985,471,3.497,472,2.411,473,2.411,474,2.411,475,2.411,476,1.985,477,1.985,478,1.985,479,3.497,480,2.411,481,3.497,482,1.985,483,3.497,484,2.411,485,3.497,486,2.411,487,2.411,488,3.497,489,2.411,490,3.497,491,2.411,492,3.497,493,2.411,494,3.497,495,2.411,496,3.497,497,2.411,498,3.497,499,2.411,500,3.497,501,2.411,502,3.497,503,2.411,504,2.411,505,3.497,506,3.497,507,3.497,508,2.411,509,3.497,510,2.411,511,3.497,512,2.411,513,3.497,514,1.704,515,3.497,516,2.411,517,3.497,518,2.411,519,3.497,520,2.411,521,2.411,522,3.497,523,2.411,524,3.497,525,2.411,526,3.497,527,2.411,528,3.497,529,2.411,530,3.497,531,3.497,532,2.411,533,3.497,534,2.411,535,3.497,536,3.497,537,3.497,538,3.497,539,2.411,540,3.497,541,1.985,542,3.497,543,2.411,544,3.497,545,2.411,546,3.497,547,2.411,548,3.497,549,1.985,550,3.497,551,2.411,552,3.497,553,2.411,554,3.497,555,2.411,556,3.497,557,2.411,558,3.497,559,2.411,560,3.497,561,2.411,562,3.497,563,2.411,564,1.985,565,3.497,566,1.327,567,1.985,568,3.497,569,2.55,570,1.495,571,3.497,572,1.495,573,3.497,574,1.985,575,2.411,576,2.411]],["title/classes/AppPage.html",[34,0.186,577,2.09]],["body/classes/AppPage.html",[3,0.48,4,0.406,9,0.406,21,0.557,22,2.041,25,1.844,28,2.041,29,0.04,31,0.48,33,0.48,34,0.269,69,2.346,104,2.1,120,0.205,121,0.245,122,0.205,402,1.393,420,1.36,462,2.642,577,3.607,578,3.013,579,3.509,580,5.662,581,5.662,582,4.262,583,4.262,584,3.509,585,4.262,586,5.103,587,4.262,588,4.262]],["title/modules/AppRoutingModule.html",[439,1.833,452,1.627]],["body/modules/AppRoutingModule.html",[0,0.94,1,1.592,3,0.444,4,0.376,9,0.376,16,3.25,29,0.04,31,0.65,32,0.444,33,0.444,34,0.249,83,4.01,110,1.298,114,1.592,116,1.438,117,1.75,120,0.19,121,0.234,122,0.19,124,2.447,206,2.447,441,2.173,446,2.79,452,2.682,459,3.25,463,4.01,476,3.25,477,3.25,478,3.25,567,3.25,589,3.948,590,3.948,591,3.275,592,4.871,593,3.25,594,5.517,595,3.948]],["title/interfaces/BatteryData.html",[130,1.182,199,0.333]],["body/interfaces/BatteryData.html",[3,0.386,4,0.327,9,0.327,21,0.448,29,0.04,31,0.502,32,0.386,33,0.557,34,0.216,106,0.658,120,0.165,121,0.214,122,0.165,127,0.958,128,1.371,130,1.781,137,1.371,150,0.925,199,0.502,201,1.643,229,0.759,269,1.239,281,1.447,282,2.675,287,2.675,370,1.187,372,2.125,373,1.239,374,1.781,375,1.371,376,1.781,382,1.371,383,1.788,385,1.371,387,2.423,388,1.972,398,2.423,400,1.239,401,1.371,402,1.12,403,1.371,404,1.371,405,1.371,406,1.371,407,1.371,408,1.239,409,1.371,410,1.371,411,1.371,412,1.371,413,1.371,414,1.371,415,2.423,416,1.239,417,1.371,418,1.689,419,1.371,420,1.318,421,1.371,422,2.423,423,2.423,424,2.423,425,2.423,426,2.423,427,2.675,428,2.581,596,1.371]],["title/components/GraphsComponent.html",[0,0.504,114,0.966]],["body/components/GraphsComponent.html",[0,0.503,1,0.466,2,1.148,3,0.161,4,0.136,5,0.785,6,0.785,7,0.785,8,0.785,9,0.136,11,1.033,12,1.309,13,0.785,14,1.702,15,1.391,17,0.932,19,0.932,21,0.187,22,0.932,23,1.512,24,0.632,25,2.028,28,1.974,29,0.04,30,2.999,31,0.479,32,0.161,33,0.161,34,0.09,41,1.445,45,1.648,46,1.009,49,2.115,51,1.148,52,1.626,53,2.852,54,0.703,55,1.456,56,1.175,57,1.175,58,1.175,59,1.175,61,1.175,63,1.445,64,1.009,65,1.648,67,1.648,68,1.175,69,0.785,70,2.852,74,1.175,85,1.009,91,0.703,92,1.445,102,0.632,103,1.283,104,1.148,105,0.785,106,0.907,107,0.785,108,1.429,109,0.785,110,0.38,111,0.785,112,0.516,113,0.785,114,1.115,115,0.785,116,0.421,117,0.632,118,0.785,119,0.785,127,0.501,133,1.832,149,2.264,150,0.924,151,2.264,162,2.808,170,1.832,171,1.702,172,1.702,174,1.115,179,1.832,189,0.632,191,0.785,192,0.632,193,0.885,194,0.785,228,0.885,229,0.757,230,0.885,235,1.878,248,1.445,254,1.445,255,1.445,256,2.097,257,1.445,260,1.445,261,1.445,276,1.445,277,1.445,281,0.787,283,0.785,284,1.445,285,1.445,294,1.445,299,1.445,347,2.089,361,1.175,364,1.175,388,1.613,408,1.749,420,0.38,454,1.935,470,1.175,541,1.175,549,1.175,564,1.175,597,1.175,598,2.955,599,2.331,600,2.955,601,2.331,602,2.955,603,2.955,604,2.955,605,2.955,606,2.955,607,3.76,608,2.955,609,1.988,610,2.955,611,2.955,612,1.988,613,2.331,614,2.331,615,3.411,616,3.411,617,2.411,618,2.331,619,2.331,620,2.331,621,2.331,622,2.331,623,2.331,624,2.331,625,2.331,626,2.331,627,4.257,628,1.427,629,2.331,630,1.427,631,1.427,632,1.427,633,1.427,634,1.427,635,2.331,636,3.411,637,1.427,638,2.331,639,3.411,640,1.427,641,2.331,642,1.427,643,2.331,644,1.427,645,2.331,646,2.331,647,1.427,648,2.331,649,1.427,650,1.427,651,1.427,652,1.427,653,1.427,654,1.427,655,1.427,656,1.427,657,1.427,658,1.427,659,1.919,660,1.919,661,2.331,662,2.331,663,1.427,664,1.427,665,1.427,666,1.427,667,1.427,668,1.427,669,1.427,670,1.427,671,3.411,672,1.427,673,2.331,674,1.427,675,2.955,676,1.427,677,1.427,678,2.331,679,2.331,680,1.427,681,3.76,682,1.427,683,1.427,684,1.427,685,1.427,686,2.331,687,1.427,688,1.427,689,1.427,690,1.427,691,1.427,692,1.427,693,1.427,694,2.331,695,1.427,696,1.427,697,1.427,698,2.331,699,2.331,700,2.331,701,3.411,702,2.331,703,2.331,704,1.427,705,0.885,706,1.427,707,1.427,708,2.955,709,1.427,710,2.331,711,2.331,712,1.427,713,1.427,714,1.919,715,1.427,716,2.331,717,2.331,718,1.427,719,2.331,720,1.427,721,1.427,722,1.427,723,1.427,724,1.427,725,1.427,726,1.427,727,1.427,728,1.427,729,1.427,730,1.427,731,1.427,732,2.331,733,1.427,734,1.427,735,1.427,736,1.427,737,2.331,738,1.427,739,1.427,740,1.427,741,1.427,742,1.427,743,2.331,744,2.331,745,3.411,746,2.331,747,2.331,748,2.331,749,2.331,750,2.331,751,2.331,752,2.331,753,2.331,754,2.331,755,2.331,756,2.331,757,2.331,758,2.331,759,2.331,760,2.331,761,2.331,762,2.331,763,1.427,764,1.427,765,1.427,766,1.427,767,1.175,768,1.427,769,1.427,770,1.427,771,1.427,772,1.427,773,1.427,774,1.427,775,1.175,776,1.427,777,1.427,778,1.427,779,1.427,780,1.427,781,1.427,782,1.427,783,2.331,784,1.427,785,1.427,786,1.427,787,1.427,788,1.427,789,1.427,790,1.427]],["title/interfaces/ImageData.html",[199,0.333,791,1.457]],["body/interfaces/ImageData.html",[3,0.412,4,0.349,9,0.349,21,0.479,29,0.04,31,0.523,32,0.412,33,0.523,34,0.231,106,0.703,120,0.176,121,0.223,122,0.176,127,1,150,0.87,174,1.668,199,0.412,201,1.672,229,0.624,281,1.431,370,1.238,373,1.323,374,1.858,375,1.464,376,1.858,382,1.464,383,1.845,385,1.464,388,1.668,400,1.323,401,1.464,402,1.197,403,1.464,404,1.464,405,1.464,406,1.464,407,1.464,408,1.68,409,1.464,410,1.464,411,1.464,412,1.464,413,1.464,414,1.464,419,1.464,420,1.238,421,1.858,453,1.464,566,2.956,596,1.464,791,2.29,792,2.588,793,4.421,794,2.016,795,3.826,796,3.015,797,3.015,798,3.015,799,3.015,800,3.015,801,3.015]],["title/injectables/ImageService.html",[370,0.788,453,1.182]],["body/injectables/ImageService.html",[3,0.363,4,0.307,9,0.307,21,0.421,22,1.71,24,1.428,25,2.049,28,2.045,29,0.04,31,0.481,32,0.363,33,0.481,34,0.203,106,0.619,108,1.263,120,0.155,121,0.205,122,0.155,127,0.92,149,2.107,150,0.871,151,2.107,171,1.71,172,1.71,174,1.397,199,0.363,201,1.674,229,0.729,281,0.858,370,1.139,371,1.997,373,1.164,374,2.188,375,1.92,376,2.128,377,3.023,382,1.71,383,1.977,384,3.023,385,1.71,388,1.053,399,2.277,400,1.164,401,1.288,402,1.053,403,1.288,404,1.288,405,1.288,406,1.288,407,1.288,408,1.545,409,1.288,410,1.288,411,1.288,412,1.288,413,1.288,414,1.288,416,1.545,419,1.288,420,1.139,421,1.71,453,1.71,566,1.773,791,1.587,792,4.056,793,2.652,794,2.354,795,3.521,796,2.652,797,4.21,798,2.652,799,4.21,800,2.652,801,2.652,802,4.8,803,3.222,804,3.222,805,3.222,806,3.222,807,3.222]],["title/classes/NgbdDropdownBasic.html",[34,0.186,808,1.833]],["body/classes/NgbdDropdownBasic.html",[0,0.515,3,0.34,4,0.288,9,0.288,11,1.34,12,1.816,14,1.209,15,0.988,17,1.209,19,1.209,23,1.34,29,0.04,31,0.629,32,0.34,33,0.461,34,0.259,116,0.893,117,1.34,120,0.145,121,0.197,122,0.145,182,1.49,189,1.34,192,1.34,229,0.849,256,1.49,416,1.093,417,1.209,420,1.388,453,1.993,514,2.137,566,1.664,569,2.541,570,1.874,572,1.874,578,2.137,617,2.137,791,2.456,808,2.541,809,2.137,810,2.489,811,2.489,812,3.828,813,2.489,814,2.489,815,2.489,816,2.489,817,4.103,818,3.828,819,2.489,820,3.828,821,2.137,822,2.489,823,2.489,824,2.489,825,2.489,826,2.489,827,2.489,828,2.489,829,2.489,830,2.489,831,2.489,832,2.489,833,2.489,834,2.489,835,2.489,836,2.489,837,3.374,838,3.374,839,2.489,840,2.489,841,2.489,842,2.489,843,3.828,844,3.828,845,2.489,846,2.489,847,2.489,848,3.828,849,3.828,850,3.828,851,3.828,852,3.828,853,2.489,854,2.489,855,2.489,856,2.489,857,2.489,858,2.489,859,3.828,860,2.489,861,2.489,862,2.489,863,2.489,864,2.489,865,2.489,866,2.489,867,2.489,868,2.489,869,2.489,870,2.489,871,2.489,872,2.489,873,2.489,874,2.489,875,2.489,876,2.489,877,2.489,878,2.489,879,3.374,880,3.374,881,3.374,882,2.489,883,3.374]],["title/interfaces/SolarData.html",[137,1.182,199,0.333]],["body/interfaces/SolarData.html",[3,0.391,4,0.331,9,0.331,21,0.454,29,0.04,31,0.506,32,0.391,33,0.561,34,0.219,106,0.667,120,0.167,121,0.216,122,0.167,127,0.966,128,1.389,130,1.389,137,1.797,150,0.897,199,0.506,201,1.649,229,0.765,269,1.255,281,1.453,282,2.687,287,2.687,370,1.197,372,2.153,373,1.255,374,1.797,375,1.389,376,1.797,382,1.389,383,1.8,385,1.389,387,2.455,388,1.961,398,2.455,400,1.255,401,1.389,402,1.135,403,1.389,404,1.389,405,1.389,406,1.389,407,1.389,408,1.255,409,1.389,410,1.389,411,1.389,412,1.389,413,1.389,414,1.389,415,2.455,416,1.255,417,1.389,418,1.711,419,1.389,420,1.327,421,1.389,422,2.455,423,2.455,424,2.455,425,2.455,426,2.455,427,2.687,428,1.711,596,1.389]],["title/interfaces/TemperatureData.html",[199,0.333,609,1.457]],["body/interfaces/TemperatureData.html",[3,0.399,4,0.338,9,0.338,21,0.464,29,0.04,31,0.513,32,0.399,33,0.566,34,0.224,106,0.681,120,0.17,121,0.219,122,0.17,127,0.98,150,0.857,199,0.513,201,1.659,229,0.776,269,1.282,281,1.462,370,1.214,373,1.282,374,1.821,375,1.419,376,1.821,382,1.419,383,1.818,385,1.419,388,1.925,400,1.282,401,1.419,402,1.159,403,1.419,404,1.419,405,1.419,406,1.419,407,1.419,408,1.282,409,1.419,410,1.419,411,1.419,412,1.419,413,1.419,414,1.419,416,1.282,417,1.419,418,1.748,419,1.419,420,1.34,421,1.419,427,2.704,428,2.615,454,1.419,596,1.419,609,2.244,612,1.748,705,2.199,794,1.953,884,2.199,885,2.508,886,2.508,887,2.508,888,2.508,889,2.508,890,2.508,891,2.508,892,2.508]],["title/injectables/WeatherDataService.html",[370,0.788,454,1.182]],["body/injectables/WeatherDataService.html",[3,0.331,4,0.28,9,0.28,21,0.385,22,1.608,24,1.303,25,2.006,28,2.063,29,0.04,31,0.453,32,0.331,33,0.516,34,0.185,106,0.565,108,1.573,120,0.141,121,0.193,122,0.141,127,0.865,149,2.624,150,0.946,151,2.624,171,1.176,172,1.176,174,0.961,199,0.453,201,1.743,229,0.685,269,1.656,281,1.071,370,1.071,371,1.823,373,1.063,374,2.13,375,1.833,376,2.063,377,2.843,382,1.608,383,1.925,384,2.843,385,1.608,386,2.421,388,1.861,391,3.483,393,3.311,395,2.421,399,2.079,400,1.063,401,1.176,402,0.961,403,1.176,404,1.176,405,1.176,406,1.176,407,1.176,408,1.063,409,1.176,410,1.176,411,1.176,412,1.176,413,1.176,414,1.176,416,1.063,417,1.176,418,1.449,419,1.176,420,1.221,421,1.176,427,1.981,428,1.449,454,1.608,609,1.449,612,1.449,705,1.823,794,2.214,884,3.491,885,2.079,886,2.843,887,2.079,888,2.079,889,2.079,890,2.079,891,2.079,892,2.079,893,4.022,894,4.022,895,4.022,896,4.022,897,2.941,898,2.941,899,2.941,900,2.941,901,2.941,902,2.941]],["title/components/WebcamComponent.html",[0,0.504,116,0.873]],["body/components/WebcamComponent.html",[0,0.478,1,0.588,2,1.382,3,0.203,4,0.171,5,0.99,6,0.99,7,0.99,8,0.99,9,0.171,11,1.243,12,1.528,13,0.99,14,1.867,15,1.525,17,1.121,19,1.121,21,0.367,22,1.121,23,1.725,24,0.797,25,2.078,28,1.931,29,0.04,30,2.771,31,0.544,32,0.203,33,0.316,34,0.177,41,1.115,48,1.481,49,1.115,54,1.382,55,1.382,63,2.137,65,1.272,69,1.544,78,1.272,81,2.309,85,1.982,91,0.886,92,1.115,101,2.309,102,0.797,103,1.544,104,1.382,105,0.99,106,0.747,107,0.99,108,1.149,109,0.99,110,0.479,111,0.99,112,0.65,113,0.99,114,0.588,115,0.99,116,1.149,117,1.528,118,0.99,119,0.99,127,0.603,149,1.382,150,0.935,151,1.382,171,1.687,172,1.687,174,0.916,182,1.382,189,0.797,192,0.797,229,0.719,256,0.886,283,1.897,347,1.272,349,1.481,358,2.309,388,0.916,416,1.525,417,1.687,420,1.124,453,2.029,514,1.272,566,0.99,569,1.739,570,1.115,572,1.115,617,2.751,714,1.481,767,1.481,775,2.309,791,2.3,808,1.115,809,1.272,810,1.481,811,1.481,812,3.474,813,1.481,814,1.481,815,1.481,816,1.481,817,4.556,818,3.68,819,1.481,820,4.519,821,1.272,822,2.309,823,2.838,824,2.309,825,2.309,826,1.481,827,2.838,828,2.838,829,2.838,830,2.838,831,2.838,832,2.838,833,2.838,834,2.309,835,1.481,836,1.481,837,4.433,838,2.309,839,3.474,840,1.481,841,1.481,842,1.481,843,2.838,844,2.838,845,1.481,846,1.481,847,1.481,848,2.838,849,2.838,850,2.838,851,2.838,852,2.838,853,1.481,854,1.481,855,1.481,856,1.481,857,3.205,858,1.481,859,2.838,860,3.205,861,1.481,862,1.481,863,1.481,864,1.481,865,1.481,866,3.205,867,1.481,868,1.481,869,1.481,870,1.481,871,1.481,872,1.481,873,1.481,874,1.481,875,2.838,876,1.481,877,1.481,878,3.205,879,2.309,880,2.309,881,2.309,882,3.205,883,2.309,903,2.805,904,3.892,905,2.805,906,2.805,907,1.799,908,1.799,909,1.799,910,1.799,911,1.799,912,1.799,913,1.799,914,1.799,915,1.799,916,1.799,917,4.22,918,1.799,919,1.799,920,1.799,921,1.799,922,1.799,923,1.799,924,1.799,925,1.799,926,2.805,927,3.892,928,3.892,929,3.892,930,3.892,931,3.892,932,3.892,933,3.892,934,3.892,935,2.805,936,1.799,937,1.799,938,1.799,939,1.799,940,1.799,941,1.799,942,1.799,943,3.447,944,2.805,945,2.805,946,1.799,947,1.799,948,1.799,949,1.799,950,2.805,951,1.799,952,1.799,953,1.799]],["title/interfaces/WindData.html",[199,0.333,612,1.457]],["body/interfaces/WindData.html",[3,0.394,4,0.334,9,0.334,21,0.458,29,0.04,31,0.508,32,0.394,33,0.563,34,0.221,106,0.672,120,0.168,121,0.217,122,0.168,127,0.971,150,0.9,199,0.508,201,1.653,229,0.769,269,1.265,281,1.456,370,1.203,373,1.265,374,1.805,375,1.4,376,1.805,382,1.4,383,1.806,385,1.4,388,1.945,400,1.265,401,1.4,402,1.144,403,1.4,404,1.4,405,1.4,406,1.4,407,1.4,408,1.265,409,1.4,410,1.4,411,1.4,412,1.4,413,1.4,414,1.4,416,1.265,417,1.4,418,1.724,419,1.4,420,1.332,421,1.4,427,2.693,428,1.724,454,1.4,596,1.4,609,1.724,612,2.224,705,3.273,794,1.927,884,2.17,885,2.474,886,2.474,887,2.474,888,2.474,889,2.474,890,2.474,891,2.474,892,3.733]],["title/coverage.html",[954,3.323]],["body/coverage.html",[0,0.921,1,1.103,9,0.322,10,2.78,29,0.04,34,0.278,51,3.022,110,0.9,112,1.22,114,1.103,116,0.997,120,0.162,121,0.212,122,0.162,123,3.051,128,1.35,130,1.35,137,1.35,150,0.575,184,1.859,186,1.859,195,1.859,199,0.636,200,1.664,203,1.664,229,0.575,350,2.78,370,1.309,372,3.045,373,2.07,429,2.78,453,1.35,454,1.35,577,2.387,579,2.78,597,2.78,609,1.664,612,1.664,791,1.664,792,3.118,808,2.093,809,3.118,884,3.045,954,2.78,955,3.377,956,3.377,957,3.377,958,4.913,959,4.913,960,3.377,961,4.411,962,3.377,963,4.913,964,5.646,965,5.727,966,3.377,967,3.377,968,3.377,969,2.78,970,3.632,971,2.78,972,3.632,973,2.78,974,2.78,975,3.377]],["title/dependencies.html",[442,2.204,976,2.468]],["body/dependencies.html",[29,0.04,32,0.447,120,0.191,121,0.235,122,0.191,192,1.761,194,2.187,442,2.463,444,2.809,461,4.027,462,3.032,465,3.457,466,3.271,482,3.271,569,3.285,570,2.463,572,2.463,574,3.271,593,3.271,821,2.809,977,3.974,978,3.974,979,3.974,980,5.915,981,3.974,982,4.891,983,3.974,984,3.974,985,3.974,986,3.974,987,5.299,988,5.299,989,3.974,990,3.974,991,3.974,992,3.974,993,3.974,994,3.974,995,3.974,996,3.974,997,3.974,998,3.974,999,3.974,1000,3.974,1001,3.974]],["title/index.html",[21,0.323,1002,2.468,1003,2.468]],["body/index.html",[0,0.892,4,0.369,15,1.265,29,0.031,93,3.188,108,1.143,120,0.186,121,0.231,122,0.186,229,0.66,391,3.873,457,2.737,465,3.702,584,3.188,1004,3.872,1005,4.813,1006,3.872,1007,5.238,1008,3.872,1009,3.872,1010,3.872,1011,4.813,1012,5.635,1013,5.824,1014,3.872,1015,3.872,1016,3.872,1017,3.872,1018,3.872,1019,3.872,1020,3.872,1021,3.872,1022,3.872,1023,5.238,1024,5.238,1025,3.872,1026,5.635,1027,3.872,1028,3.872,1029,3.872,1030,3.872,1031,3.872,1032,3.872,1033,3.188,1034,4.813,1035,4.813,1036,5.479,1037,3.872,1038,4.813,1039,4.813,1040,3.872,1041,3.872,1042,3.872,1043,5.238,1044,3.872,1045,3.872,1046,3.872,1047,3.872]],["title/modules.html",[441,2.222]],["body/modules.html",[29,0.035,120,0.225,121,0.259,122,0.225,440,2.907,441,2.582,452,2.582,462,2.907,1048,4.69,1049,4.69,1050,5.398,1051,4.69,1052,4.69]],["title/overview.html",[1053,3.323]],["body/overview.html",[1,1.723,2,1.937,29,0.039,102,1.742,110,1.405,112,2.112,114,1.723,116,1.557,120,0.189,121,0.233,122,0.189,371,2.437,439,2.437,440,3.818,441,2.164,442,2.437,443,3.236,444,2.778,445,3.236,446,2.778,447,3.236,448,3.236,449,3.236,450,3.236,451,3.236,452,2.903,453,2.109,454,2.109,455,4,456,3.236,457,2.778,578,2.778,591,2.437,596,1.572,659,3.236,660,3.236,1053,3.236,1054,4.858,1055,3.931,1056,3.931]],["title/interfaces/raspyActions.html",[199,0.333,200,1.457]],["body/interfaces/raspyActions.html",[0,0.507,3,0.219,4,0.185,9,0.185,11,0.86,12,1.318,14,0.776,15,0.634,17,0.776,19,0.776,21,0.254,23,0.86,29,0.041,31,0.492,32,0.219,33,0.407,34,0.122,51,2.271,52,1.637,54,0.956,55,2.153,91,0.956,106,0.839,108,1.197,110,0.517,120,0.093,121,0.143,122,0.093,123,1.068,124,1.844,125,1.372,126,1.372,127,0.64,128,1.747,129,1.372,130,1.446,131,1.372,132,1.372,133,1.203,135,1.372,136,1.372,137,1.446,138,1.372,140,1.372,142,1.372,143,1.372,144,1.372,145,1.372,146,1.372,147,1.372,150,0.745,154,1.372,155,1.372,157,3.259,159,1.372,160,2.102,170,1.844,174,1.768,175,1.372,177,1.372,179,1.844,182,2.439,184,1.637,186,1.637,189,0.86,190,1.203,191,1.068,192,0.86,193,1.203,194,1.068,195,1.637,196,1.203,197,1.203,198,1.203,199,0.335,200,1.781,201,1.197,202,2.865,203,1.465,204,3.146,205,1.372,206,1.844,207,1.203,208,3.069,209,1.203,210,2.241,211,1.844,212,1.844,213,1.844,214,1.203,215,1.203,216,1.372,217,1.372,218,1.372,219,1.372,220,1.372,221,1.372,222,1.372,223,1.372,224,1.372,225,1.372,226,1.372,227,1.372,228,1.203,229,0.691,230,1.203,231,2.102,232,2.102,233,1.372,234,2.556,235,2.851,236,1.372,237,1.372,238,1.372,239,1.372,240,2.102,241,1.372,242,1.372,243,1.372,244,1.372,245,1.372,246,1.372,247,1.372,248,1.844,249,2.102,250,1.372,251,1.372,252,1.372,253,2.102,254,1.844,255,1.844,256,2.439,257,1.844,258,1.372,259,1.372,260,1.844,261,1.844,262,1.844,263,1.372,264,2.102,265,2.102,266,2.865,267,2.865,268,2.102,269,1.075,270,2.102,271,2.102,272,2.102,273,2.102,274,2.102,275,2.102,276,1.844,277,1.844,278,2.556,279,2.556,280,1.372,281,0.792,282,1.781,283,1.637,284,2.241,285,2.241,286,1.372,287,1.781,288,1.372,289,1.372,290,1.372,291,3.259,292,2.102,293,2.102,294,2.858,295,1.372,296,2.865,297,2.102,298,1.372,299,2.858,300,2.865,301,1.372,302,1.372,303,1.372,304,2.102,305,1.372,306,1.372,307,1.372,308,1.372,309,1.372,310,2.102,311,1.372,312,2.102,313,1.372,314,1.372,315,1.372,316,1.372,317,2.102,318,1.372,319,1.372,320,1.372,321,1.372,322,1.372,323,1.372,324,1.372,325,1.372,326,1.372,327,1.372,328,1.372,329,1.372,330,1.372,331,1.372,332,1.372,333,1.372,334,1.372,596,0.776]],["title/routes.html",[591,2.502]],["body/routes.html",[29,0.035,120,0.231,121,0.263,122,0.231,591,2.976]],["title/interfaces/sensorActions.html",[199,0.333,203,1.457]],["body/interfaces/sensorActions.html",[0,0.51,3,0.22,4,0.186,9,0.186,11,0.867,12,1.326,14,0.782,15,0.639,17,0.782,19,0.782,21,0.256,23,0.867,29,0.041,31,0.494,32,0.22,33,0.409,34,0.123,51,2.278,52,1.647,54,0.963,55,2.16,91,0.963,106,0.842,108,0.577,110,0.521,120,0.094,121,0.144,122,0.094,123,1.076,124,1.854,125,1.382,126,1.382,127,0.643,128,1.753,129,1.382,130,1.452,131,1.382,132,1.382,133,1.212,135,1.382,136,1.382,137,1.452,138,1.382,140,1.382,142,1.382,143,1.382,144,1.382,145,1.382,146,1.382,147,1.382,150,0.693,154,1.382,155,1.382,157,3.268,159,1.382,160,2.114,170,1.854,174,1.725,175,1.382,177,1.382,179,1.854,182,2.445,184,1.647,186,1.647,189,0.867,190,1.212,191,1.076,192,0.867,193,1.212,194,1.076,195,1.647,196,1.212,197,1.212,198,1.212,199,0.337,200,1.474,201,0.577,202,1.382,203,1.79,204,3.319,205,2.876,206,1.854,207,1.212,208,3.076,209,1.212,210,2.252,211,1.854,212,1.854,213,1.854,214,1.212,215,1.212,216,1.382,217,1.382,218,1.382,219,1.382,220,1.382,221,1.382,222,1.382,223,1.382,224,1.382,225,1.382,226,1.382,227,1.382,228,1.212,229,0.693,230,1.212,231,2.114,232,2.114,233,1.382,234,2.568,235,2.857,236,1.382,237,1.382,238,1.382,239,1.382,240,2.114,241,1.382,242,1.382,243,1.382,244,1.382,245,1.382,246,1.382,247,1.382,248,1.854,249,2.114,250,1.382,251,1.382,252,1.382,253,2.114,254,1.854,255,1.854,256,2.445,257,1.854,258,1.382,259,1.382,260,1.854,261,1.854,262,1.854,263,1.382,264,2.114,265,2.114,266,2.876,267,2.876,268,2.114,269,1.081,270,2.114,271,2.114,272,2.114,273,2.114,274,2.114,275,2.114,276,1.854,277,1.854,278,2.568,279,2.568,280,1.382,281,0.797,282,1.79,283,1.647,284,2.252,285,2.252,286,1.382,287,1.79,288,1.382,289,1.382,290,1.382,291,3.268,292,2.114,293,2.114,294,2.866,295,1.382,296,2.876,297,2.114,298,1.382,299,2.866,300,2.876,301,1.382,302,1.382,303,1.382,304,2.114,305,1.382,306,1.382,307,1.382,308,1.382,309,1.382,310,2.114,311,1.382,312,2.114,313,1.382,314,1.382,315,1.382,316,1.382,317,2.114,318,1.382,319,1.382,320,1.382,321,1.382,322,1.382,323,1.382,324,1.382,325,1.382,326,1.382,327,1.382,328,1.382,329,1.382,330,1.382,331,1.382,332,1.382,333,1.382,334,1.382,596,0.782]],["title/miscellaneous/variables.html",[1057,2.032,1058,2.928]],["body/miscellaneous/variables.html",[21,0.49,29,0.04,120,0.18,121,0.226,122,0.18,123,2.061,150,0.971,171,2.278,172,2.278,182,1.845,184,2.595,186,2.595,195,2.595,196,2.321,197,2.321,198,2.321,200,1.845,203,1.845,204,3.626,207,2.321,208,3.626,209,2.321,210,2.922,211,2.922,212,2.922,213,2.922,214,2.321,215,2.321,235,2.595,969,3.083,970,4.457,971,3.083,972,3.083,973,3.881,974,3.881,1033,3.881,1057,3.083,1058,3.083,1059,4.714,1060,5.159,1061,3.745,1062,3.745,1063,3.745,1064,3.745,1065,4.714]]],"invertedIndex":[["",{"_index":29,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminpanelComponent.html":{},"injectables/AdminpanelDataService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"interfaces/BatteryData.html":{},"components/GraphsComponent.html":{},"interfaces/ImageData.html":{},"injectables/ImageService.html":{},"classes/NgbdDropdownBasic.html":{},"interfaces/SolarData.html":{},"interfaces/TemperatureData.html":{},"injectables/WeatherDataService.html":{},"components/WebcamComponent.html":{},"interfaces/WindData.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"interfaces/raspyActions.html":{},"routes.html":{},"interfaces/sensorActions.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":51,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminpanelComponent.html":{},"components/GraphsComponent.html":{},"coverage.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["0.10.2",{"_index":1001,"title":{},"body":{"dependencies.html":{}}}],["0.2",{"_index":702,"title":{},"body":{"components/GraphsComponent.html":{}}}],["0.5rem",{"_index":776,"title":{},"body":{"components/GraphsComponent.html":{}}}],["0/1",{"_index":965,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":966,"title":{},"body":{"coverage.html":{}}}],["0/22",{"_index":962,"title":{},"body":{"coverage.html":{}}}],["0/25",{"_index":968,"title":{},"body":{"coverage.html":{}}}],["0/27",{"_index":967,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":958,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":963,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":961,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":960,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":959,"title":{},"body":{"coverage.html":{}}}],["00bfff",{"_index":305,"title":{},"body":{"components/AdminpanelComponent.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["013adf",{"_index":317,"title":{},"body":{"components/AdminpanelComponent.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["0em",{"_index":768,"title":{},"body":{"components/GraphsComponent.html":{}}}],["1",{"_index":408,"title":{},"body":{"injectables/AdminpanelDataService.html":{},"interfaces/BatteryData.html":{},"components/GraphsComponent.html":{},"interfaces/ImageData.html":{},"injectables/ImageService.html":{},"interfaces/SolarData.html":{},"interfaces/TemperatureData.html":{},"injectables/WeatherDataService.html":{},"interfaces/WindData.html":{}}}],["1.13.0",{"_index":999,"title":{},"body":{"dependencies.html":{}}}],["1.8,1,0.9",{"_index":332,"title":{},"body":{"components/AdminpanelComponent.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["10,23,18",{"_index":326,"title":{},"body":{"components/AdminpanelComponent.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["100",{"_index":45,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminpanelComponent.html":{},"components/GraphsComponent.html":{}}}],["10px",{"_index":78,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminpanelComponent.html":{},"components/WebcamComponent.html":{}}}],["12px",{"_index":47,"title":{},"body":{"components/AdminComponent.html":{}}}],["132",{"_index":701,"title":{},"body":{"components/GraphsComponent.html":{}}}],["14",{"_index":661,"title":{},"body":{"components/GraphsComponent.html":{}}}],["15",{"_index":936,"title":{},"body":{"components/WebcamComponent.html":{}}}],["15px",{"_index":943,"title":{},"body":{"components/WebcamComponent.html":{}}}],["16px",{"_index":86,"title":{},"body":{"components/AdminComponent.html":{}}}],["18px",{"_index":79,"title":{},"body":{"components/AdminComponent.html":{}}}],["1em",{"_index":783,"title":{},"body":{"components/GraphsComponent.html":{}}}],["1px",{"_index":58,"title":{},"body":{"components/AdminComponent.html":{},"components/GraphsComponent.html":{}}}],["1rem",{"_index":771,"title":{},"body":{"components/GraphsComponent.html":{}}}],["2",{"_index":1054,"title":{},"body":{"overview.html":{}}}],["2.0.8",{"_index":994,"title":{},"body":{"dependencies.html":{}}}],["2.9.3",{"_index":990,"title":{},"body":{"dependencies.html":{}}}],["20",{"_index":265,"title":{},"body":{"components/AdminpanelComponent.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["200px",{"_index":356,"title":{},"body":{"components/AdminpanelComponent.html":{}}}],["20px",{"_index":48,"title":{},"body":{"components/AdminComponent.html":{},"components/WebcamComponent.html":{}}}],["21",{"_index":662,"title":{},"body":{"components/GraphsComponent.html":{}}}],["24",{"_index":759,"title":{},"body":{"components/GraphsComponent.html":{}}}],["24px",{"_index":348,"title":{},"body":{"components/AdminpanelComponent.html":{}}}],["25.05.2020",{"_index":196,"title":{},"body":{"components/AdminpanelComponent.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{},"miscellaneous/variables.html":{}}}],["255",{"_index":711,"title":{},"body":{"components/GraphsComponent.html":{}}}],["26.05.2020",{"_index":197,"title":{},"body":{"components/AdminpanelComponent.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{},"miscellaneous/variables.html":{}}}],["27.05.2020",{"_index":198,"title":{},"body":{"components/AdminpanelComponent.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{},"miscellaneous/variables.html":{}}}],["3",{"_index":659,"title":{},"body":{"components/GraphsComponent.html":{},"overview.html":{}}}],["3.6.5",{"_index":993,"title":{},"body":{"dependencies.html":{}}}],["30",{"_index":66,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminpanelComponent.html":{}}}],["300px",{"_index":100,"title":{},"body":{"components/AdminComponent.html":{}}}],["35px",{"_index":947,"title":{},"body":{"components/WebcamComponent.html":{}}}],["3em",{"_index":77,"title":{},"body":{"components/AdminComponent.html":{}}}],["4",{"_index":1056,"title":{},"body":{"overview.html":{}}}],["4.18.0",{"_index":996,"title":{},"body":{"dependencies.html":{}}}],["40px",{"_index":369,"title":{},"body":{"components/AdminpanelComponent.html":{}}}],["4em",{"_index":784,"title":{},"body":{"components/GraphsComponent.html":{}}}],["5",{"_index":1055,"title":{},"body":{"overview.html":{}}}],["5.0.0",{"_index":987,"title":{},"body":{"dependencies.html":{}}}],["6.5.5",{"_index":997,"title":{},"body":{"dependencies.html":{}}}],["60px",{"_index":365,"title":{},"body":{"components/AdminpanelComponent.html":{}}}],["7",{"_index":660,"title":{},"body":{"components/GraphsComponent.html":{},"overview.html":{}}}],["70",{"_index":940,"title":{},"body":{"components/WebcamComponent.html":{}}}],["70px",{"_index":368,"title":{},"body":{"components/AdminpanelComponent.html":{}}}],["8.3.19",{"_index":1009,"title":{},"body":{"index.html":{}}}],["8px",{"_index":50,"title":{},"body":{"components/AdminComponent.html":{}}}],["9.1.7",{"_index":980,"title":{},"body":{"dependencies.html":{}}}],["9.1.8",{"_index":978,"title":{},"body":{"dependencies.html":{}}}],["9.2.4",{"_index":982,"title":{},"body":{"dependencies.html":{}}}],["9.3.0",{"_index":989,"title":{},"body":{"dependencies.html":{}}}],["99",{"_index":700,"title":{},"body":{"components/GraphsComponent.html":{}}}],["absolute",{"_index":775,"title":{},"body":{"components/GraphsComponent.html":{},"components/WebcamComponent.html":{}}}],["acccur",{"_index":288,"title":{},"body":{"components/AdminpanelComponent.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["accvol",{"_index":301,"title":{},"body":{"components/AdminpanelComponent.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["action",{"_index":202,"title":{},"body":{"components/AdminpanelComponent.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["actual_component",{"_index":119,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminpanelComponent.html":{},"components/AppComponent.html":{},"components/GraphsComponent.html":{},"components/WebcamComponent.html":{}}}],["add",{"_index":83,"title":{},"body":{"components/AdminComponent.html":{},"modules/AppRoutingModule.html":{}}}],["addendevent",{"_index":613,"title":{},"body":{"components/GraphsComponent.html":{}}}],["addendevent(event",{"_index":626,"title":{},"body":{"components/GraphsComponent.html":{}}}],["addstartevent",{"_index":614,"title":{},"body":{"components/GraphsComponent.html":{}}}],["addstartevent(event",{"_index":629,"title":{},"body":{"components/GraphsComponent.html":{}}}],["admin",{"_index":16,"title":{},"body":{"components/AdminComponent.html":{},"modules/AppRoutingModule.html":{}}}],["admin'},{'name",{"_index":109,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminpanelComponent.html":{},"components/AppComponent.html":{},"components/GraphsComponent.html":{},"components/WebcamComponent.html":{}}}],["admin.component.html",{"_index":20,"title":{},"body":{"components/AdminComponent.html":{}}}],["admin.component.scss",{"_index":18,"title":{},"body":{"components/AdminComponent.html":{}}}],["admin/admin.component",{"_index":478,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["admincomponent",{"_index":1,"title":{"components/AdminComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AdminpanelComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/GraphsComponent.html":{},"components/WebcamComponent.html":{},"coverage.html":{},"overview.html":{}}}],["adminpanel",{"_index":124,"title":{},"body":{"components/AdminpanelComponent.html":{},"modules/AppRoutingModule.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["adminpanel'},{'name",{"_index":111,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminpanelComponent.html":{},"components/AppComponent.html":{},"components/GraphsComponent.html":{},"components/WebcamComponent.html":{}}}],["adminpanel.component.html",{"_index":126,"title":{},"body":{"components/AdminpanelComponent.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["adminpanel.component.scss",{"_index":125,"title":{},"body":{"components/AdminpanelComponent.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["adminpanel/adminpanel.component",{"_index":567,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["adminpanelcomponent",{"_index":110,"title":{"components/AdminpanelComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AdminpanelComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/GraphsComponent.html":{},"components/WebcamComponent.html":{},"coverage.html":{},"overview.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["adminpaneldataservice",{"_index":128,"title":{"injectables/AdminpanelDataService.html":{}},"body":{"components/AdminpanelComponent.html":{},"injectables/AdminpanelDataService.html":{},"interfaces/BatteryData.html":{},"interfaces/SolarData.html":{},"coverage.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["adminpaneldatasubscription",{"_index":129,"title":{},"body":{"components/AdminpanelComponent.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["akku",{"_index":293,"title":{},"body":{"components/AdminpanelComponent.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["aktion",{"_index":342,"title":{},"body":{"components/AdminpanelComponent.html":{}}}],["aktuelle",{"_index":745,"title":{},"body":{"components/GraphsComponent.html":{}}}],["align",{"_index":53,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminpanelComponent.html":{},"components/GraphsComponent.html":{}}}],["alle",{"_index":930,"title":{},"body":{"components/WebcamComponent.html":{}}}],["angle",{"_index":645,"title":{},"body":{"components/GraphsComponent.html":{}}}],["angular",{"_index":465,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"index.html":{}}}],["angular/animations",{"_index":979,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":981,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk/clipboard",{"_index":484,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/cdk/drag",{"_index":486,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/cdk/portal",{"_index":489,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/cdk/scrolling",{"_index":491,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/cdk/stepper",{"_index":493,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/cdk/table",{"_index":495,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/cdk/tree",{"_index":497,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/common",{"_index":983,"title":{},"body":{"dependencies.html":{}}}],["angular/common/http",{"_index":400,"title":{},"body":{"injectables/AdminpanelDataService.html":{},"modules/AppModule.html":{},"interfaces/BatteryData.html":{},"interfaces/ImageData.html":{},"injectables/ImageService.html":{},"interfaces/SolarData.html":{},"interfaces/TemperatureData.html":{},"injectables/WeatherDataService.html":{},"interfaces/WindData.html":{}}}],["angular/compiler",{"_index":984,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":32,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminpanelComponent.html":{},"injectables/AdminpanelDataService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/BatteryData.html":{},"components/GraphsComponent.html":{},"interfaces/ImageData.html":{},"injectables/ImageService.html":{},"classes/NgbdDropdownBasic.html":{},"interfaces/SolarData.html":{},"interfaces/TemperatureData.html":{},"injectables/WeatherDataService.html":{},"components/WebcamComponent.html":{},"interfaces/WindData.html":{},"dependencies.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["angular/forms",{"_index":482,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/material",{"_index":985,"title":{},"body":{"dependencies.html":{}}}],["angular/material/autocomplete",{"_index":499,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/badge",{"_index":501,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/bottom",{"_index":503,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/button",{"_index":190,"title":{},"body":{"components/AdminpanelComponent.html":{},"modules/AppModule.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["angular/material/card",{"_index":468,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/checkbox",{"_index":508,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/chips",{"_index":510,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/core",{"_index":532,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/datepicker",{"_index":470,"title":{},"body":{"modules/AppModule.html":{},"components/GraphsComponent.html":{}}}],["angular/material/dialog",{"_index":514,"title":{},"body":{"modules/AppModule.html":{},"classes/NgbdDropdownBasic.html":{},"components/WebcamComponent.html":{}}}],["angular/material/divider",{"_index":516,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/expansion",{"_index":518,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/form",{"_index":472,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/grid",{"_index":520,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/icon",{"_index":523,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/input",{"_index":525,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/list",{"_index":527,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/menu",{"_index":529,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/paginator",{"_index":534,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/progress",{"_index":536,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/radio",{"_index":541,"title":{},"body":{"modules/AppModule.html":{},"components/GraphsComponent.html":{}}}],["angular/material/select",{"_index":543,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/sidenav",{"_index":545,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/slide",{"_index":549,"title":{},"body":{"modules/AppModule.html":{},"components/GraphsComponent.html":{}}}],["angular/material/slider",{"_index":547,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/snack",{"_index":551,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/sort",{"_index":553,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/stepper",{"_index":512,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/table",{"_index":555,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/tabs",{"_index":557,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/toolbar",{"_index":559,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/tooltip",{"_index":561,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/tree",{"_index":563,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/platform",{"_index":461,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":593,"title":{},"body":{"modules/AppRoutingModule.html":{},"dependencies.html":{}}}],["animation",{"_index":266,"title":{},"body":{"components/AdminpanelComponent.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["animationduration",{"_index":271,"title":{},"body":{"components/AdminpanelComponent.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["animations",{"_index":272,"title":{},"body":{"components/AdminpanelComponent.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["anmelden",{"_index":37,"title":{},"body":{"components/AdminComponent.html":{}}}],["anwenden",{"_index":754,"title":{},"body":{"components/GraphsComponent.html":{}}}],["apiurl",{"_index":375,"title":{},"body":{"injectables/AdminpanelDataService.html":{},"interfaces/BatteryData.html":{},"interfaces/ImageData.html":{},"injectables/ImageService.html":{},"interfaces/SolarData.html":{},"interfaces/TemperatureData.html":{},"injectables/WeatherDataService.html":{},"interfaces/WindData.html":{}}}],["app",{"_index":15,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminpanelComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/GraphsComponent.html":{},"classes/NgbdDropdownBasic.html":{},"components/WebcamComponent.html":{},"index.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["app.component",{"_index":475,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.html",{"_index":431,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss",{"_index":430,"title":{},"body":{"components/AppComponent.html":{}}}],["appcomponent",{"_index":112,"title":{"components/AppComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AdminpanelComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/GraphsComponent.html":{},"components/WebcamComponent.html":{},"coverage.html":{},"overview.html":{}}}],["applytimeframe",{"_index":615,"title":{},"body":{"components/GraphsComponent.html":{}}}],["appmodule",{"_index":440,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["apppage",{"_index":577,"title":{"classes/AppPage.html":{}},"body":{"classes/AppPage.html":{},"coverage.html":{}}}],["approutingmodule",{"_index":452,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["arrowscontainer",{"_index":786,"title":{},"body":{"components/GraphsComponent.html":{}}}],["artifacts",{"_index":1027,"title":{},"body":{"index.html":{}}}],["aufgenommenen",{"_index":931,"title":{},"body":{"components/WebcamComponent.html":{}}}],["ausgewählt",{"_index":222,"title":{},"body":{"components/AdminpanelComponent.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["auto",{"_index":65,"title":{},"body":{"components/AdminComponent.html":{},"components/GraphsComponent.html":{},"components/WebcamComponent.html":{}}}],["automatically",{"_index":1018,"title":{},"body":{"index.html":{}}}],["available",{"_index":1052,"title":{},"body":{"modules.html":{}}}],["axislabel",{"_index":155,"title":{},"body":{"components/AdminpanelComponent.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["background",{"_index":80,"title":{},"body":{"components/AdminComponent.html":{}}}],["backgroundcolor",{"_index":698,"title":{},"body":{"components/GraphsComponent.html":{}}}],["bar",{"_index":537,"title":{},"body":{"modules/AppModule.html":{}}}],["battery/?start='+this.formatdate(today",{"_index":422,"title":{},"body":{"injectables/AdminpanelDataService.html":{},"interfaces/BatteryData.html":{},"interfaces/SolarData.html":{}}}],["batterydata",{"_index":130,"title":{"interfaces/BatteryData.html":{}},"body":{"components/AdminpanelComponent.html":{},"injectables/AdminpanelDataService.html":{},"interfaces/BatteryData.html":{},"interfaces/SolarData.html":{},"coverage.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["beginatzero",{"_index":285,"title":{},"body":{"components/AdminpanelComponent.html":{},"components/GraphsComponent.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["behaviorsubject",{"_index":179,"title":{},"body":{"components/AdminpanelComponent.html":{},"components/GraphsComponent.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["behaviorsubject(false",{"_index":230,"title":{},"body":{"components/AdminpanelComponent.html":{},"components/GraphsComponent.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["benutzername",{"_index":35,"title":{},"body":{"components/AdminComponent.html":{}}}],["beta.0",{"_index":988,"title":{},"body":{"dependencies.html":{}}}],["bilder",{"_index":932,"title":{},"body":{"components/WebcamComponent.html":{}}}],["block",{"_index":56,"title":{},"body":{"components/AdminComponent.html":{},"components/GraphsComponent.html":{}}}],["body",{"_index":952,"title":{},"body":{"components/WebcamComponent.html":{}}}],["boolean",{"_index":181,"title":{},"body":{"components/AdminpanelComponent.html":{}}}],["bootstrap",{"_index":444,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"overview.html":{}}}],["border",{"_index":57,"title":{},"body":{"components/AdminComponent.html":{},"components/GraphsComponent.html":{}}}],["bordercolor",{"_index":294,"title":{},"body":{"components/AdminpanelComponent.html":{},"components/GraphsComponent.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["borderwidth",{"_index":703,"title":{},"body":{"components/GraphsComponent.html":{}}}],["both",{"_index":939,"title":{},"body":{"components/WebcamComponent.html":{}}}],["bottom",{"_index":767,"title":{},"body":{"components/GraphsComponent.html":{},"components/WebcamComponent.html":{}}}],["box",{"_index":61,"title":{},"body":{"components/AdminComponent.html":{},"components/GraphsComponent.html":{}}}],["browse",{"_index":1050,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":462,"title":{},"body":{"modules/AppModule.html":{},"classes/AppPage.html":{},"dependencies.html":{},"modules.html":{}}}],["browser.get(browser.baseurl",{"_index":585,"title":{},"body":{"classes/AppPage.html":{}}}],["browser/animations",{"_index":480,"title":{},"body":{"modules/AppModule.html":{}}}],["browseranimationsmodule",{"_index":479,"title":{},"body":{"modules/AppModule.html":{}}}],["browsermodule",{"_index":460,"title":{},"body":{"modules/AppModule.html":{}}}],["btndiv",{"_index":362,"title":{},"body":{"components/AdminpanelComponent.html":{}}}],["build",{"_index":1026,"title":{},"body":{"index.html":{}}}],["buildchart",{"_index":138,"title":{},"body":{"components/AdminpanelComponent.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["buildgraphs",{"_index":616,"title":{},"body":{"components/GraphsComponent.html":{}}}],["buildpowerchargechart",{"_index":139,"title":{},"body":{"components/AdminpanelComponent.html":{}}}],["buildpowerchargechart(dataset",{"_index":153,"title":{},"body":{"components/AdminpanelComponent.html":{}}}],["buildpowerchargechart(dataset,charttext,axislabel",{"_index":323,"title":{},"body":{"components/AdminpanelComponent.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["button",{"_index":74,"title":{},"body":{"components/AdminComponent.html":{},"components/GraphsComponent.html":{}}}],["c",{"_index":696,"title":{},"body":{"components/GraphsComponent.html":{}}}],["calc(100",{"_index":367,"title":{},"body":{"components/AdminpanelComponent.html":{}}}],["cancel",{"_index":73,"title":{},"body":{"components/AdminComponent.html":{}}}],["cancelbtn",{"_index":76,"title":{},"body":{"components/AdminComponent.html":{}}}],["canvas",{"_index":765,"title":{},"body":{"components/GraphsComponent.html":{}}}],["card",{"_index":64,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminpanelComponent.html":{},"components/GraphsComponent.html":{}}}],["ccc",{"_index":60,"title":{},"body":{"components/AdminComponent.html":{}}}],["cdksteppermodule",{"_index":492,"title":{},"body":{"modules/AppModule.html":{}}}],["cdktablemodule",{"_index":494,"title":{},"body":{"modules/AppModule.html":{}}}],["cdktreemodule",{"_index":496,"title":{},"body":{"modules/AppModule.html":{}}}],["center",{"_index":70,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminpanelComponent.html":{},"components/GraphsComponent.html":{}}}],["change",{"_index":93,"title":{},"body":{"components/AdminComponent.html":{},"index.html":{}}}],["changedetection",{"_index":824,"title":{},"body":{"classes/NgbdDropdownBasic.html":{},"components/WebcamComponent.html":{}}}],["changedetectionstrategy.onpush",{"_index":825,"title":{},"body":{"classes/NgbdDropdownBasic.html":{},"components/WebcamComponent.html":{}}}],["charge",{"_index":237,"title":{},"body":{"components/AdminpanelComponent.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["chargechart",{"_index":140,"title":{},"body":{"components/AdminpanelComponent.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["chargeset",{"_index":329,"title":{},"body":{"components/AdminpanelComponent.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["chargeset.push(newdata",{"_index":333,"title":{},"body":{"components/AdminpanelComponent.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["chart",{"_index":193,"title":{},"body":{"components/AdminpanelComponent.html":{},"components/GraphsComponent.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["chart(ctx",{"_index":254,"title":{},"body":{"components/AdminpanelComponent.html":{},"components/GraphsComponent.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["chart.js",{"_index":194,"title":{},"body":{"components/AdminpanelComponent.html":{},"components/GraphsComponent.html":{},"dependencies.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["charttext",{"_index":154,"title":{},"body":{"components/AdminpanelComponent.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["check",{"_index":1046,"title":{},"body":{"index.html":{}}}],["checkmarg",{"_index":366,"title":{},"body":{"components/AdminpanelComponent.html":{}}}],["checksec",{"_index":363,"title":{},"body":{"components/AdminpanelComponent.html":{}}}],["chosenbtn",{"_index":602,"title":{},"body":{"components/GraphsComponent.html":{}}}],["class",{"_index":34,"title":{"classes/AppPage.html":{},"classes/NgbdDropdownBasic.html":{}},"body":{"components/AdminComponent.html":{},"components/AdminpanelComponent.html":{},"injectables/AdminpanelDataService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"interfaces/BatteryData.html":{},"components/GraphsComponent.html":{},"interfaces/ImageData.html":{},"injectables/ImageService.html":{},"classes/NgbdDropdownBasic.html":{},"interfaces/SolarData.html":{},"interfaces/TemperatureData.html":{},"injectables/WeatherDataService.html":{},"components/WebcamComponent.html":{},"interfaces/WindData.html":{},"coverage.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["classes",{"_index":578,"title":{},"body":{"classes/AppPage.html":{},"classes/NgbdDropdownBasic.html":{},"overview.html":{}}}],["clear",{"_index":938,"title":{},"body":{"components/WebcamComponent.html":{}}}],["cli",{"_index":1007,"title":{},"body":{"index.html":{}}}],["clipboardmodule",{"_index":483,"title":{},"body":{"modules/AppModule.html":{}}}],["closebtn",{"_index":946,"title":{},"body":{"components/WebcamComponent.html":{}}}],["cluster_appmodule",{"_index":447,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":450,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":448,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":449,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":451,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["code",{"_index":1021,"title":{},"body":{"index.html":{}}}],["color",{"_index":81,"title":{},"body":{"components/AdminComponent.html":{},"components/WebcamComponent.html":{}}}],["column",{"_index":770,"title":{},"body":{"components/GraphsComponent.html":{}}}],["component",{"_index":0,"title":{"components/AdminComponent.html":{},"components/AdminpanelComponent.html":{},"components/AppComponent.html":{},"components/GraphsComponent.html":{},"components/WebcamComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AdminpanelComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/GraphsComponent.html":{},"classes/NgbdDropdownBasic.html":{},"components/WebcamComponent.html":{},"coverage.html":{},"index.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["component,changedetectionstrategy",{"_index":810,"title":{},"body":{"classes/NgbdDropdownBasic.html":{},"components/WebcamComponent.html":{}}}],["component_template",{"_index":107,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminpanelComponent.html":{},"components/AppComponent.html":{},"components/GraphsComponent.html":{},"components/WebcamComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminpanelComponent.html":{},"components/AppComponent.html":{},"components/GraphsComponent.html":{},"components/WebcamComponent.html":{},"overview.html":{}}}],["console.log(event",{"_index":687,"title":{},"body":{"components/GraphsComponent.html":{}}}],["console.log(startdate",{"_index":734,"title":{},"body":{"components/GraphsComponent.html":{}}}],["console.log(this.batterydata.map(datebattery",{"_index":251,"title":{},"body":{"components/AdminpanelComponent.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["console.log(this.enddateevents",{"_index":729,"title":{},"body":{"components/GraphsComponent.html":{}}}],["console.log(this.gallery",{"_index":856,"title":{},"body":{"classes/NgbdDropdownBasic.html":{},"components/WebcamComponent.html":{}}}],["console.log(this.recentimages.map((data",{"_index":879,"title":{},"body":{"classes/NgbdDropdownBasic.html":{},"components/WebcamComponent.html":{}}}],["console.log(this.recentpics",{"_index":854,"title":{},"body":{"classes/NgbdDropdownBasic.html":{},"components/WebcamComponent.html":{}}}],["console.log(this.startdateevents",{"_index":727,"title":{},"body":{"components/GraphsComponent.html":{}}}],["console.log(this.todaylightbox",{"_index":873,"title":{},"body":{"classes/NgbdDropdownBasic.html":{},"components/WebcamComponent.html":{}}}],["console.log(this.winddata",{"_index":685,"title":{},"body":{"components/GraphsComponent.html":{}}}],["const",{"_index":206,"title":{},"body":{"components/AdminpanelComponent.html":{},"modules/AppRoutingModule.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["constructor",{"_index":24,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminpanelComponent.html":{},"injectables/AdminpanelDataService.html":{},"components/GraphsComponent.html":{},"injectables/ImageService.html":{},"injectables/WeatherDataService.html":{},"components/WebcamComponent.html":{}}}],["constructor(adminpaneldataservice",{"_index":147,"title":{},"body":{"components/AdminpanelComponent.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["constructor(http",{"_index":382,"title":{},"body":{"injectables/AdminpanelDataService.html":{},"interfaces/BatteryData.html":{},"interfaces/ImageData.html":{},"injectables/ImageService.html":{},"interfaces/SolarData.html":{},"interfaces/TemperatureData.html":{},"injectables/WeatherDataService.html":{},"interfaces/WindData.html":{}}}],["constructor(imageservice",{"_index":834,"title":{},"body":{"classes/NgbdDropdownBasic.html":{},"components/WebcamComponent.html":{}}}],["constructor(weatherdataservice",{"_index":624,"title":{},"body":{"components/GraphsComponent.html":{}}}],["container",{"_index":85,"title":{},"body":{"components/AdminComponent.html":{},"components/GraphsComponent.html":{},"components/WebcamComponent.html":{}}}],["containers",{"_index":84,"title":{},"body":{"components/AdminComponent.html":{}}}],["content",{"_index":69,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminpanelComponent.html":{},"classes/AppPage.html":{},"components/GraphsComponent.html":{},"components/WebcamComponent.html":{}}}],["context",{"_index":973,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["core",{"_index":991,"title":{},"body":{"dependencies.html":{}}}],["cover",{"_index":849,"title":{},"body":{"classes/NgbdDropdownBasic.html":{},"components/WebcamComponent.html":{}}}],["coverage",{"_index":954,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["ctx",{"_index":248,"title":{},"body":{"components/AdminpanelComponent.html":{},"components/GraphsComponent.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["current",{"_index":287,"title":{},"body":{"components/AdminpanelComponent.html":{},"injectables/AdminpanelDataService.html":{},"interfaces/BatteryData.html":{},"interfaces/SolarData.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["cursor",{"_index":948,"title":{},"body":{"components/WebcamComponent.html":{}}}],["d",{"_index":404,"title":{},"body":{"injectables/AdminpanelDataService.html":{},"interfaces/BatteryData.html":{},"interfaces/ImageData.html":{},"injectables/ImageService.html":{},"interfaces/SolarData.html":{},"interfaces/TemperatureData.html":{},"injectables/WeatherDataService.html":{},"interfaces/WindData.html":{}}}],["d.getdate",{"_index":410,"title":{},"body":{"injectables/AdminpanelDataService.html":{},"interfaces/BatteryData.html":{},"interfaces/ImageData.html":{},"injectables/ImageService.html":{},"interfaces/SolarData.html":{},"interfaces/TemperatureData.html":{},"injectables/WeatherDataService.html":{},"interfaces/WindData.html":{}}}],["d.getfullyear",{"_index":412,"title":{},"body":{"injectables/AdminpanelDataService.html":{},"interfaces/BatteryData.html":{},"interfaces/ImageData.html":{},"injectables/ImageService.html":{},"interfaces/SolarData.html":{},"interfaces/TemperatureData.html":{},"injectables/WeatherDataService.html":{},"interfaces/WindData.html":{}}}],["d.getmonth",{"_index":407,"title":{},"body":{"injectables/AdminpanelDataService.html":{},"interfaces/BatteryData.html":{},"interfaces/ImageData.html":{},"injectables/ImageService.html":{},"interfaces/SolarData.html":{},"interfaces/TemperatureData.html":{},"injectables/WeatherDataService.html":{},"interfaces/WindData.html":{}}}],["data",{"_index":256,"title":{},"body":{"components/AdminpanelComponent.html":{},"components/GraphsComponent.html":{},"classes/NgbdDropdownBasic.html":{},"components/WebcamComponent.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["data.degrees",{"_index":697,"title":{},"body":{"components/GraphsComponent.html":{}}}],["data.degrees)[data.length",{"_index":676,"title":{},"body":{"components/GraphsComponent.html":{}}}],["data.direction",{"_index":713,"title":{},"body":{"components/GraphsComponent.html":{}}}],["data.image",{"_index":880,"title":{},"body":{"classes/NgbdDropdownBasic.html":{},"components/WebcamComponent.html":{}}}],["data.measurement_time",{"_index":883,"title":{},"body":{"classes/NgbdDropdownBasic.html":{},"components/WebcamComponent.html":{}}}],["data.service",{"_index":189,"title":{},"body":{"components/AdminpanelComponent.html":{},"modules/AppModule.html":{},"components/GraphsComponent.html":{},"classes/NgbdDropdownBasic.html":{},"components/WebcamComponent.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["data.service.ts",{"_index":373,"title":{},"body":{"injectables/AdminpanelDataService.html":{},"interfaces/BatteryData.html":{},"interfaces/ImageData.html":{},"injectables/ImageService.html":{},"interfaces/SolarData.html":{},"interfaces/TemperatureData.html":{},"injectables/WeatherDataService.html":{},"interfaces/WindData.html":{},"coverage.html":{}}}],["data.service.ts:13",{"_index":807,"title":{},"body":{"injectables/ImageService.html":{}}}],["data.service.ts:15",{"_index":386,"title":{},"body":{"injectables/AdminpanelDataService.html":{},"injectables/WeatherDataService.html":{}}}],["data.service.ts:17",{"_index":803,"title":{},"body":{"injectables/ImageService.html":{}}}],["data.service.ts:29",{"_index":395,"title":{},"body":{"injectables/AdminpanelDataService.html":{},"injectables/WeatherDataService.html":{}}}],["data.service.ts:32",{"_index":805,"title":{},"body":{"injectables/ImageService.html":{}}}],["data.service.ts:37",{"_index":389,"title":{},"body":{"injectables/AdminpanelDataService.html":{}}}],["data.service.ts:39",{"_index":900,"title":{},"body":{"injectables/WeatherDataService.html":{}}}],["data.service.ts:40",{"_index":804,"title":{},"body":{"injectables/ImageService.html":{}}}],["data.service.ts:44",{"_index":806,"title":{},"body":{"injectables/ImageService.html":{}}}],["data.service.ts:45",{"_index":397,"title":{},"body":{"injectables/AdminpanelDataService.html":{}}}],["data.service.ts:47",{"_index":902,"title":{},"body":{"injectables/WeatherDataService.html":{}}}],["data.service.ts:49",{"_index":392,"title":{},"body":{"injectables/AdminpanelDataService.html":{}}}],["data.service.ts:52",{"_index":899,"title":{},"body":{"injectables/WeatherDataService.html":{}}}],["data.service.ts:8",{"_index":399,"title":{},"body":{"injectables/AdminpanelDataService.html":{},"injectables/ImageService.html":{},"injectables/WeatherDataService.html":{}}}],["data.service.ts:9",{"_index":384,"title":{},"body":{"injectables/AdminpanelDataService.html":{},"injectables/ImageService.html":{},"injectables/WeatherDataService.html":{}}}],["data[i",{"_index":718,"title":{},"body":{"components/GraphsComponent.html":{}}}],["databattery",{"_index":246,"title":{},"body":{"components/AdminpanelComponent.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["databattery.current",{"_index":298,"title":{},"body":{"components/AdminpanelComponent.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["databattery.voltage",{"_index":306,"title":{},"body":{"components/AdminpanelComponent.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["dataset",{"_index":157,"title":{},"body":{"components/AdminpanelComponent.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["dataset.push(newdata",{"_index":300,"title":{},"body":{"components/AdminpanelComponent.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["datasets",{"_index":260,"title":{},"body":{"components/AdminpanelComponent.html":{},"components/GraphsComponent.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["datasolar",{"_index":243,"title":{},"body":{"components/AdminpanelComponent.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["datasolar.current",{"_index":313,"title":{},"body":{"components/AdminpanelComponent.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["datasolar.voltage",{"_index":318,"title":{},"body":{"components/AdminpanelComponent.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["datawind",{"_index":679,"title":{},"body":{"components/GraphsComponent.html":{}}}],["datawind.direction)[this.winddata.length",{"_index":684,"title":{},"body":{"components/GraphsComponent.html":{}}}],["datawind.speed",{"_index":709,"title":{},"body":{"components/GraphsComponent.html":{}}}],["datawind.speed)[this.winddata.length",{"_index":682,"title":{},"body":{"components/GraphsComponent.html":{}}}],["date",{"_index":201,"title":{},"body":{"components/AdminpanelComponent.html":{},"injectables/AdminpanelDataService.html":{},"interfaces/BatteryData.html":{},"interfaces/ImageData.html":{},"injectables/ImageService.html":{},"interfaces/SolarData.html":{},"interfaces/TemperatureData.html":{},"injectables/WeatherDataService.html":{},"interfaces/WindData.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["date','name','action",{"_index":175,"title":{},"body":{"components/AdminpanelComponent.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["date(data.measure_time).tolocalestring",{"_index":693,"title":{},"body":{"components/GraphsComponent.html":{}}}],["date(datawind.measure_time).gethours().tolocalestring",{"_index":722,"title":{},"body":{"components/GraphsComponent.html":{}}}],["date(datawind.measure_time).tolocalestring",{"_index":706,"title":{},"body":{"components/GraphsComponent.html":{}}}],["date(date",{"_index":405,"title":{},"body":{"injectables/AdminpanelDataService.html":{},"interfaces/BatteryData.html":{},"interfaces/ImageData.html":{},"injectables/ImageService.html":{},"interfaces/SolarData.html":{},"interfaces/TemperatureData.html":{},"injectables/WeatherDataService.html":{},"interfaces/WindData.html":{}}}],["date(datebattery.measure_time).tolocalestring",{"_index":259,"title":{},"body":{"components/AdminpanelComponent.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["date(endstring",{"_index":738,"title":{},"body":{"components/GraphsComponent.html":{}}}],["date(startstring",{"_index":733,"title":{},"body":{"components/GraphsComponent.html":{}}}],["datebattery.measure_time",{"_index":252,"title":{},"body":{"components/AdminpanelComponent.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["dates",{"_index":195,"title":{},"body":{"components/AdminpanelComponent.html":{},"coverage.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{},"miscellaneous/variables.html":{}}}],["datum",{"_index":339,"title":{},"body":{"components/AdminpanelComponent.html":{}}}],["day",{"_index":409,"title":{},"body":{"injectables/AdminpanelDataService.html":{},"interfaces/BatteryData.html":{},"interfaces/ImageData.html":{},"injectables/ImageService.html":{},"interfaces/SolarData.html":{},"interfaces/TemperatureData.html":{},"injectables/WeatherDataService.html":{},"interfaces/WindData.html":{}}}],["declarations",{"_index":443,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["default",{"_index":171,"title":{},"body":{"components/AdminpanelComponent.html":{},"injectables/AdminpanelDataService.html":{},"components/AppComponent.html":{},"components/GraphsComponent.html":{},"injectables/ImageService.html":{},"injectables/WeatherDataService.html":{},"components/WebcamComponent.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":25,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminpanelComponent.html":{},"injectables/AdminpanelDataService.html":{},"components/AppComponent.html":{},"classes/AppPage.html":{},"components/GraphsComponent.html":{},"injectables/ImageService.html":{},"injectables/WeatherDataService.html":{},"components/WebcamComponent.html":{}}}],["deg",{"_index":719,"title":{},"body":{"components/GraphsComponent.html":{}}}],["degrees",{"_index":428,"title":{},"body":{"injectables/AdminpanelDataService.html":{},"interfaces/BatteryData.html":{},"interfaces/SolarData.html":{},"interfaces/TemperatureData.html":{},"injectables/WeatherDataService.html":{},"interfaces/WindData.html":{}}}],["dependencies",{"_index":442,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"dependencies.html":{},"overview.html":{}}}],["der",{"_index":757,"title":{},"body":{"components/GraphsComponent.html":{}}}],["destroy",{"_index":832,"title":{},"body":{"classes/NgbdDropdownBasic.html":{},"components/WebcamComponent.html":{}}}],["dev",{"_index":1015,"title":{},"body":{"index.html":{}}}],["development",{"_index":1010,"title":{},"body":{"index.html":{}}}],["devkit/schematics",{"_index":977,"title":{},"body":{"dependencies.html":{}}}],["diagramchange",{"_index":141,"title":{},"body":{"components/AdminpanelComponent.html":{}}}],["diagramchange(event",{"_index":159,"title":{},"body":{"components/AdminpanelComponent.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["die",{"_index":220,"title":{},"body":{"components/AdminpanelComponent.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["dies",{"_index":928,"title":{},"body":{"components/WebcamComponent.html":{}}}],["direction",{"_index":892,"title":{},"body":{"interfaces/TemperatureData.html":{},"injectables/WeatherDataService.html":{},"interfaces/WindData.html":{}}}],["directions",{"_index":782,"title":{},"body":{"components/GraphsComponent.html":{}}}],["directive",{"_index":105,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminpanelComponent.html":{},"components/AppComponent.html":{},"components/GraphsComponent.html":{},"components/WebcamComponent.html":{}}}],["directives",{"_index":118,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminpanelComponent.html":{},"components/AppComponent.html":{},"components/GraphsComponent.html":{},"components/WebcamComponent.html":{}}}],["directive|pipe|service|class|guard|interface|enum|module",{"_index":1025,"title":{},"body":{"index.html":{}}}],["directory",{"_index":1030,"title":{},"body":{"index.html":{}}}],["dirhours",{"_index":721,"title":{},"body":{"components/GraphsComponent.html":{}}}],["dirhours[i",{"_index":723,"title":{},"body":{"components/GraphsComponent.html":{}}}],["display",{"_index":55,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminpanelComponent.html":{},"components/GraphsComponent.html":{},"components/WebcamComponent.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["displayedcolumns",{"_index":131,"title":{},"body":{"components/AdminpanelComponent.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["displayedsensorcolumns",{"_index":132,"title":{},"body":{"components/AdminpanelComponent.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["dist",{"_index":1029,"title":{},"body":{"index.html":{}}}],["document",{"_index":926,"title":{},"body":{"components/WebcamComponent.html":{}}}],["document.getelementbyid(\"acccur",{"_index":289,"title":{},"body":{"components/AdminpanelComponent.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["document.getelementbyid(\"accvol",{"_index":302,"title":{},"body":{"components/AdminpanelComponent.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["document.getelementbyid(\"solcur",{"_index":308,"title":{},"body":{"components/AdminpanelComponent.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["document.getelementbyid(\"solvol",{"_index":315,"title":{},"body":{"components/AdminpanelComponent.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["document.getelementbyid('elecchart",{"_index":249,"title":{},"body":{"components/AdminpanelComponent.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["document.getelementbyid('speed",{"_index":704,"title":{},"body":{"components/GraphsComponent.html":{}}}],["document.getelementbyid('temp",{"_index":691,"title":{},"body":{"components/GraphsComponent.html":{}}}],["document.getelementbyid(i",{"_index":715,"title":{},"body":{"components/GraphsComponent.html":{}}}],["document.getelementbyid(id",{"_index":720,"title":{},"body":{"components/GraphsComponent.html":{}}}],["documentation",{"_index":955,"title":{},"body":{"coverage.html":{}}}],["dom",{"_index":7,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminpanelComponent.html":{},"components/AppComponent.html":{},"components/GraphsComponent.html":{},"components/WebcamComponent.html":{}}}],["draft",{"_index":433,"title":{},"body":{"components/AppComponent.html":{}}}],["dragdropmodule",{"_index":485,"title":{},"body":{"modules/AppModule.html":{}}}],["drop",{"_index":487,"title":{},"body":{"modules/AppModule.html":{}}}],["duration",{"_index":267,"title":{},"body":{"components/AdminpanelComponent.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["dynamic",{"_index":986,"title":{},"body":{"dependencies.html":{}}}],["e2e",{"_index":1041,"title":{},"body":{"index.html":{}}}],["e2e/src/app.po.ts",{"_index":579,"title":{},"body":{"classes/AppPage.html":{},"coverage.html":{}}}],["e2e/src/app.po.ts:4",{"_index":583,"title":{},"body":{"classes/AppPage.html":{}}}],["e2e/src/app.po.ts:8",{"_index":582,"title":{},"body":{"classes/AppPage.html":{}}}],["element",{"_index":104,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminpanelComponent.html":{},"components/AppComponent.html":{},"classes/AppPage.html":{},"components/GraphsComponent.html":{},"components/WebcamComponent.html":{}}}],["element(by.css('app",{"_index":587,"title":{},"body":{"classes/AppPage.html":{}}}],["element.action",{"_index":343,"title":{},"body":{"components/AdminpanelComponent.html":{}}}],["element.date",{"_index":340,"title":{},"body":{"components/AdminpanelComponent.html":{}}}],["element.name",{"_index":341,"title":{},"body":{"components/AdminpanelComponent.html":{}}}],["element.sensor",{"_index":344,"title":{},"body":{"components/AdminpanelComponent.html":{}}}],["element.status",{"_index":345,"title":{},"body":{"components/AdminpanelComponent.html":{}}}],["ellipsis",{"_index":357,"title":{},"body":{"components/AdminpanelComponent.html":{}}}],["end",{"_index":391,"title":{},"body":{"injectables/AdminpanelDataService.html":{},"injectables/WeatherDataService.html":{},"index.html":{}}}],["enddate",{"_index":737,"title":{},"body":{"components/GraphsComponent.html":{}}}],["enddate).subscribe((data",{"_index":740,"title":{},"body":{"components/GraphsComponent.html":{}}}],["enddate).subscribe((datawind",{"_index":742,"title":{},"body":{"components/GraphsComponent.html":{}}}],["enddateevents",{"_index":603,"title":{},"body":{"components/GraphsComponent.html":{}}}],["enddatum",{"_index":753,"title":{},"body":{"components/GraphsComponent.html":{}}}],["endpickform,.applydates",{"_index":790,"title":{},"body":{"components/GraphsComponent.html":{}}}],["endstring",{"_index":735,"title":{},"body":{"components/GraphsComponent.html":{}}}],["energieverbrauch",{"_index":263,"title":{},"body":{"components/AdminpanelComponent.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["environment",{"_index":970,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["erweiterter",{"_index":750,"title":{},"body":{"components/GraphsComponent.html":{}}}],["event",{"_index":162,"title":{},"body":{"components/AdminpanelComponent.html":{},"components/GraphsComponent.html":{}}}],["eventhandles",{"_index":724,"title":{},"body":{"components/GraphsComponent.html":{}}}],["example",{"_index":855,"title":{},"body":{"classes/NgbdDropdownBasic.html":{},"components/WebcamComponent.html":{}}}],["execute",{"_index":1038,"title":{},"body":{"index.html":{}}}],["export",{"_index":33,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminpanelComponent.html":{},"injectables/AdminpanelDataService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"interfaces/BatteryData.html":{},"components/GraphsComponent.html":{},"interfaces/ImageData.html":{},"injectables/ImageService.html":{},"classes/NgbdDropdownBasic.html":{},"interfaces/SolarData.html":{},"interfaces/TemperatureData.html":{},"injectables/WeatherDataService.html":{},"components/WebcamComponent.html":{},"interfaces/WindData.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["exports",{"_index":446,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"overview.html":{}}}],["extendedmodestatus",{"_index":133,"title":{},"body":{"components/AdminpanelComponent.html":{},"components/GraphsComponent.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["extra",{"_index":71,"title":{},"body":{"components/AdminComponent.html":{}}}],["f44336",{"_index":82,"title":{},"body":{"components/AdminComponent.html":{}}}],["false",{"_index":182,"title":{},"body":{"components/AdminpanelComponent.html":{},"classes/NgbdDropdownBasic.html":{},"components/WebcamComponent.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{},"miscellaneous/variables.html":{}}}],["ff0000",{"_index":311,"title":{},"body":{"components/AdminpanelComponent.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["ff4500",{"_index":331,"title":{},"body":{"components/AdminpanelComponent.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["ffbf00",{"_index":295,"title":{},"body":{"components/AdminpanelComponent.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["field",{"_index":473,"title":{},"body":{"modules/AppModule.html":{}}}],["file",{"_index":9,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminpanelComponent.html":{},"injectables/AdminpanelDataService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"interfaces/BatteryData.html":{},"components/GraphsComponent.html":{},"interfaces/ImageData.html":{},"injectables/ImageService.html":{},"classes/NgbdDropdownBasic.html":{},"interfaces/SolarData.html":{},"interfaces/TemperatureData.html":{},"injectables/WeatherDataService.html":{},"components/WebcamComponent.html":{},"interfaces/WindData.html":{},"coverage.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["files",{"_index":1020,"title":{},"body":{"index.html":{}}}],["fill",{"_index":299,"title":{},"body":{"components/AdminpanelComponent.html":{},"components/GraphsComponent.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["fixed",{"_index":352,"title":{},"body":{"components/AdminpanelComponent.html":{}}}],["flag",{"_index":1032,"title":{},"body":{"index.html":{}}}],["flex",{"_index":67,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminpanelComponent.html":{},"components/GraphsComponent.html":{}}}],["float",{"_index":90,"title":{},"body":{"components/AdminComponent.html":{}}}],["float:left",{"_index":787,"title":{},"body":{"components/GraphsComponent.html":{}}}],["font",{"_index":944,"title":{},"body":{"components/WebcamComponent.html":{}}}],["fontsize",{"_index":264,"title":{},"body":{"components/AdminpanelComponent.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["forgot",{"_index":87,"title":{},"body":{"components/AdminComponent.html":{}}}],["formatdate",{"_index":377,"title":{},"body":{"injectables/AdminpanelDataService.html":{},"injectables/ImageService.html":{},"injectables/WeatherDataService.html":{}}}],["formatdate(date",{"_index":385,"title":{},"body":{"injectables/AdminpanelDataService.html":{},"interfaces/BatteryData.html":{},"interfaces/ImageData.html":{},"injectables/ImageService.html":{},"interfaces/SolarData.html":{},"interfaces/TemperatureData.html":{},"injectables/WeatherDataService.html":{},"interfaces/WindData.html":{}}}],["formsmodule",{"_index":481,"title":{},"body":{"modules/AppModule.html":{}}}],["full",{"_index":40,"title":{},"body":{"components/AdminComponent.html":{}}}],["further",{"_index":1042,"title":{},"body":{"index.html":{}}}],["für",{"_index":217,"title":{},"body":{"components/AdminpanelComponent.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["galerie",{"_index":437,"title":{},"body":{"components/AppComponent.html":{}}}],["gallerizemodule",{"_index":573,"title":{},"body":{"modules/AppModule.html":{}}}],["gallery",{"_index":817,"title":{},"body":{"classes/NgbdDropdownBasic.html":{},"components/WebcamComponent.html":{}}}],["gallery,public",{"_index":836,"title":{},"body":{"classes/NgbdDropdownBasic.html":{},"components/WebcamComponent.html":{}}}],["gallery/core",{"_index":570,"title":{},"body":{"modules/AppModule.html":{},"classes/NgbdDropdownBasic.html":{},"components/WebcamComponent.html":{},"dependencies.html":{}}}],["gallery/gallerize",{"_index":574,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["gallery/lightbox",{"_index":572,"title":{},"body":{"modules/AppModule.html":{},"classes/NgbdDropdownBasic.html":{},"components/WebcamComponent.html":{},"dependencies.html":{}}}],["galleryitem",{"_index":818,"title":{},"body":{"classes/NgbdDropdownBasic.html":{},"components/WebcamComponent.html":{}}}],["gallerymodule",{"_index":568,"title":{},"body":{"modules/AppModule.html":{}}}],["general",{"_index":268,"title":{},"body":{"components/AdminpanelComponent.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["generate",{"_index":1023,"title":{},"body":{"index.html":{}}}],["generated",{"_index":1006,"title":{},"body":{"index.html":{}}}],["gestern",{"_index":934,"title":{},"body":{"components/WebcamComponent.html":{}}}],["getbatterydata",{"_index":378,"title":{},"body":{"injectables/AdminpanelDataService.html":{}}}],["getbatterydata(time",{"_index":387,"title":{},"body":{"injectables/AdminpanelDataService.html":{},"interfaces/BatteryData.html":{},"interfaces/SolarData.html":{}}}],["getbatterydataframe",{"_index":379,"title":{},"body":{"injectables/AdminpanelDataService.html":{}}}],["getbatterydataframe(start",{"_index":390,"title":{},"body":{"injectables/AdminpanelDataService.html":{}}}],["getbatterydataframe(start:date,end:date",{"_index":425,"title":{},"body":{"injectables/AdminpanelDataService.html":{},"interfaces/BatteryData.html":{},"interfaces/SolarData.html":{}}}],["getchargedataset",{"_index":142,"title":{},"body":{"components/AdminpanelComponent.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["getdataset",{"_index":143,"title":{},"body":{"components/AdminpanelComponent.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["getimagedate",{"_index":882,"title":{},"body":{"classes/NgbdDropdownBasic.html":{},"components/WebcamComponent.html":{}}}],["getimagelocation",{"_index":878,"title":{},"body":{"classes/NgbdDropdownBasic.html":{},"components/WebcamComponent.html":{}}}],["getpowerdataset",{"_index":144,"title":{},"body":{"components/AdminpanelComponent.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["getrecentimages",{"_index":797,"title":{},"body":{"interfaces/ImageData.html":{},"injectables/ImageService.html":{}}}],["getsolardata",{"_index":380,"title":{},"body":{"injectables/AdminpanelDataService.html":{}}}],["getsolardata(time",{"_index":394,"title":{},"body":{"injectables/AdminpanelDataService.html":{}}}],["getsolardataframe",{"_index":381,"title":{},"body":{"injectables/AdminpanelDataService.html":{}}}],["getsolardataframe(start",{"_index":396,"title":{},"body":{"injectables/AdminpanelDataService.html":{}}}],["getsolardataframe(start:date,end:date",{"_index":423,"title":{},"body":{"injectables/AdminpanelDataService.html":{},"interfaces/BatteryData.html":{},"interfaces/SolarData.html":{}}}],["gettemperatures",{"_index":893,"title":{},"body":{"injectables/WeatherDataService.html":{}}}],["gettemperatures(time",{"_index":897,"title":{},"body":{"injectables/WeatherDataService.html":{}}}],["gettemperaturesdataframe",{"_index":894,"title":{},"body":{"injectables/WeatherDataService.html":{}}}],["gettemperaturesdataframe(start",{"_index":898,"title":{},"body":{"injectables/WeatherDataService.html":{}}}],["gettemperaturesdataframe(start:date,end:date",{"_index":890,"title":{},"body":{"interfaces/TemperatureData.html":{},"injectables/WeatherDataService.html":{},"interfaces/WindData.html":{}}}],["getting",{"_index":1002,"title":{"index.html":{}},"body":{}}],["gettitletext",{"_index":580,"title":{},"body":{"classes/AppPage.html":{}}}],["gettodayimages",{"_index":802,"title":{},"body":{"injectables/ImageService.html":{}}}],["getwinddata",{"_index":895,"title":{},"body":{"injectables/WeatherDataService.html":{}}}],["getwinddata(time",{"_index":886,"title":{},"body":{"interfaces/TemperatureData.html":{},"injectables/WeatherDataService.html":{},"interfaces/WindData.html":{}}}],["getwinddataframe",{"_index":896,"title":{},"body":{"injectables/WeatherDataService.html":{}}}],["getwinddataframe(start",{"_index":901,"title":{},"body":{"injectables/WeatherDataService.html":{}}}],["getwinddataframe(start:date,end:date",{"_index":888,"title":{},"body":{"interfaces/TemperatureData.html":{},"injectables/WeatherDataService.html":{},"interfaces/WindData.html":{}}}],["getyesterdayimages",{"_index":799,"title":{},"body":{"interfaces/ImageData.html":{},"injectables/ImageService.html":{}}}],["gibt",{"_index":216,"title":{},"body":{"components/AdminpanelComponent.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["go",{"_index":1045,"title":{},"body":{"index.html":{}}}],["graph",{"_index":1051,"title":{},"body":{"modules.html":{}}}],["graphen",{"_index":436,"title":{},"body":{"components/AppComponent.html":{}}}],["graphs",{"_index":599,"title":{},"body":{"components/GraphsComponent.html":{}}}],["graphs'},{'name",{"_index":115,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminpanelComponent.html":{},"components/AppComponent.html":{},"components/GraphsComponent.html":{},"components/WebcamComponent.html":{}}}],["graphs.component.html",{"_index":601,"title":{},"body":{"components/GraphsComponent.html":{}}}],["graphs.component.scss",{"_index":600,"title":{},"body":{"components/GraphsComponent.html":{}}}],["graphs/graphs.component",{"_index":476,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["graphscomponent",{"_index":114,"title":{"components/GraphsComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AdminpanelComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/GraphsComponent.html":{},"components/WebcamComponent.html":{},"coverage.html":{},"overview.html":{}}}],["h1",{"_index":361,"title":{},"body":{"components/AdminpanelComponent.html":{},"components/GraphsComponent.html":{}}}],["hammerjs",{"_index":821,"title":{},"body":{"classes/NgbdDropdownBasic.html":{},"components/WebcamComponent.html":{},"dependencies.html":{}}}],["height",{"_index":347,"title":{},"body":{"components/AdminpanelComponent.html":{},"components/GraphsComponent.html":{},"components/WebcamComponent.html":{}}}],["height:3em",{"_index":764,"title":{},"body":{"components/GraphsComponent.html":{}}}],["height:70",{"_index":781,"title":{},"body":{"components/GraphsComponent.html":{}}}],["height:auto",{"_index":769,"title":{},"body":{"components/GraphsComponent.html":{}}}],["help",{"_index":1043,"title":{},"body":{"index.html":{}}}],["heute",{"_index":927,"title":{},"body":{"components/WebcamComponent.html":{}}}],["hidden",{"_index":218,"title":{},"body":{"components/AdminpanelComponent.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["hourdata",{"_index":604,"title":{},"body":{"components/GraphsComponent.html":{}}}],["hover",{"_index":270,"title":{},"body":{"components/AdminpanelComponent.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["hovering",{"_index":273,"title":{},"body":{"components/AdminpanelComponent.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["html",{"_index":103,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminpanelComponent.html":{},"components/AppComponent.html":{},"components/GraphsComponent.html":{},"components/WebcamComponent.html":{}}}],["http",{"_index":376,"title":{},"body":{"injectables/AdminpanelDataService.html":{},"interfaces/BatteryData.html":{},"interfaces/ImageData.html":{},"injectables/ImageService.html":{},"interfaces/SolarData.html":{},"interfaces/TemperatureData.html":{},"injectables/WeatherDataService.html":{},"interfaces/WindData.html":{}}}],["http://192.168.178.44:8000/api",{"_index":794,"title":{},"body":{"interfaces/ImageData.html":{},"injectables/ImageService.html":{},"interfaces/TemperatureData.html":{},"injectables/WeatherDataService.html":{},"interfaces/WindData.html":{}}}],["http://localhost:4200",{"_index":1017,"title":{},"body":{"index.html":{}}}],["http://localhost:8000/api",{"_index":398,"title":{},"body":{"injectables/AdminpanelDataService.html":{},"interfaces/BatteryData.html":{},"interfaces/SolarData.html":{}}}],["httpclient",{"_index":383,"title":{},"body":{"injectables/AdminpanelDataService.html":{},"modules/AppModule.html":{},"interfaces/BatteryData.html":{},"interfaces/ImageData.html":{},"injectables/ImageService.html":{},"interfaces/SolarData.html":{},"interfaces/TemperatureData.html":{},"injectables/WeatherDataService.html":{},"interfaces/WindData.html":{}}}],["httpclientmodule",{"_index":565,"title":{},"body":{"modules/AppModule.html":{}}}],["https://cdn.jsdelivr.net/npm/chart.js@2.9.3/dist/chart.min.js",{"_index":744,"title":{},"body":{"components/GraphsComponent.html":{}}}],["id",{"_index":281,"title":{},"body":{"components/AdminpanelComponent.html":{},"injectables/AdminpanelDataService.html":{},"interfaces/BatteryData.html":{},"components/GraphsComponent.html":{},"interfaces/ImageData.html":{},"injectables/ImageService.html":{},"interfaces/SolarData.html":{},"interfaces/TemperatureData.html":{},"injectables/WeatherDataService.html":{},"interfaces/WindData.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["identifier",{"_index":956,"title":{},"body":{"coverage.html":{}}}],["if(acccur.checked",{"_index":290,"title":{},"body":{"components/AdminpanelComponent.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["if(accvol.checked",{"_index":303,"title":{},"body":{"components/AdminpanelComponent.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["if(event.value",{"_index":232,"title":{},"body":{"components/AdminpanelComponent.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["if(solcur.checked",{"_index":309,"title":{},"body":{"components/AdminpanelComponent.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["if(solvol.checked",{"_index":316,"title":{},"body":{"components/AdminpanelComponent.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["image",{"_index":566,"title":{},"body":{"modules/AppModule.html":{},"interfaces/ImageData.html":{},"injectables/ImageService.html":{},"classes/NgbdDropdownBasic.html":{},"components/WebcamComponent.html":{}}}],["imagecontainer",{"_index":785,"title":{},"body":{"components/GraphsComponent.html":{}}}],["imagedata",{"_index":791,"title":{"interfaces/ImageData.html":{}},"body":{"interfaces/ImageData.html":{},"injectables/ImageService.html":{},"classes/NgbdDropdownBasic.html":{},"components/WebcamComponent.html":{},"coverage.html":{}}}],["imageitem",{"_index":819,"title":{},"body":{"classes/NgbdDropdownBasic.html":{},"components/WebcamComponent.html":{}}}],["imageitem({src:data.image,thumb:data.image",{"_index":859,"title":{},"body":{"classes/NgbdDropdownBasic.html":{},"components/WebcamComponent.html":{}}}],["imageone",{"_index":935,"title":{},"body":{"components/WebcamComponent.html":{}}}],["images/?start='+this.formatdate(this.today",{"_index":801,"title":{},"body":{"interfaces/ImageData.html":{},"injectables/ImageService.html":{}}}],["images/?start='+this.formatdate(today",{"_index":796,"title":{},"body":{"interfaces/ImageData.html":{},"injectables/ImageService.html":{}}}],["images/recent",{"_index":798,"title":{},"body":{"interfaces/ImageData.html":{},"injectables/ImageService.html":{}}}],["imageservice",{"_index":453,"title":{"injectables/ImageService.html":{}},"body":{"modules/AppModule.html":{},"interfaces/ImageData.html":{},"injectables/ImageService.html":{},"classes/NgbdDropdownBasic.html":{},"components/WebcamComponent.html":{},"coverage.html":{},"overview.html":{}}}],["imageservice,public",{"_index":835,"title":{},"body":{"classes/NgbdDropdownBasic.html":{},"components/WebcamComponent.html":{}}}],["imagesize",{"_index":848,"title":{},"body":{"classes/NgbdDropdownBasic.html":{},"components/WebcamComponent.html":{}}}],["img",{"_index":714,"title":{},"body":{"components/GraphsComponent.html":{},"components/WebcamComponent.html":{}}}],["img.style.transform",{"_index":716,"title":{},"body":{"components/GraphsComponent.html":{}}}],["imgtext",{"_index":942,"title":{},"body":{"components/WebcamComponent.html":{}}}],["implements",{"_index":11,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminpanelComponent.html":{},"components/GraphsComponent.html":{},"classes/NgbdDropdownBasic.html":{},"components/WebcamComponent.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["import",{"_index":31,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminpanelComponent.html":{},"injectables/AdminpanelDataService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"interfaces/BatteryData.html":{},"components/GraphsComponent.html":{},"interfaces/ImageData.html":{},"injectables/ImageService.html":{},"classes/NgbdDropdownBasic.html":{},"interfaces/SolarData.html":{},"interfaces/TemperatureData.html":{},"injectables/WeatherDataService.html":{},"components/WebcamComponent.html":{},"interfaces/WindData.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["important",{"_index":349,"title":{},"body":{"components/AdminpanelComponent.html":{},"components/WebcamComponent.html":{}}}],["imports",{"_index":459,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["index",{"_index":21,"title":{"index.html":{}},"body":{"components/AdminComponent.html":{},"components/AdminpanelComponent.html":{},"injectables/AdminpanelDataService.html":{},"components/AppComponent.html":{},"classes/AppPage.html":{},"interfaces/BatteryData.html":{},"components/GraphsComponent.html":{},"interfaces/ImageData.html":{},"injectables/ImageService.html":{},"interfaces/SolarData.html":{},"interfaces/TemperatureData.html":{},"injectables/WeatherDataService.html":{},"components/WebcamComponent.html":{},"interfaces/WindData.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminpanelComponent.html":{},"injectables/AdminpanelDataService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"interfaces/BatteryData.html":{},"components/GraphsComponent.html":{},"interfaces/ImageData.html":{},"injectables/ImageService.html":{},"classes/NgbdDropdownBasic.html":{},"interfaces/SolarData.html":{},"interfaces/TemperatureData.html":{},"injectables/WeatherDataService.html":{},"components/WebcamComponent.html":{},"interfaces/WindData.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["injectable",{"_index":370,"title":{"injectables/AdminpanelDataService.html":{},"injectables/ImageService.html":{},"injectables/WeatherDataService.html":{}},"body":{"injectables/AdminpanelDataService.html":{},"interfaces/BatteryData.html":{},"interfaces/ImageData.html":{},"injectables/ImageService.html":{},"interfaces/SolarData.html":{},"interfaces/TemperatureData.html":{},"injectables/WeatherDataService.html":{},"interfaces/WindData.html":{},"coverage.html":{}}}],["injectables",{"_index":371,"title":{},"body":{"injectables/AdminpanelDataService.html":{},"injectables/ImageService.html":{},"injectables/WeatherDataService.html":{},"overview.html":{}}}],["inline",{"_index":937,"title":{},"body":{"components/WebcamComponent.html":{}}}],["input",{"_index":650,"title":{},"body":{"components/GraphsComponent.html":{}}}],["input=16",{"_index":239,"title":{},"body":{"components/AdminpanelComponent.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["input[type=password",{"_index":44,"title":{},"body":{"components/AdminComponent.html":{}}}],["input[type=text",{"_index":43,"title":{},"body":{"components/AdminComponent.html":{}}}],["inputs",{"_index":42,"title":{},"body":{"components/AdminComponent.html":{}}}],["interface",{"_index":199,"title":{"interfaces/BatteryData.html":{},"interfaces/ImageData.html":{},"interfaces/SolarData.html":{},"interfaces/TemperatureData.html":{},"interfaces/WindData.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}},"body":{"components/AdminpanelComponent.html":{},"injectables/AdminpanelDataService.html":{},"interfaces/BatteryData.html":{},"interfaces/ImageData.html":{},"injectables/ImageService.html":{},"interfaces/SolarData.html":{},"interfaces/TemperatureData.html":{},"injectables/WeatherDataService.html":{},"interfaces/WindData.html":{},"coverage.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["interfaces",{"_index":596,"title":{},"body":{"interfaces/BatteryData.html":{},"interfaces/ImageData.html":{},"interfaces/SolarData.html":{},"interfaces/TemperatureData.html":{},"interfaces/WindData.html":{},"overview.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["istoggled",{"_index":134,"title":{},"body":{"components/AdminpanelComponent.html":{}}}],["istoggled:boolean",{"_index":226,"title":{},"body":{"components/AdminpanelComponent.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["item",{"_index":274,"title":{},"body":{"components/AdminpanelComponent.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["items",{"_index":364,"title":{},"body":{"components/AdminpanelComponent.html":{},"components/GraphsComponent.html":{}}}],["js",{"_index":992,"title":{},"body":{"dependencies.html":{}}}],["justify",{"_index":68,"title":{},"body":{"components/AdminComponent.html":{},"components/GraphsComponent.html":{}}}],["karma",{"_index":1040,"title":{},"body":{"index.html":{}}}],["label",{"_index":694,"title":{},"body":{"components/GraphsComponent.html":{}}}],["label:\"ladestrom",{"_index":330,"title":{},"body":{"components/AdminpanelComponent.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["label:\"leistungsaufnahme",{"_index":325,"title":{},"body":{"components/AdminpanelComponent.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["label:\"spannung",{"_index":304,"title":{},"body":{"components/AdminpanelComponent.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["label:\"stromverbrauch",{"_index":292,"title":{},"body":{"components/AdminpanelComponent.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["labels",{"_index":257,"title":{},"body":{"components/AdminpanelComponent.html":{},"components/GraphsComponent.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["labelstring",{"_index":279,"title":{},"body":{"components/AdminpanelComponent.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["ladestrom",{"_index":337,"title":{},"body":{"components/AdminpanelComponent.html":{}}}],["ladestrom\",status",{"_index":215,"title":{},"body":{"components/AdminpanelComponent.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{},"miscellaneous/variables.html":{}}}],["layout",{"_index":351,"title":{},"body":{"components/AdminpanelComponent.html":{}}}],["lazy",{"_index":851,"title":{},"body":{"classes/NgbdDropdownBasic.html":{},"components/WebcamComponent.html":{}}}],["left",{"_index":54,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminpanelComponent.html":{},"components/GraphsComponent.html":{},"components/WebcamComponent.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["legend",{"_index":102,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminpanelComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/GraphsComponent.html":{},"components/WebcamComponent.html":{},"overview.html":{}}}],["leistungsaufnahme",{"_index":221,"title":{},"body":{"components/AdminpanelComponent.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["leistungsaufnahme\",status",{"_index":214,"title":{},"body":{"components/AdminpanelComponent.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{},"miscellaneous/variables.html":{}}}],["letzten",{"_index":758,"title":{},"body":{"components/GraphsComponent.html":{}}}],["lightbox",{"_index":820,"title":{},"body":{"classes/NgbdDropdownBasic.html":{},"components/WebcamComponent.html":{}}}],["lightbox,public",{"_index":838,"title":{},"body":{"classes/NgbdDropdownBasic.html":{},"components/WebcamComponent.html":{}}}],["lightboxid",{"_index":875,"title":{},"body":{"classes/NgbdDropdownBasic.html":{},"components/WebcamComponent.html":{}}}],["lightboxmodule",{"_index":571,"title":{},"body":{"modules/AppModule.html":{}}}],["lightgray",{"_index":766,"title":{},"body":{"components/GraphsComponent.html":{}}}],["line",{"_index":255,"title":{},"body":{"components/AdminpanelComponent.html":{},"components/GraphsComponent.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["list",{"_index":521,"title":{},"body":{"modules/AppModule.html":{}}}],["loadingstrategy",{"_index":850,"title":{},"body":{"classes/NgbdDropdownBasic.html":{},"components/WebcamComponent.html":{}}}],["loadrecentpics",{"_index":857,"title":{},"body":{"classes/NgbdDropdownBasic.html":{},"components/WebcamComponent.html":{}}}],["loadtodaypics",{"_index":860,"title":{},"body":{"classes/NgbdDropdownBasic.html":{},"components/WebcamComponent.html":{}}}],["loadyesterdaypics",{"_index":866,"title":{},"body":{"classes/NgbdDropdownBasic.html":{},"components/WebcamComponent.html":{}}}],["logdata",{"_index":184,"title":{},"body":{"components/AdminpanelComponent.html":{},"coverage.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{},"miscellaneous/variables.html":{}}}],["login",{"_index":38,"title":{},"body":{"components/AdminComponent.html":{}}}],["logtabledata",{"_index":135,"title":{},"body":{"components/AdminpanelComponent.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["m/s",{"_index":708,"title":{},"body":{"components/GraphsComponent.html":{}}}],["margin",{"_index":49,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminpanelComponent.html":{},"components/GraphsComponent.html":{},"components/WebcamComponent.html":{}}}],["mat",{"_index":63,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminpanelComponent.html":{},"components/GraphsComponent.html":{},"components/WebcamComponent.html":{}}}],["matautocompletemodule",{"_index":498,"title":{},"body":{"modules/AppModule.html":{}}}],["matbadgemodule",{"_index":500,"title":{},"body":{"modules/AppModule.html":{}}}],["matbottomsheetmodule",{"_index":502,"title":{},"body":{"modules/AppModule.html":{}}}],["matbuttonmodule",{"_index":505,"title":{},"body":{"modules/AppModule.html":{}}}],["matbuttontogglechange",{"_index":160,"title":{},"body":{"components/AdminpanelComponent.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["matbuttontogglemodule",{"_index":506,"title":{},"body":{"modules/AppModule.html":{}}}],["matcardmodule",{"_index":467,"title":{},"body":{"modules/AppModule.html":{}}}],["matcheckboxmodule",{"_index":507,"title":{},"body":{"modules/AppModule.html":{}}}],["matching",{"_index":121,"title":{},"body":{"components/AdminComponent.html":{},"injectables/AdminpanelDataService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"interfaces/BatteryData.html":{},"interfaces/ImageData.html":{},"injectables/ImageService.html":{},"classes/NgbdDropdownBasic.html":{},"interfaces/SolarData.html":{},"interfaces/TemperatureData.html":{},"injectables/WeatherDataService.html":{},"interfaces/WindData.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"interfaces/raspyActions.html":{},"routes.html":{},"interfaces/sensorActions.html":{},"miscellaneous/variables.html":{}}}],["matchipsmodule",{"_index":509,"title":{},"body":{"modules/AppModule.html":{}}}],["matdatepickerinputevent",{"_index":627,"title":{},"body":{"components/GraphsComponent.html":{}}}],["matdatepickermodule",{"_index":469,"title":{},"body":{"modules/AppModule.html":{}}}],["matdialog",{"_index":816,"title":{},"body":{"classes/NgbdDropdownBasic.html":{},"components/WebcamComponent.html":{}}}],["matdialogmodule",{"_index":513,"title":{},"body":{"modules/AppModule.html":{}}}],["matdividermodule",{"_index":515,"title":{},"body":{"modules/AppModule.html":{}}}],["matexpansionmodule",{"_index":517,"title":{},"body":{"modules/AppModule.html":{}}}],["matformfieldmodule",{"_index":471,"title":{},"body":{"modules/AppModule.html":{}}}],["matgridlistmodule",{"_index":519,"title":{},"body":{"modules/AppModule.html":{}}}],["maticonmodule",{"_index":522,"title":{},"body":{"modules/AppModule.html":{}}}],["matinputmodule",{"_index":524,"title":{},"body":{"modules/AppModule.html":{}}}],["matlist",{"_index":346,"title":{},"body":{"components/AdminpanelComponent.html":{}}}],["matlistmodule",{"_index":526,"title":{},"body":{"modules/AppModule.html":{}}}],["matmenumodule",{"_index":528,"title":{},"body":{"modules/AppModule.html":{}}}],["matnativedatemodule",{"_index":530,"title":{},"body":{"modules/AppModule.html":{}}}],["matpaginatormodule",{"_index":533,"title":{},"body":{"modules/AppModule.html":{}}}],["matprogressbarmodule",{"_index":535,"title":{},"body":{"modules/AppModule.html":{}}}],["matprogressspinnermodule",{"_index":538,"title":{},"body":{"modules/AppModule.html":{}}}],["matradiobutton",{"_index":668,"title":{},"body":{"components/GraphsComponent.html":{}}}],["matradiochange",{"_index":636,"title":{},"body":{"components/GraphsComponent.html":{}}}],["matradiomodule",{"_index":540,"title":{},"body":{"modules/AppModule.html":{}}}],["matripplemodule",{"_index":531,"title":{},"body":{"modules/AppModule.html":{}}}],["matselectmodule",{"_index":542,"title":{},"body":{"modules/AppModule.html":{}}}],["matsidenavmodule",{"_index":544,"title":{},"body":{"modules/AppModule.html":{}}}],["matslidermodule",{"_index":546,"title":{},"body":{"modules/AppModule.html":{}}}],["matslidetogglechange",{"_index":639,"title":{},"body":{"components/GraphsComponent.html":{}}}],["matslidetogglemodule",{"_index":548,"title":{},"body":{"modules/AppModule.html":{}}}],["matsnackbarmodule",{"_index":550,"title":{},"body":{"modules/AppModule.html":{}}}],["matsortmodule",{"_index":552,"title":{},"body":{"modules/AppModule.html":{}}}],["matsteppermodule",{"_index":511,"title":{},"body":{"modules/AppModule.html":{}}}],["mattablemodule",{"_index":554,"title":{},"body":{"modules/AppModule.html":{}}}],["mattabsmodule",{"_index":556,"title":{},"body":{"modules/AppModule.html":{}}}],["mattoolbarmodule",{"_index":558,"title":{},"body":{"modules/AppModule.html":{}}}],["mattooltipmodule",{"_index":560,"title":{},"body":{"modules/AppModule.html":{}}}],["mattreemodule",{"_index":562,"title":{},"body":{"modules/AppModule.html":{}}}],["max",{"_index":99,"title":{},"body":{"components/AdminComponent.html":{}}}],["md",{"_index":466,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["mdbbootstrapmodule",{"_index":464,"title":{},"body":{"modules/AppModule.html":{}}}],["mdbbootstrapmodule.forroot",{"_index":575,"title":{},"body":{"modules/AppModule.html":{}}}],["mdbootstrap",{"_index":995,"title":{},"body":{"dependencies.html":{}}}],["measure_time",{"_index":427,"title":{},"body":{"injectables/AdminpanelDataService.html":{},"interfaces/BatteryData.html":{},"interfaces/SolarData.html":{},"interfaces/TemperatureData.html":{},"injectables/WeatherDataService.html":{},"interfaces/WindData.html":{}}}],["measurement_time",{"_index":793,"title":{},"body":{"interfaces/ImageData.html":{},"injectables/ImageService.html":{}}}],["media",{"_index":97,"title":{},"body":{"components/AdminComponent.html":{}}}],["merken",{"_index":39,"title":{},"body":{"components/AdminComponent.html":{}}}],["metadata",{"_index":13,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminpanelComponent.html":{},"components/AppComponent.html":{},"components/GraphsComponent.html":{},"components/WebcamComponent.html":{}}}],["methods",{"_index":22,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminpanelComponent.html":{},"injectables/AdminpanelDataService.html":{},"classes/AppPage.html":{},"components/GraphsComponent.html":{},"injectables/ImageService.html":{},"injectables/WeatherDataService.html":{},"components/WebcamComponent.html":{}}}],["middle",{"_index":773,"title":{},"body":{"components/GraphsComponent.html":{}}}],["miscellaneous",{"_index":1057,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["module",{"_index":439,"title":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["modules",{"_index":441,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["modus",{"_index":751,"title":{},"body":{"components/GraphsComponent.html":{}}}],["month",{"_index":406,"title":{},"body":{"injectables/AdminpanelDataService.html":{},"interfaces/BatteryData.html":{},"interfaces/ImageData.html":{},"injectables/ImageService.html":{},"interfaces/SolarData.html":{},"interfaces/TemperatureData.html":{},"injectables/WeatherDataService.html":{},"interfaces/WindData.html":{}}}],["month.length",{"_index":413,"title":{},"body":{"injectables/AdminpanelDataService.html":{},"interfaces/BatteryData.html":{},"interfaces/ImageData.html":{},"injectables/ImageService.html":{},"interfaces/SolarData.html":{},"interfaces/TemperatureData.html":{},"injectables/WeatherDataService.html":{},"interfaces/WindData.html":{}}}],["more",{"_index":1044,"title":{},"body":{"index.html":{}}}],["name",{"_index":108,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminpanelComponent.html":{},"injectables/AdminpanelDataService.html":{},"components/AppComponent.html":{},"components/GraphsComponent.html":{},"injectables/ImageService.html":{},"injectables/WeatherDataService.html":{},"components/WebcamComponent.html":{},"index.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["navigate",{"_index":1016,"title":{},"body":{"index.html":{}}}],["navigateto",{"_index":581,"title":{},"body":{"classes/AppPage.html":{}}}],["new",{"_index":229,"title":{},"body":{"components/AdminpanelComponent.html":{},"injectables/AdminpanelDataService.html":{},"interfaces/BatteryData.html":{},"components/GraphsComponent.html":{},"interfaces/ImageData.html":{},"injectables/ImageService.html":{},"classes/NgbdDropdownBasic.html":{},"interfaces/SolarData.html":{},"interfaces/TemperatureData.html":{},"injectables/WeatherDataService.html":{},"components/WebcamComponent.html":{},"interfaces/WindData.html":{},"coverage.html":{},"index.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["newdata",{"_index":291,"title":{},"body":{"components/AdminpanelComponent.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["ng",{"_index":1013,"title":{},"body":{"index.html":{}}}],["ngbddropdownbasic",{"_index":808,"title":{"classes/NgbdDropdownBasic.html":{}},"body":{"classes/NgbdDropdownBasic.html":{},"components/WebcamComponent.html":{},"coverage.html":{}}}],["ngmodule",{"_index":463,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["ngondestroy",{"_index":617,"title":{},"body":{"components/GraphsComponent.html":{},"classes/NgbdDropdownBasic.html":{},"components/WebcamComponent.html":{}}}],["ngoninit",{"_index":23,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminpanelComponent.html":{},"components/GraphsComponent.html":{},"classes/NgbdDropdownBasic.html":{},"components/WebcamComponent.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["ngx",{"_index":569,"title":{},"body":{"modules/AppModule.html":{},"classes/NgbdDropdownBasic.html":{},"components/WebcamComponent.html":{},"dependencies.html":{}}}],["nicht",{"_index":225,"title":{},"body":{"components/AdminpanelComponent.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["none",{"_index":101,"title":{},"body":{"components/AdminComponent.html":{},"components/WebcamComponent.html":{}}}],["nowrap",{"_index":360,"title":{},"body":{"components/AdminpanelComponent.html":{}}}],["number",{"_index":388,"title":{},"body":{"injectables/AdminpanelDataService.html":{},"interfaces/BatteryData.html":{},"components/GraphsComponent.html":{},"interfaces/ImageData.html":{},"injectables/ImageService.html":{},"interfaces/SolarData.html":{},"interfaces/TemperatureData.html":{},"injectables/WeatherDataService.html":{},"components/WebcamComponent.html":{},"interfaces/WindData.html":{}}}],["ob",{"_index":219,"title":{},"body":{"components/AdminpanelComponent.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["object",{"_index":1065,"title":{},"body":{"miscellaneous/variables.html":{}}}],["observable",{"_index":811,"title":{},"body":{"classes/NgbdDropdownBasic.html":{},"components/WebcamComponent.html":{}}}],["oder",{"_index":224,"title":{},"body":{"components/AdminpanelComponent.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["ok",{"_index":208,"title":{},"body":{"components/AdminpanelComponent.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{},"miscellaneous/variables.html":{}}}],["onbtnchange",{"_index":618,"title":{},"body":{"components/GraphsComponent.html":{}}}],["onbtnchange(event",{"_index":635,"title":{},"body":{"components/GraphsComponent.html":{}}}],["onchange",{"_index":619,"title":{},"body":{"components/GraphsComponent.html":{}}}],["onchange(event",{"_index":638,"title":{},"body":{"components/GraphsComponent.html":{}}}],["onchanges",{"_index":667,"title":{},"body":{"components/GraphsComponent.html":{}}}],["ondestroy",{"_index":598,"title":{},"body":{"components/GraphsComponent.html":{}}}],["onimageload",{"_index":620,"title":{},"body":{"components/GraphsComponent.html":{}}}],["onimageload(i",{"_index":641,"title":{},"body":{"components/GraphsComponent.html":{}}}],["oninit",{"_index":12,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminpanelComponent.html":{},"components/GraphsComponent.html":{},"classes/NgbdDropdownBasic.html":{},"components/WebcamComponent.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["openlightbox",{"_index":905,"title":{},"body":{"components/WebcamComponent.html":{}}}],["openlightbox(index",{"_index":914,"title":{},"body":{"components/WebcamComponent.html":{}}}],["openlightbox(index:number,lightboxid:string",{"_index":872,"title":{},"body":{"classes/NgbdDropdownBasic.html":{},"components/WebcamComponent.html":{}}}],["optional",{"_index":151,"title":{},"body":{"components/AdminpanelComponent.html":{},"injectables/AdminpanelDataService.html":{},"components/GraphsComponent.html":{},"injectables/ImageService.html":{},"injectables/WeatherDataService.html":{},"components/WebcamComponent.html":{}}}],["options",{"_index":261,"title":{},"body":{"components/AdminpanelComponent.html":{},"components/GraphsComponent.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["out",{"_index":457,"title":{},"body":{"modules/AppModule.html":{},"index.html":{},"overview.html":{}}}],["overflow",{"_index":355,"title":{},"body":{"components/AdminpanelComponent.html":{}}}],["overview",{"_index":1053,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":976,"title":{"dependencies.html":{}},"body":{}}],["padding",{"_index":46,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminpanelComponent.html":{},"components/GraphsComponent.html":{}}}],["padding:1rem",{"_index":778,"title":{},"body":{"components/GraphsComponent.html":{}}}],["panelopenstate",{"_index":833,"title":{},"body":{"classes/NgbdDropdownBasic.html":{},"components/WebcamComponent.html":{}}}],["parameters",{"_index":149,"title":{},"body":{"components/AdminpanelComponent.html":{},"injectables/AdminpanelDataService.html":{},"components/GraphsComponent.html":{},"injectables/ImageService.html":{},"injectables/WeatherDataService.html":{},"components/WebcamComponent.html":{}}}],["password",{"_index":88,"title":{},"body":{"components/AdminComponent.html":{}}}],["passwort",{"_index":36,"title":{},"body":{"components/AdminComponent.html":{}}}],["path",{"_index":594,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["photovoltaik",{"_index":338,"title":{},"body":{"components/AdminpanelComponent.html":{}}}],["photovoltaik\",status",{"_index":213,"title":{},"body":{"components/AdminpanelComponent.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{},"miscellaneous/variables.html":{}}}],["pick",{"_index":755,"title":{},"body":{"components/GraphsComponent.html":{}}}],["pipe(takeuntil(this.destroy",{"_index":843,"title":{},"body":{"classes/NgbdDropdownBasic.html":{},"components/WebcamComponent.html":{}}}],["pointer",{"_index":949,"title":{},"body":{"components/WebcamComponent.html":{}}}],["portalmodule",{"_index":488,"title":{},"body":{"modules/AppModule.html":{}}}],["position",{"_index":283,"title":{},"body":{"components/AdminpanelComponent.html":{},"components/GraphsComponent.html":{},"components/WebcamComponent.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["power",{"_index":233,"title":{},"body":{"components/AdminpanelComponent.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["powerchart",{"_index":145,"title":{},"body":{"components/AdminpanelComponent.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["powerset",{"_index":324,"title":{},"body":{"components/AdminpanelComponent.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["powerset.push(newdata",{"_index":327,"title":{},"body":{"components/AdminpanelComponent.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["private",{"_index":374,"title":{},"body":{"injectables/AdminpanelDataService.html":{},"interfaces/BatteryData.html":{},"interfaces/ImageData.html":{},"injectables/ImageService.html":{},"interfaces/SolarData.html":{},"interfaces/TemperatureData.html":{},"injectables/WeatherDataService.html":{},"interfaces/WindData.html":{}}}],["prod",{"_index":1031,"title":{},"body":{"index.html":{}}}],["production",{"_index":1033,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["project",{"_index":1005,"title":{},"body":{"index.html":{}}}],["promise",{"_index":586,"title":{},"body":{"classes/AppPage.html":{}}}],["properties",{"_index":127,"title":{},"body":{"components/AdminpanelComponent.html":{},"injectables/AdminpanelDataService.html":{},"components/AppComponent.html":{},"interfaces/BatteryData.html":{},"components/GraphsComponent.html":{},"interfaces/ImageData.html":{},"injectables/ImageService.html":{},"interfaces/SolarData.html":{},"interfaces/TemperatureData.html":{},"injectables/WeatherDataService.html":{},"components/WebcamComponent.html":{},"interfaces/WindData.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["protractor",{"_index":584,"title":{},"body":{"classes/AppPage.html":{},"index.html":{}}}],["providedin",{"_index":401,"title":{},"body":{"injectables/AdminpanelDataService.html":{},"interfaces/BatteryData.html":{},"interfaces/ImageData.html":{},"injectables/ImageService.html":{},"interfaces/SolarData.html":{},"interfaces/TemperatureData.html":{},"injectables/WeatherDataService.html":{},"interfaces/WindData.html":{}}}],["providers",{"_index":445,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["public",{"_index":837,"title":{},"body":{"classes/NgbdDropdownBasic.html":{},"components/WebcamComponent.html":{}}}],["radio",{"_index":777,"title":{},"body":{"components/GraphsComponent.html":{}}}],["raspberry\",status",{"_index":211,"title":{},"body":{"components/AdminpanelComponent.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{},"miscellaneous/variables.html":{}}}],["raspyactions",{"_index":200,"title":{"interfaces/raspyActions.html":{}},"body":{"components/AdminpanelComponent.html":{},"coverage.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{},"miscellaneous/variables.html":{}}}],["readme",{"_index":1047,"title":{},"body":{"index.html":{}}}],["recentdata",{"_index":779,"title":{},"body":{"components/GraphsComponent.html":{}}}],["recentimages",{"_index":829,"title":{},"body":{"classes/NgbdDropdownBasic.html":{},"components/WebcamComponent.html":{}}}],["recentpics",{"_index":828,"title":{},"body":{"classes/NgbdDropdownBasic.html":{},"components/WebcamComponent.html":{}}}],["recenttemp",{"_index":605,"title":{},"body":{"components/GraphsComponent.html":{}}}],["recenttemp}}°c",{"_index":747,"title":{},"body":{"components/GraphsComponent.html":{}}}],["recentwinddir",{"_index":606,"title":{},"body":{"components/GraphsComponent.html":{}}}],["recentwindspeed",{"_index":607,"title":{},"body":{"components/GraphsComponent.html":{}}}],["red",{"_index":75,"title":{},"body":{"components/AdminComponent.html":{}}}],["relative",{"_index":941,"title":{},"body":{"components/WebcamComponent.html":{}}}],["reload",{"_index":1019,"title":{},"body":{"index.html":{}}}],["require",{"_index":974,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["require.context",{"_index":1063,"title":{},"body":{"miscellaneous/variables.html":{}}}],["reset",{"_index":456,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["responsiveanimationduration",{"_index":275,"title":{},"body":{"components/AdminpanelComponent.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["result",{"_index":120,"title":{},"body":{"components/AdminComponent.html":{},"injectables/AdminpanelDataService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"interfaces/BatteryData.html":{},"interfaces/ImageData.html":{},"injectables/ImageService.html":{},"classes/NgbdDropdownBasic.html":{},"interfaces/SolarData.html":{},"interfaces/TemperatureData.html":{},"injectables/WeatherDataService.html":{},"interfaces/WindData.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"interfaces/raspyActions.html":{},"routes.html":{},"interfaces/sensorActions.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":122,"title":{},"body":{"components/AdminComponent.html":{},"injectables/AdminpanelDataService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"interfaces/BatteryData.html":{},"interfaces/ImageData.html":{},"injectables/ImageService.html":{},"classes/NgbdDropdownBasic.html":{},"interfaces/SolarData.html":{},"interfaces/TemperatureData.html":{},"injectables/WeatherDataService.html":{},"interfaces/WindData.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"interfaces/raspyActions.html":{},"routes.html":{},"interfaces/sensorActions.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":420,"title":{},"body":{"injectables/AdminpanelDataService.html":{},"classes/AppPage.html":{},"interfaces/BatteryData.html":{},"components/GraphsComponent.html":{},"interfaces/ImageData.html":{},"injectables/ImageService.html":{},"classes/NgbdDropdownBasic.html":{},"interfaces/SolarData.html":{},"interfaces/TemperatureData.html":{},"injectables/WeatherDataService.html":{},"components/WebcamComponent.html":{},"interfaces/WindData.html":{}}}],["return(chargeset",{"_index":334,"title":{},"body":{"components/AdminpanelComponent.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["return(dataset",{"_index":319,"title":{},"body":{"components/AdminpanelComponent.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["return(powerset",{"_index":328,"title":{},"body":{"components/AdminpanelComponent.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["returns",{"_index":28,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminpanelComponent.html":{},"injectables/AdminpanelDataService.html":{},"classes/AppPage.html":{},"components/GraphsComponent.html":{},"injectables/ImageService.html":{},"injectables/WeatherDataService.html":{},"components/WebcamComponent.html":{}}}],["rgba(128",{"_index":710,"title":{},"body":{"components/GraphsComponent.html":{}}}],["rgba(255",{"_index":699,"title":{},"body":{"components/GraphsComponent.html":{}}}],["right",{"_index":91,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminpanelComponent.html":{},"components/GraphsComponent.html":{},"components/WebcamComponent.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["right:0.25em",{"_index":788,"title":{},"body":{"components/GraphsComponent.html":{}}}],["root",{"_index":402,"title":{},"body":{"injectables/AdminpanelDataService.html":{},"components/AppComponent.html":{},"classes/AppPage.html":{},"interfaces/BatteryData.html":{},"interfaces/ImageData.html":{},"injectables/ImageService.html":{},"interfaces/SolarData.html":{},"interfaces/TemperatureData.html":{},"injectables/WeatherDataService.html":{},"interfaces/WindData.html":{}}}],["root'},{'name",{"_index":113,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminpanelComponent.html":{},"components/AppComponent.html":{},"components/GraphsComponent.html":{},"components/WebcamComponent.html":{}}}],["rotate",{"_index":717,"title":{},"body":{"components/GraphsComponent.html":{}}}],["rotatedircardarrow",{"_index":621,"title":{},"body":{"components/GraphsComponent.html":{}}}],["rotatedircardarrow(angle",{"_index":643,"title":{},"body":{"components/GraphsComponent.html":{}}}],["routermodule",{"_index":592,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routermodule.forroot(routes",{"_index":595,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routes",{"_index":591,"title":{"routes.html":{}},"body":{"modules/AppRoutingModule.html":{},"overview.html":{},"routes.html":{}}}],["routing.module",{"_index":474,"title":{},"body":{"modules/AppModule.html":{}}}],["routing.module.ts",{"_index":590,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["run",{"_index":1012,"title":{},"body":{"index.html":{}}}],["running",{"_index":1034,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":192,"title":{},"body":{"components/AdminpanelComponent.html":{},"components/GraphsComponent.html":{},"classes/NgbdDropdownBasic.html":{},"components/WebcamComponent.html":{},"dependencies.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["rxjs/operators",{"_index":815,"title":{},"body":{"classes/NgbdDropdownBasic.html":{},"components/WebcamComponent.html":{}}}],["scaffolding",{"_index":1022,"title":{},"body":{"index.html":{}}}],["scalelabel",{"_index":278,"title":{},"body":{"components/AdminpanelComponent.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["scales",{"_index":276,"title":{},"body":{"components/AdminpanelComponent.html":{},"components/GraphsComponent.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["screen",{"_index":98,"title":{},"body":{"components/AdminComponent.html":{}}}],["screens",{"_index":96,"title":{},"body":{"components/AdminComponent.html":{}}}],["scrollingmodule",{"_index":490,"title":{},"body":{"modules/AppModule.html":{}}}],["se",{"_index":432,"title":{},"body":{"components/AppComponent.html":{}}}],["sedraft",{"_index":1004,"title":{},"body":{"index.html":{}}}],["selector",{"_index":14,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminpanelComponent.html":{},"components/AppComponent.html":{},"components/GraphsComponent.html":{},"classes/NgbdDropdownBasic.html":{},"components/WebcamComponent.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["selectorcard",{"_index":763,"title":{},"body":{"components/GraphsComponent.html":{}}}],["sensor",{"_index":204,"title":{},"body":{"components/AdminpanelComponent.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{},"miscellaneous/variables.html":{}}}],["sensor','status",{"_index":177,"title":{},"body":{"components/AdminpanelComponent.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["sensoractions",{"_index":203,"title":{"interfaces/sensorActions.html":{}},"body":{"components/AdminpanelComponent.html":{},"coverage.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{},"miscellaneous/variables.html":{}}}],["sensordata",{"_index":186,"title":{},"body":{"components/AdminpanelComponent.html":{},"coverage.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{},"miscellaneous/variables.html":{}}}],["sensortabledata",{"_index":136,"title":{},"body":{"components/AdminpanelComponent.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["serve",{"_index":1014,"title":{},"body":{"index.html":{}}}],["server",{"_index":1011,"title":{},"body":{"index.html":{}}}],["sheet",{"_index":504,"title":{},"body":{"modules/AppModule.html":{}}}],["sidenav",{"_index":950,"title":{},"body":{"components/WebcamComponent.html":{}}}],["sind",{"_index":929,"title":{},"body":{"components/WebcamComponent.html":{}}}],["size",{"_index":945,"title":{},"body":{"components/WebcamComponent.html":{}}}],["sizing",{"_index":62,"title":{},"body":{"components/AdminComponent.html":{}}}],["small",{"_index":95,"title":{},"body":{"components/AdminComponent.html":{}}}],["solarcell/?start='+this.formatdate(today",{"_index":415,"title":{},"body":{"injectables/AdminpanelDataService.html":{},"interfaces/BatteryData.html":{},"interfaces/SolarData.html":{}}}],["solardata",{"_index":137,"title":{"interfaces/SolarData.html":{}},"body":{"components/AdminpanelComponent.html":{},"injectables/AdminpanelDataService.html":{},"interfaces/BatteryData.html":{},"interfaces/SolarData.html":{},"coverage.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["solarzelle",{"_index":310,"title":{},"body":{"components/AdminpanelComponent.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["solcur",{"_index":307,"title":{},"body":{"components/AdminpanelComponent.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["solid",{"_index":59,"title":{},"body":{"components/AdminComponent.html":{},"components/GraphsComponent.html":{}}}],["solvol",{"_index":314,"title":{},"body":{"components/AdminpanelComponent.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminpanelComponent.html":{},"injectables/AdminpanelDataService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"interfaces/BatteryData.html":{},"components/GraphsComponent.html":{},"interfaces/ImageData.html":{},"injectables/ImageService.html":{},"classes/NgbdDropdownBasic.html":{},"interfaces/SolarData.html":{},"interfaces/TemperatureData.html":{},"injectables/WeatherDataService.html":{},"components/WebcamComponent.html":{},"interfaces/WindData.html":{},"index.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["space",{"_index":359,"title":{},"body":{"components/AdminpanelComponent.html":{}}}],["span",{"_index":94,"title":{},"body":{"components/AdminComponent.html":{}}}],["span')).gettext",{"_index":588,"title":{},"body":{"classes/AppPage.html":{}}}],["span.psw",{"_index":89,"title":{},"body":{"components/AdminComponent.html":{}}}],["spannung",{"_index":210,"title":{},"body":{"components/AdminpanelComponent.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{},"miscellaneous/variables.html":{}}}],["spannung/strom",{"_index":336,"title":{},"body":{"components/AdminpanelComponent.html":{}}}],["spec\\.ts",{"_index":1064,"title":{},"body":{"miscellaneous/variables.html":{}}}],["speed",{"_index":705,"title":{},"body":{"components/GraphsComponent.html":{},"interfaces/TemperatureData.html":{},"injectables/WeatherDataService.html":{},"interfaces/WindData.html":{}}}],["spinner",{"_index":539,"title":{},"body":{"modules/AppModule.html":{}}}],["src",{"_index":743,"title":{},"body":{"components/GraphsComponent.html":{}}}],["src/.../adminpanel.component.ts",{"_index":1060,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.prod.ts",{"_index":1061,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.ts",{"_index":1062,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../test.ts",{"_index":1059,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/admin/admin.component.ts",{"_index":10,"title":{},"body":{"components/AdminComponent.html":{},"coverage.html":{}}}],["src/app/admin/admin.component.ts:11",{"_index":26,"title":{},"body":{"components/AdminComponent.html":{}}}],["src/app/admin/admin.component.ts:15",{"_index":27,"title":{},"body":{"components/AdminComponent.html":{}}}],["src/app/adminpanel",{"_index":372,"title":{},"body":{"injectables/AdminpanelDataService.html":{},"interfaces/BatteryData.html":{},"interfaces/SolarData.html":{},"coverage.html":{}}}],["src/app/adminpanel/adminpanel.component.ts",{"_index":123,"title":{},"body":{"components/AdminpanelComponent.html":{},"coverage.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{},"miscellaneous/variables.html":{}}}],["src/app/adminpanel/adminpanel.component.ts:144",{"_index":164,"title":{},"body":{"components/AdminpanelComponent.html":{}}}],["src/app/adminpanel/adminpanel.component.ts:197",{"_index":167,"title":{},"body":{"components/AdminpanelComponent.html":{}}}],["src/app/adminpanel/adminpanel.component.ts:201",{"_index":158,"title":{},"body":{"components/AdminpanelComponent.html":{}}}],["src/app/adminpanel/adminpanel.component.ts:205",{"_index":156,"title":{},"body":{"components/AdminpanelComponent.html":{}}}],["src/app/adminpanel/adminpanel.component.ts:242",{"_index":165,"title":{},"body":{"components/AdminpanelComponent.html":{}}}],["src/app/adminpanel/adminpanel.component.ts:254",{"_index":163,"title":{},"body":{"components/AdminpanelComponent.html":{}}}],["src/app/adminpanel/adminpanel.component.ts:40",{"_index":169,"title":{},"body":{"components/AdminpanelComponent.html":{}}}],["src/app/adminpanel/adminpanel.component.ts:41",{"_index":188,"title":{},"body":{"components/AdminpanelComponent.html":{}}}],["src/app/adminpanel/adminpanel.component.ts:42",{"_index":173,"title":{},"body":{"components/AdminpanelComponent.html":{}}}],["src/app/adminpanel/adminpanel.component.ts:43",{"_index":180,"title":{},"body":{"components/AdminpanelComponent.html":{}}}],["src/app/adminpanel/adminpanel.component.ts:46",{"_index":183,"title":{},"body":{"components/AdminpanelComponent.html":{}}}],["src/app/adminpanel/adminpanel.component.ts:48",{"_index":148,"title":{},"body":{"components/AdminpanelComponent.html":{}}}],["src/app/adminpanel/adminpanel.component.ts:55",{"_index":166,"title":{},"body":{"components/AdminpanelComponent.html":{}}}],["src/app/adminpanel/adminpanel.component.ts:59",{"_index":161,"title":{},"body":{"components/AdminpanelComponent.html":{}}}],["src/app/adminpanel/adminpanel.component.ts:74",{"_index":168,"title":{},"body":{"components/AdminpanelComponent.html":{}}}],["src/app/adminpanel/adminpanel.component.ts:88",{"_index":176,"title":{},"body":{"components/AdminpanelComponent.html":{}}}],["src/app/adminpanel/adminpanel.component.ts:89",{"_index":185,"title":{},"body":{"components/AdminpanelComponent.html":{}}}],["src/app/adminpanel/adminpanel.component.ts:91",{"_index":178,"title":{},"body":{"components/AdminpanelComponent.html":{}}}],["src/app/adminpanel/adminpanel.component.ts:92",{"_index":187,"title":{},"body":{"components/AdminpanelComponent.html":{}}}],["src/app/adminpanel/adminpanel.component.ts:94",{"_index":152,"title":{},"body":{"components/AdminpanelComponent.html":{}}}],["src/app/app",{"_index":589,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/app.component.ts",{"_index":429,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:11",{"_index":434,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.ts",{"_index":458,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/graphs/graphs.component.ts",{"_index":597,"title":{},"body":{"components/GraphsComponent.html":{},"coverage.html":{}}}],["src/app/graphs/graphs.component.ts:147",{"_index":642,"title":{},"body":{"components/GraphsComponent.html":{}}}],["src/app/graphs/graphs.component.ts:158",{"_index":644,"title":{},"body":{"components/GraphsComponent.html":{}}}],["src/app/graphs/graphs.component.ts:163",{"_index":647,"title":{},"body":{"components/GraphsComponent.html":{}}}],["src/app/graphs/graphs.component.ts:171",{"_index":630,"title":{},"body":{"components/GraphsComponent.html":{}}}],["src/app/graphs/graphs.component.ts:177",{"_index":628,"title":{},"body":{"components/GraphsComponent.html":{}}}],["src/app/graphs/graphs.component.ts:18",{"_index":664,"title":{},"body":{"components/GraphsComponent.html":{}}}],["src/app/graphs/graphs.component.ts:183",{"_index":631,"title":{},"body":{"components/GraphsComponent.html":{}}}],["src/app/graphs/graphs.component.ts:19",{"_index":658,"title":{},"body":{"components/GraphsComponent.html":{}}}],["src/app/graphs/graphs.component.ts:20",{"_index":666,"title":{},"body":{"components/GraphsComponent.html":{}}}],["src/app/graphs/graphs.component.ts:21",{"_index":652,"title":{},"body":{"components/GraphsComponent.html":{}}}],["src/app/graphs/graphs.component.ts:25",{"_index":665,"title":{},"body":{"components/GraphsComponent.html":{}}}],["src/app/graphs/graphs.component.ts:28",{"_index":651,"title":{},"body":{"components/GraphsComponent.html":{}}}],["src/app/graphs/graphs.component.ts:29",{"_index":663,"title":{},"body":{"components/GraphsComponent.html":{}}}],["src/app/graphs/graphs.component.ts:31",{"_index":654,"title":{},"body":{"components/GraphsComponent.html":{}}}],["src/app/graphs/graphs.component.ts:32",{"_index":656,"title":{},"body":{"components/GraphsComponent.html":{}}}],["src/app/graphs/graphs.component.ts:33",{"_index":655,"title":{},"body":{"components/GraphsComponent.html":{}}}],["src/app/graphs/graphs.component.ts:35",{"_index":653,"title":{},"body":{"components/GraphsComponent.html":{}}}],["src/app/graphs/graphs.component.ts:36",{"_index":657,"title":{},"body":{"components/GraphsComponent.html":{}}}],["src/app/graphs/graphs.component.ts:37",{"_index":625,"title":{},"body":{"components/GraphsComponent.html":{}}}],["src/app/graphs/graphs.component.ts:46",{"_index":634,"title":{},"body":{"components/GraphsComponent.html":{}}}],["src/app/graphs/graphs.component.ts:51",{"_index":649,"title":{},"body":{"components/GraphsComponent.html":{}}}],["src/app/graphs/graphs.component.ts:70",{"_index":640,"title":{},"body":{"components/GraphsComponent.html":{}}}],["src/app/graphs/graphs.component.ts:75",{"_index":637,"title":{},"body":{"components/GraphsComponent.html":{}}}],["src/app/graphs/graphs.component.ts:80",{"_index":633,"title":{},"body":{"components/GraphsComponent.html":{}}}],["src/app/graphs/graphs.component.ts:85",{"_index":632,"title":{},"body":{"components/GraphsComponent.html":{}}}],["src/app/image",{"_index":792,"title":{},"body":{"interfaces/ImageData.html":{},"injectables/ImageService.html":{},"coverage.html":{}}}],["src/app/weather",{"_index":884,"title":{},"body":{"interfaces/TemperatureData.html":{},"injectables/WeatherDataService.html":{},"interfaces/WindData.html":{},"coverage.html":{}}}],["src/app/webcam/webcam.component.ts",{"_index":809,"title":{},"body":{"classes/NgbdDropdownBasic.html":{},"components/WebcamComponent.html":{},"coverage.html":{}}}],["src/app/webcam/webcam.component.ts:100",{"_index":915,"title":{},"body":{"components/WebcamComponent.html":{}}}],["src/app/webcam/webcam.component.ts:109",{"_index":912,"title":{},"body":{"components/WebcamComponent.html":{}}}],["src/app/webcam/webcam.component.ts:114",{"_index":908,"title":{},"body":{"components/WebcamComponent.html":{}}}],["src/app/webcam/webcam.component.ts:119",{"_index":907,"title":{},"body":{"components/WebcamComponent.html":{}}}],["src/app/webcam/webcam.component.ts:22",{"_index":922,"title":{},"body":{"components/WebcamComponent.html":{}}}],["src/app/webcam/webcam.component.ts:23",{"_index":921,"title":{},"body":{"components/WebcamComponent.html":{}}}],["src/app/webcam/webcam.component.ts:25",{"_index":920,"title":{},"body":{"components/WebcamComponent.html":{}}}],["src/app/webcam/webcam.component.ts:26",{"_index":919,"title":{},"body":{"components/WebcamComponent.html":{}}}],["src/app/webcam/webcam.component.ts:28",{"_index":925,"title":{},"body":{"components/WebcamComponent.html":{}}}],["src/app/webcam/webcam.component.ts:29",{"_index":923,"title":{},"body":{"components/WebcamComponent.html":{}}}],["src/app/webcam/webcam.component.ts:34",{"_index":918,"title":{},"body":{"components/WebcamComponent.html":{}}}],["src/app/webcam/webcam.component.ts:36",{"_index":916,"title":{},"body":{"components/WebcamComponent.html":{}}}],["src/app/webcam/webcam.component.ts:39",{"_index":906,"title":{},"body":{"components/WebcamComponent.html":{}}}],["src/app/webcam/webcam.component.ts:42",{"_index":917,"title":{},"body":{"components/WebcamComponent.html":{}}}],["src/app/webcam/webcam.component.ts:43",{"_index":924,"title":{},"body":{"components/WebcamComponent.html":{}}}],["src/app/webcam/webcam.component.ts:47",{"_index":913,"title":{},"body":{"components/WebcamComponent.html":{}}}],["src/app/webcam/webcam.component.ts:67",{"_index":909,"title":{},"body":{"components/WebcamComponent.html":{}}}],["src/app/webcam/webcam.component.ts:73",{"_index":910,"title":{},"body":{"components/WebcamComponent.html":{}}}],["src/app/webcam/webcam.component.ts:87",{"_index":911,"title":{},"body":{"components/WebcamComponent.html":{}}}],["src/environments/environment.prod.ts",{"_index":969,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.ts",{"_index":971,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/test.ts",{"_index":972,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src=\"https://cdn.jsdelivr.net/npm/chart.js@2.9.3/dist/chart.min.js",{"_index":335,"title":{},"body":{"components/AdminpanelComponent.html":{}}}],["start",{"_index":393,"title":{},"body":{"injectables/AdminpanelDataService.html":{},"injectables/WeatherDataService.html":{}}}],["startdate",{"_index":732,"title":{},"body":{"components/GraphsComponent.html":{}}}],["startdateevents",{"_index":608,"title":{},"body":{"components/GraphsComponent.html":{}}}],["startdatum",{"_index":752,"title":{},"body":{"components/GraphsComponent.html":{}}}],["started",{"_index":1003,"title":{"index.html":{}},"body":{}}],["startstring",{"_index":730,"title":{},"body":{"components/GraphsComponent.html":{}}}],["statements",{"_index":957,"title":{},"body":{"coverage.html":{}}}],["status",{"_index":205,"title":{},"body":{"components/AdminpanelComponent.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["stored",{"_index":1028,"title":{},"body":{"index.html":{}}}],["string",{"_index":174,"title":{},"body":{"components/AdminpanelComponent.html":{},"injectables/AdminpanelDataService.html":{},"components/AppComponent.html":{},"components/GraphsComponent.html":{},"interfaces/ImageData.html":{},"injectables/ImageService.html":{},"injectables/WeatherDataService.html":{},"components/WebcamComponent.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["strom",{"_index":212,"title":{},"body":{"components/AdminpanelComponent.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{},"miscellaneous/variables.html":{}}}],["stromstärke",{"_index":286,"title":{},"body":{"components/AdminpanelComponent.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["stunden",{"_index":760,"title":{},"body":{"components/GraphsComponent.html":{}}}],["style",{"_index":72,"title":{},"body":{"components/AdminComponent.html":{}}}],["styles",{"_index":6,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminpanelComponent.html":{},"components/AppComponent.html":{},"components/GraphsComponent.html":{},"components/WebcamComponent.html":{}}}],["styleurls",{"_index":17,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminpanelComponent.html":{},"components/AppComponent.html":{},"components/GraphsComponent.html":{},"classes/NgbdDropdownBasic.html":{},"components/WebcamComponent.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["subject",{"_index":812,"title":{},"body":{"classes/NgbdDropdownBasic.html":{},"components/WebcamComponent.html":{}}}],["subscribe((data",{"_index":844,"title":{},"body":{"classes/NgbdDropdownBasic.html":{},"components/WebcamComponent.html":{}}}],["subscription",{"_index":170,"title":{},"body":{"components/AdminpanelComponent.html":{},"components/GraphsComponent.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["support",{"_index":1048,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":1049,"title":{},"body":{"modules.html":{}}}],["tab",{"_index":951,"title":{},"body":{"components/WebcamComponent.html":{}}}],["table",{"_index":350,"title":{},"body":{"components/AdminpanelComponent.html":{},"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":975,"title":{},"body":{"coverage.html":{}}}],["takeuntil",{"_index":813,"title":{},"body":{"classes/NgbdDropdownBasic.html":{},"components/WebcamComponent.html":{}}}],["td",{"_index":354,"title":{},"body":{"components/AdminpanelComponent.html":{}}}],["temperatur",{"_index":746,"title":{},"body":{"components/GraphsComponent.html":{}}}],["temperatur\",status",{"_index":207,"title":{},"body":{"components/AdminpanelComponent.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{},"miscellaneous/variables.html":{}}}],["temperaturedata",{"_index":609,"title":{"interfaces/TemperatureData.html":{}},"body":{"components/GraphsComponent.html":{},"interfaces/TemperatureData.html":{},"injectables/WeatherDataService.html":{},"interfaces/WindData.html":{},"coverage.html":{}}}],["temperatures",{"_index":695,"title":{},"body":{"components/GraphsComponent.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminpanelComponent.html":{},"components/AppComponent.html":{},"components/GraphsComponent.html":{},"components/WebcamComponent.html":{}}}],["templateurl",{"_index":19,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminpanelComponent.html":{},"components/AppComponent.html":{},"components/GraphsComponent.html":{},"classes/NgbdDropdownBasic.html":{},"components/WebcamComponent.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["temps",{"_index":692,"title":{},"body":{"components/GraphsComponent.html":{}}}],["temps/?start='+this.formatdate(today",{"_index":885,"title":{},"body":{"interfaces/TemperatureData.html":{},"injectables/WeatherDataService.html":{},"interfaces/WindData.html":{}}}],["test",{"_index":1037,"title":{},"body":{"index.html":{}}}],["tests",{"_index":1036,"title":{},"body":{"index.html":{}}}],["text",{"_index":52,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminpanelComponent.html":{},"components/GraphsComponent.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["th",{"_index":353,"title":{},"body":{"components/AdminpanelComponent.html":{}}}],["this.adminpaneldataservice",{"_index":227,"title":{},"body":{"components/AdminpanelComponent.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["this.adminpaneldataservice.getbatterydata(input).subscribe((databattery",{"_index":244,"title":{},"body":{"components/AdminpanelComponent.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["this.adminpaneldataservice.getsolardata(input).subscribe((datasolar",{"_index":241,"title":{},"body":{"components/AdminpanelComponent.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["this.adminpaneldatasubscription",{"_index":240,"title":{},"body":{"components/AdminpanelComponent.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["this.apiurl",{"_index":414,"title":{},"body":{"injectables/AdminpanelDataService.html":{},"interfaces/BatteryData.html":{},"interfaces/ImageData.html":{},"injectables/ImageService.html":{},"interfaces/SolarData.html":{},"interfaces/TemperatureData.html":{},"injectables/WeatherDataService.html":{},"interfaces/WindData.html":{}}}],["this.batterydata",{"_index":245,"title":{},"body":{"components/AdminpanelComponent.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["this.batterydata.map(databattery",{"_index":297,"title":{},"body":{"components/AdminpanelComponent.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["this.batterydata.map(datebattery",{"_index":258,"title":{},"body":{"components/AdminpanelComponent.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["this.buildchart",{"_index":247,"title":{},"body":{"components/AdminpanelComponent.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["this.buildgraphs",{"_index":686,"title":{},"body":{"components/GraphsComponent.html":{}}}],["this.buildpowerchargechart(this.getchargedataset(),\"ladestrom\",\"strom",{"_index":322,"title":{},"body":{"components/AdminpanelComponent.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["this.buildpowerchargechart(this.getpowerdataset(),\"leistungsuafnahme\",\"leistung",{"_index":320,"title":{},"body":{"components/AdminpanelComponent.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["this.chargechart",{"_index":238,"title":{},"body":{"components/AdminpanelComponent.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["this.destroy$.next(true",{"_index":876,"title":{},"body":{"classes/NgbdDropdownBasic.html":{},"components/WebcamComponent.html":{}}}],["this.destroy$.unsubscribe",{"_index":877,"title":{},"body":{"classes/NgbdDropdownBasic.html":{},"components/WebcamComponent.html":{}}}],["this.enddateevents.push(`${event.value",{"_index":728,"title":{},"body":{"components/GraphsComponent.html":{}}}],["this.enddateevents[this.enddateevents.length",{"_index":736,"title":{},"body":{"components/GraphsComponent.html":{}}}],["this.extendedmodestatus",{"_index":228,"title":{},"body":{"components/AdminpanelComponent.html":{},"components/GraphsComponent.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["this.extendedmodestatus.next(event.checked",{"_index":688,"title":{},"body":{"components/GraphsComponent.html":{}}}],["this.gallery.ref('lightbox",{"_index":847,"title":{},"body":{"classes/NgbdDropdownBasic.html":{},"components/WebcamComponent.html":{}}}],["this.getdataset",{"_index":250,"title":{},"body":{"components/AdminpanelComponent.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["this.http",{"_index":403,"title":{},"body":{"injectables/AdminpanelDataService.html":{},"interfaces/BatteryData.html":{},"interfaces/ImageData.html":{},"injectables/ImageService.html":{},"interfaces/SolarData.html":{},"interfaces/TemperatureData.html":{},"injectables/WeatherDataService.html":{},"interfaces/WindData.html":{}}}],["this.http.get(this.apiurl",{"_index":421,"title":{},"body":{"injectables/AdminpanelDataService.html":{},"interfaces/BatteryData.html":{},"interfaces/ImageData.html":{},"injectables/ImageService.html":{},"interfaces/SolarData.html":{},"interfaces/TemperatureData.html":{},"injectables/WeatherDataService.html":{},"interfaces/WindData.html":{}}}],["this.http.get(this.apiurl+'battery/?start='+this.formatdate(start)+'&end='+this.formatdate(end",{"_index":426,"title":{},"body":{"injectables/AdminpanelDataService.html":{},"interfaces/BatteryData.html":{},"interfaces/SolarData.html":{}}}],["this.http.get(this.apiurl+'solarcell/?start='+this.formatdate(start)+'&end='+this.formatdate(end",{"_index":424,"title":{},"body":{"injectables/AdminpanelDataService.html":{},"interfaces/BatteryData.html":{},"interfaces/SolarData.html":{}}}],["this.http.get(this.apiurl+'temps/?start='+this.formatdate(start)+'&end='+this.formatdate(end",{"_index":891,"title":{},"body":{"interfaces/TemperatureData.html":{},"injectables/WeatherDataService.html":{},"interfaces/WindData.html":{}}}],["this.http.get(this.apiurl+'wind/?start='+this.formatdate(start)+'&end='+this.formatdate(end",{"_index":889,"title":{},"body":{"interfaces/TemperatureData.html":{},"injectables/WeatherDataService.html":{},"interfaces/WindData.html":{}}}],["this.imageservice",{"_index":841,"title":{},"body":{"classes/NgbdDropdownBasic.html":{},"components/WebcamComponent.html":{}}}],["this.imageservice.getrecentimages",{"_index":842,"title":{},"body":{"classes/NgbdDropdownBasic.html":{},"components/WebcamComponent.html":{}}}],["this.imageservice.gettodayimages",{"_index":861,"title":{},"body":{"classes/NgbdDropdownBasic.html":{},"components/WebcamComponent.html":{}}}],["this.imageservice.getyesterdayimages",{"_index":867,"title":{},"body":{"classes/NgbdDropdownBasic.html":{},"components/WebcamComponent.html":{}}}],["this.istoggled",{"_index":234,"title":{},"body":{"components/AdminpanelComponent.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["this.loadrecentpics",{"_index":846,"title":{},"body":{"classes/NgbdDropdownBasic.html":{},"components/WebcamComponent.html":{}}}],["this.powerchart",{"_index":236,"title":{},"body":{"components/AdminpanelComponent.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["this.recentimages",{"_index":845,"title":{},"body":{"classes/NgbdDropdownBasic.html":{},"components/WebcamComponent.html":{}}}],["this.recentimages.map((data",{"_index":881,"title":{},"body":{"classes/NgbdDropdownBasic.html":{},"components/WebcamComponent.html":{}}}],["this.recentpics=this.recentimages.map(data",{"_index":858,"title":{},"body":{"classes/NgbdDropdownBasic.html":{},"components/WebcamComponent.html":{}}}],["this.recenttemp",{"_index":674,"title":{},"body":{"components/GraphsComponent.html":{}}}],["this.recentwinddir",{"_index":683,"title":{},"body":{"components/GraphsComponent.html":{}}}],["this.recentwindspeed",{"_index":680,"title":{},"body":{"components/GraphsComponent.html":{}}}],["this.solardata",{"_index":242,"title":{},"body":{"components/AdminpanelComponent.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["this.solardata.map(datasolar",{"_index":312,"title":{},"body":{"components/AdminpanelComponent.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["this.startdateevents.push(`${event.value",{"_index":726,"title":{},"body":{"components/GraphsComponent.html":{}}}],["this.startdateevents[this.startdateevents.length",{"_index":731,"title":{},"body":{"components/GraphsComponent.html":{}}}],["this.temperaturedata",{"_index":673,"title":{},"body":{"components/GraphsComponent.html":{}}}],["this.temperaturedata.map(data",{"_index":675,"title":{},"body":{"components/GraphsComponent.html":{}}}],["this.today.ref('today",{"_index":864,"title":{},"body":{"classes/NgbdDropdownBasic.html":{},"components/WebcamComponent.html":{}}}],["this.today.ref('yesterday",{"_index":870,"title":{},"body":{"classes/NgbdDropdownBasic.html":{},"components/WebcamComponent.html":{}}}],["this.todayimages=data",{"_index":862,"title":{},"body":{"classes/NgbdDropdownBasic.html":{},"components/WebcamComponent.html":{}}}],["this.todaylightbox.open(index",{"_index":874,"title":{},"body":{"classes/NgbdDropdownBasic.html":{},"components/WebcamComponent.html":{}}}],["this.todaypics=this.todayimages.map(data",{"_index":863,"title":{},"body":{"classes/NgbdDropdownBasic.html":{},"components/WebcamComponent.html":{}}}],["this.updatechart",{"_index":231,"title":{},"body":{"components/AdminpanelComponent.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["this.updategraphs(1",{"_index":670,"title":{},"body":{"components/GraphsComponent.html":{}}}],["this.updategraphs(event.value",{"_index":689,"title":{},"body":{"components/GraphsComponent.html":{}}}],["this.weatherdataservice",{"_index":669,"title":{},"body":{"components/GraphsComponent.html":{}}}],["this.weatherdataservice.gettemperatures(input).subscribe((data",{"_index":672,"title":{},"body":{"components/GraphsComponent.html":{}}}],["this.weatherdataservice.gettemperaturesdataframe(startdate",{"_index":739,"title":{},"body":{"components/GraphsComponent.html":{}}}],["this.weatherdataservice.getwinddata(input).subscribe((datawind",{"_index":677,"title":{},"body":{"components/GraphsComponent.html":{}}}],["this.weatherdataservice.getwinddataframe(startdate",{"_index":741,"title":{},"body":{"components/GraphsComponent.html":{}}}],["this.weatherdatasubscription",{"_index":671,"title":{},"body":{"components/GraphsComponent.html":{}}}],["this.weatherdatasubscription.unsubscribe",{"_index":690,"title":{},"body":{"components/GraphsComponent.html":{}}}],["this.winddata",{"_index":678,"title":{},"body":{"components/GraphsComponent.html":{}}}],["this.winddata.map(data",{"_index":712,"title":{},"body":{"components/GraphsComponent.html":{}}}],["this.winddata.map(datawind",{"_index":681,"title":{},"body":{"components/GraphsComponent.html":{}}}],["this.yesterdayimages=data",{"_index":868,"title":{},"body":{"classes/NgbdDropdownBasic.html":{},"components/WebcamComponent.html":{}}}],["this.yesterdaypics=this.yesterdayimages.map(data",{"_index":869,"title":{},"body":{"classes/NgbdDropdownBasic.html":{},"components/WebcamComponent.html":{}}}],["throttletime",{"_index":814,"title":{},"body":{"classes/NgbdDropdownBasic.html":{},"components/WebcamComponent.html":{}}}],["thumbposition",{"_index":852,"title":{},"body":{"classes/NgbdDropdownBasic.html":{},"components/WebcamComponent.html":{}}}],["ticks",{"_index":284,"title":{},"body":{"components/AdminpanelComponent.html":{},"components/GraphsComponent.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["time",{"_index":269,"title":{},"body":{"components/AdminpanelComponent.html":{},"injectables/AdminpanelDataService.html":{},"interfaces/BatteryData.html":{},"interfaces/SolarData.html":{},"interfaces/TemperatureData.html":{},"injectables/WeatherDataService.html":{},"interfaces/WindData.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["timeframe",{"_index":725,"title":{},"body":{"components/GraphsComponent.html":{}}}],["timepickers",{"_index":610,"title":{},"body":{"components/GraphsComponent.html":{}}}],["title",{"_index":262,"title":{},"body":{"components/AdminpanelComponent.html":{},"components/AppComponent.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["today",{"_index":416,"title":{},"body":{"injectables/AdminpanelDataService.html":{},"interfaces/BatteryData.html":{},"injectables/ImageService.html":{},"classes/NgbdDropdownBasic.html":{},"interfaces/SolarData.html":{},"interfaces/TemperatureData.html":{},"injectables/WeatherDataService.html":{},"components/WebcamComponent.html":{},"interfaces/WindData.html":{}}}],["today.getdate",{"_index":418,"title":{},"body":{"injectables/AdminpanelDataService.html":{},"interfaces/BatteryData.html":{},"interfaces/SolarData.html":{},"interfaces/TemperatureData.html":{},"injectables/WeatherDataService.html":{},"interfaces/WindData.html":{}}}],["today.setdate(yesterday",{"_index":419,"title":{},"body":{"injectables/AdminpanelDataService.html":{},"interfaces/BatteryData.html":{},"interfaces/ImageData.html":{},"injectables/ImageService.html":{},"interfaces/SolarData.html":{},"interfaces/TemperatureData.html":{},"injectables/WeatherDataService.html":{},"interfaces/WindData.html":{}}}],["today=new",{"_index":795,"title":{},"body":{"interfaces/ImageData.html":{},"injectables/ImageService.html":{}}}],["todayimages",{"_index":827,"title":{},"body":{"classes/NgbdDropdownBasic.html":{},"components/WebcamComponent.html":{}}}],["todaylightbox",{"_index":839,"title":{},"body":{"classes/NgbdDropdownBasic.html":{},"components/WebcamComponent.html":{}}}],["todaypics",{"_index":903,"title":{},"body":{"components/WebcamComponent.html":{}}}],["todaypics:galleryitem",{"_index":826,"title":{},"body":{"classes/NgbdDropdownBasic.html":{},"components/WebcamComponent.html":{}}}],["toggle",{"_index":191,"title":{},"body":{"components/AdminpanelComponent.html":{},"modules/AppModule.html":{},"components/GraphsComponent.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["toggleslider",{"_index":774,"title":{},"body":{"components/GraphsComponent.html":{}}}],["top",{"_index":92,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminpanelComponent.html":{},"components/GraphsComponent.html":{},"components/WebcamComponent.html":{}}}],["top'}).load(this.recentpics",{"_index":853,"title":{},"body":{"classes/NgbdDropdownBasic.html":{},"components/WebcamComponent.html":{}}}],["top'}).load(this.todaypics",{"_index":865,"title":{},"body":{"classes/NgbdDropdownBasic.html":{},"components/WebcamComponent.html":{}}}],["top'}).load(this.yesterdaypics",{"_index":871,"title":{},"body":{"classes/NgbdDropdownBasic.html":{},"components/WebcamComponent.html":{}}}],["transform",{"_index":953,"title":{},"body":{"components/WebcamComponent.html":{}}}],["transformdirectiondates",{"_index":622,"title":{},"body":{"components/GraphsComponent.html":{}}}],["transformdirectiondates(i",{"_index":646,"title":{},"body":{"components/GraphsComponent.html":{}}}],["transformdirectiondates(indexofelement",{"_index":761,"title":{},"body":{"components/GraphsComponent.html":{}}}],["tree",{"_index":8,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminpanelComponent.html":{},"components/AppComponent.html":{},"components/GraphsComponent.html":{},"components/WebcamComponent.html":{}}}],["true",{"_index":235,"title":{},"body":{"components/AdminpanelComponent.html":{},"components/GraphsComponent.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{},"miscellaneous/variables.html":{}}}],["tslib",{"_index":998,"title":{},"body":{"dependencies.html":{}}}],["type",{"_index":150,"title":{},"body":{"components/AdminpanelComponent.html":{},"injectables/AdminpanelDataService.html":{},"components/AppComponent.html":{},"interfaces/BatteryData.html":{},"components/GraphsComponent.html":{},"interfaces/ImageData.html":{},"injectables/ImageService.html":{},"interfaces/SolarData.html":{},"interfaces/TemperatureData.html":{},"injectables/WeatherDataService.html":{},"components/WebcamComponent.html":{},"interfaces/WindData.html":{},"coverage.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{},"miscellaneous/variables.html":{}}}],["uhr",{"_index":762,"title":{},"body":{"components/GraphsComponent.html":{}}}],["unit",{"_index":1035,"title":{},"body":{"index.html":{}}}],["updatechart",{"_index":146,"title":{},"body":{"components/AdminpanelComponent.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["updategraphs",{"_index":623,"title":{},"body":{"components/GraphsComponent.html":{}}}],["updategraphs(input",{"_index":648,"title":{},"body":{"components/GraphsComponent.html":{}}}],["use",{"_index":1024,"title":{},"body":{"index.html":{}}}],["value",{"_index":172,"title":{},"body":{"components/AdminpanelComponent.html":{},"injectables/AdminpanelDataService.html":{},"components/AppComponent.html":{},"components/GraphsComponent.html":{},"injectables/ImageService.html":{},"injectables/WeatherDataService.html":{},"components/WebcamComponent.html":{},"miscellaneous/variables.html":{}}}],["var",{"_index":106,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminpanelComponent.html":{},"injectables/AdminpanelDataService.html":{},"components/AppComponent.html":{},"interfaces/BatteryData.html":{},"components/GraphsComponent.html":{},"interfaces/ImageData.html":{},"injectables/ImageService.html":{},"interfaces/SolarData.html":{},"interfaces/TemperatureData.html":{},"injectables/WeatherDataService.html":{},"components/WebcamComponent.html":{},"interfaces/WindData.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["variable",{"_index":964,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1058,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":1008,"title":{},"body":{"index.html":{}}}],["vertical",{"_index":772,"title":{},"body":{"components/GraphsComponent.html":{}}}],["via",{"_index":1039,"title":{},"body":{"index.html":{}}}],["void",{"_index":30,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminpanelComponent.html":{},"components/GraphsComponent.html":{},"components/WebcamComponent.html":{}}}],["volt",{"_index":280,"title":{},"body":{"components/AdminpanelComponent.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["voltage",{"_index":282,"title":{},"body":{"components/AdminpanelComponent.html":{},"injectables/AdminpanelDataService.html":{},"interfaces/BatteryData.html":{},"interfaces/SolarData.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["volts",{"_index":253,"title":{},"body":{"components/AdminpanelComponent.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["von",{"_index":933,"title":{},"body":{"components/WebcamComponent.html":{}}}],["wartungsbereich",{"_index":438,"title":{},"body":{"components/AppComponent.html":{}}}],["watt",{"_index":321,"title":{},"body":{"components/AdminpanelComponent.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["weather",{"_index":564,"title":{},"body":{"modules/AppModule.html":{},"components/GraphsComponent.html":{}}}],["weatherdataservice",{"_index":454,"title":{"injectables/WeatherDataService.html":{}},"body":{"modules/AppModule.html":{},"components/GraphsComponent.html":{},"interfaces/TemperatureData.html":{},"injectables/WeatherDataService.html":{},"interfaces/WindData.html":{},"coverage.html":{},"overview.html":{}}}],["weatherdataservice,imageservice",{"_index":576,"title":{},"body":{"modules/AppModule.html":{}}}],["weatherdatasubscription",{"_index":611,"title":{},"body":{"components/GraphsComponent.html":{}}}],["webcam",{"_index":117,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminpanelComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/GraphsComponent.html":{},"classes/NgbdDropdownBasic.html":{},"components/WebcamComponent.html":{}}}],["webcam.component.html",{"_index":822,"title":{},"body":{"classes/NgbdDropdownBasic.html":{},"components/WebcamComponent.html":{}}}],["webcam.component.scss",{"_index":823,"title":{},"body":{"classes/NgbdDropdownBasic.html":{},"components/WebcamComponent.html":{}}}],["webcam/webcam.component",{"_index":477,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["webcamcomponent",{"_index":116,"title":{"components/WebcamComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AdminpanelComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/GraphsComponent.html":{},"classes/NgbdDropdownBasic.html":{},"components/WebcamComponent.html":{},"coverage.html":{},"overview.html":{}}}],["wetterstation",{"_index":435,"title":{},"body":{"components/AppComponent.html":{}}}],["white",{"_index":358,"title":{},"body":{"components/AdminpanelComponent.html":{},"components/WebcamComponent.html":{}}}],["width",{"_index":41,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminpanelComponent.html":{},"components/GraphsComponent.html":{},"components/WebcamComponent.html":{}}}],["width:85",{"_index":780,"title":{},"body":{"components/GraphsComponent.html":{}}}],["wind\",status",{"_index":209,"title":{},"body":{"components/AdminpanelComponent.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{},"miscellaneous/variables.html":{}}}],["wind/?start='+this.formatdate(today",{"_index":887,"title":{},"body":{"interfaces/TemperatureData.html":{},"injectables/WeatherDataService.html":{},"interfaces/WindData.html":{}}}],["winddata",{"_index":612,"title":{"interfaces/WindData.html":{}},"body":{"components/GraphsComponent.html":{},"interfaces/TemperatureData.html":{},"injectables/WeatherDataService.html":{},"interfaces/WindData.html":{},"coverage.html":{}}}],["winddirtime",{"_index":789,"title":{},"body":{"components/GraphsComponent.html":{}}}],["windgeschwindigkeit",{"_index":748,"title":{},"body":{"components/GraphsComponent.html":{}}}],["windrichtung",{"_index":749,"title":{},"body":{"components/GraphsComponent.html":{}}}],["windrichtungen",{"_index":756,"title":{},"body":{"components/GraphsComponent.html":{}}}],["windspeed",{"_index":707,"title":{},"body":{"components/GraphsComponent.html":{}}}],["wurde",{"_index":223,"title":{},"body":{"components/AdminpanelComponent.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["yaxes",{"_index":277,"title":{},"body":{"components/AdminpanelComponent.html":{},"components/GraphsComponent.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["yaxisid",{"_index":296,"title":{},"body":{"components/AdminpanelComponent.html":{},"interfaces/raspyActions.html":{},"interfaces/sensorActions.html":{}}}],["year",{"_index":411,"title":{},"body":{"injectables/AdminpanelDataService.html":{},"interfaces/BatteryData.html":{},"interfaces/ImageData.html":{},"injectables/ImageService.html":{},"interfaces/SolarData.html":{},"interfaces/TemperatureData.html":{},"injectables/WeatherDataService.html":{},"interfaces/WindData.html":{}}}],["yesterday",{"_index":417,"title":{},"body":{"injectables/AdminpanelDataService.html":{},"interfaces/BatteryData.html":{},"classes/NgbdDropdownBasic.html":{},"interfaces/SolarData.html":{},"interfaces/TemperatureData.html":{},"injectables/WeatherDataService.html":{},"components/WebcamComponent.html":{},"interfaces/WindData.html":{}}}],["yesterday=today.getdate",{"_index":800,"title":{},"body":{"interfaces/ImageData.html":{},"injectables/ImageService.html":{}}}],["yesterdayimages",{"_index":831,"title":{},"body":{"classes/NgbdDropdownBasic.html":{},"components/WebcamComponent.html":{}}}],["yesterdaylightbox",{"_index":904,"title":{},"body":{"components/WebcamComponent.html":{}}}],["yesterdaylightbox:lightbox",{"_index":840,"title":{},"body":{"classes/NgbdDropdownBasic.html":{},"components/WebcamComponent.html":{}}}],["yesterdaypics",{"_index":830,"title":{},"body":{"classes/NgbdDropdownBasic.html":{},"components/WebcamComponent.html":{}}}],["zone.js",{"_index":1000,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":455,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AdminComponent.html":{"url":"components/AdminComponent.html","title":"component - AdminComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AdminComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/admin/admin.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-admin\n            \n\n            \n                styleUrls\n                ./admin.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./admin.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/admin/admin.component.ts:11\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/admin/admin.component.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n\n\n@Component({\n  selector: 'app-admin',\n  templateUrl: './admin.component.html',\n  styleUrls: ['./admin.component.scss']\n  \n})\nexport class AdminComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n    \n  }\n\n  \n}\n\n    \n\n    \n        \n\n\n  \n  \n    Benutzername\n    \n\n    Passwort\n    \n\n    \n      Anmelden\n    \n    \n    \n       Login merken?\n    \n    \n    \n\n\n\n\n    \n\n    \n                \n                    ./admin.component.scss\n                \n                \n\n/* Full-width inputs */\ninput[type=text], input[type=password] {\n  width: 100%;\n  padding: 12px 20px;\n  margin: 8px 0;\n  text-align: left;\n  display: block;\n  border: 1px solid #ccc;\n  box-sizing: border-box;\n}\n\nmat-card {\n  margin: 0 auto;\n  width: 30%;\n}\n\n.login{\n  display: flex;\n  justify-content: center;\n  margin: 0 auto;\n}\n/* Extra style for the cancel button (red) */\n.cancelbtn {\n  width: 3em;\n  padding: 10px 18px;\n  background-color: #f44336;\n}\n\n/* Add padding to containers */\n.container {\n  padding: 16px;\n}\n\n/* The \"Forgot password\" text */\nspan.psw {\n  float: right;\n  padding-top: 16px;\n}\n\n/* Change styles for span and cancel button on extra small screens */\n@media screen and (max-width: 300px) {\n  span.psw {\n    display: block;\n    float: none;\n  }\n  .cancelbtn {\n    width: 100%;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '        Benutzername        Passwort              Anmelden                   Login merken?            '\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AdminpanelComponent', 'selector': 'app-adminpanel'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'GraphsComponent', 'selector': 'app-graphs'},{'name': 'WebcamComponent', 'selector': 'app-webcam'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AdminComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AdminpanelComponent.html":{"url":"components/AdminpanelComponent.html","title":"component - AdminpanelComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AdminpanelComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/adminpanel/adminpanel.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-adminpanel\n            \n\n            \n                styleUrls\n                ./adminpanel.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./adminpanel.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                adminpanelDataService\n                            \n                            \n                                adminpanelDataSubscription\n                            \n                            \n                                batteryData\n                            \n                            \n                                displayedColumns\n                            \n                            \n                                displayedSensorColumns\n                            \n                            \n                                extendedModeStatus\n                            \n                            \n                                isToggled\n                            \n                            \n                                logTableData\n                            \n                            \n                                sensorTableData\n                            \n                            \n                                solarData\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                buildChart\n                            \n                            \n                                buildPowerChargeChart\n                            \n                            \n                                chargeChart\n                            \n                            \n                                diagramChange\n                            \n                            \n                                getChargeDataSet\n                            \n                            \n                                getDataSet\n                            \n                            \n                                getPowerDataSet\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                powerChart\n                            \n                            \n                                updateChart\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(adminpanelDataService: AdminpanelDataService)\n                    \n                \n                        \n                            \n                                Defined in src/app/adminpanel/adminpanel.component.ts:48\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        adminpanelDataService\n                                                  \n                                                        \n                                                                        AdminpanelDataService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            buildChart\n                        \n                        \n                    \n                \n            \n            \n                \nbuildChart()\n                \n            \n\n\n            \n                \n                    Defined in src/app/adminpanel/adminpanel.component.ts:94\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            buildPowerChargeChart\n                        \n                        \n                    \n                \n            \n            \n                \nbuildPowerChargeChart(dataset, chartText, axisLabel)\n                \n            \n\n\n            \n                \n                    Defined in src/app/adminpanel/adminpanel.component.ts:205\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dataset\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    chartText\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    axisLabel\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            chargeChart\n                        \n                        \n                    \n                \n            \n            \n                \nchargeChart()\n                \n            \n\n\n            \n                \n                    Defined in src/app/adminpanel/adminpanel.component.ts:201\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            diagramChange\n                        \n                        \n                    \n                \n            \n            \n                \ndiagramChange(event: MatButtonToggleChange)\n                \n            \n\n\n            \n                \n                    Defined in src/app/adminpanel/adminpanel.component.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                            MatButtonToggleChange\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getChargeDataSet\n                        \n                        \n                    \n                \n            \n            \n                \ngetChargeDataSet()\n                \n            \n\n\n            \n                \n                    Defined in src/app/adminpanel/adminpanel.component.ts:254\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     {}\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getDataSet\n                        \n                        \n                    \n                \n            \n            \n                \ngetDataSet()\n                \n            \n\n\n            \n                \n                    Defined in src/app/adminpanel/adminpanel.component.ts:144\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     {}\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getPowerDataSet\n                        \n                        \n                    \n                \n            \n            \n                \ngetPowerDataSet()\n                \n            \n\n\n            \n                \n                    Defined in src/app/adminpanel/adminpanel.component.ts:242\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     {}\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/adminpanel/adminpanel.component.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            powerChart\n                        \n                        \n                    \n                \n            \n            \n                \npowerChart()\n                \n            \n\n\n            \n                \n                    Defined in src/app/adminpanel/adminpanel.component.ts:197\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateChart\n                        \n                        \n                    \n                \n            \n            \n                \nupdateChart()\n                \n            \n\n\n            \n                \n                    Defined in src/app/adminpanel/adminpanel.component.ts:74\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            adminpanelDataService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         AdminpanelDataService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/adminpanel/adminpanel.component.ts:40\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            adminpanelDataSubscription\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/adminpanel/adminpanel.component.ts:48\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            batteryData\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         BatteryData[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/adminpanel/adminpanel.component.ts:42\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            displayedColumns\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                    \n                        \n                            Default value : ['date','name','action']\n                        \n                    \n                        \n                            \n                                    Defined in src/app/adminpanel/adminpanel.component.ts:88\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            displayedSensorColumns\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                    \n                        \n                            Default value : ['sensor','status']\n                        \n                    \n                        \n                            \n                                    Defined in src/app/adminpanel/adminpanel.component.ts:91\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            extendedModeStatus\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     BehaviorSubject\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/adminpanel/adminpanel.component.ts:43\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isToggled\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/adminpanel/adminpanel.component.ts:46\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            logTableData\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : logData\n                        \n                    \n                        \n                            \n                                    Defined in src/app/adminpanel/adminpanel.component.ts:89\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sensorTableData\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : sensorData\n                        \n                    \n                        \n                            \n                                    Defined in src/app/adminpanel/adminpanel.component.ts:92\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            solarData\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         SolarData[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/adminpanel/adminpanel.component.ts:41\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { SolarData, AdminpanelDataService, BatteryData } from \"../adminpanel-data.service\";\nimport { MatButtonToggleChange } from '@angular/material/button-toggle';\nimport { BehaviorSubject, Subscription } from 'rxjs';\nimport {Chart} from 'chart.js';\n\nvar dates = ['25.05.2020', '26.05.2020', '27.05.2020']\n\nexport interface raspyActions {\n  date: string;\n  name: string;\n  action: string;\n}\n\nexport interface sensorActions {\n  sensor: string;\n  status: string;\n}\n\nconst logData: raspyActions[] = [];\nconst sensorData: sensorActions[] =[\n  {sensor: \"Temperatur\",status: \"OK\"},\n  {sensor: \"Wind\",status: \"OK\"},\n  {sensor: \"Spannung Raspberry\",status: \"OK\"},\n  {sensor: \"Strom Raspberry\",status: \"OK\"},\n  {sensor: \"Spannung Photovoltaik\",status: \"OK\"},\n  {sensor: \"Strom Photovoltaik\",status: \"OK\"},\n  {sensor: \"Leistungsaufnahme\",status: \"OK\"},\n  {sensor: \"Ladestrom\",status: \"OK\"}\n];\n\n@Component({\n  selector: 'app-adminpanel',\n  templateUrl: './adminpanel.component.html',\n  styleUrls: ['./adminpanel.component.scss']\n})\n\nexport class AdminpanelComponent implements OnInit {\n\n  adminpanelDataService: AdminpanelDataService;\n  solarData: SolarData[] = [];\n  batteryData: BatteryData[] = [];\n  extendedModeStatus: BehaviorSubject;\n\n  //Gibt für [hidden] an, ob die Leistungsaufnahme ausgewählt wurde oder nicht\n  isToggled:boolean = false;\n\n  adminpanelDataSubscription: Subscription;\n\n  constructor(adminpanelDataService: AdminpanelDataService) {\n    this.adminpanelDataService = adminpanelDataService\n    this.extendedModeStatus = new BehaviorSubject(false)\n  }\n\n  ngOnInit(){\n    this.updateChart();\n  }\n\n  diagramChange(event: MatButtonToggleChange) {\n    if(event.value == \"power\"){\n      this.isToggled = true;\n      this.powerChart();\n    }\n    else if(event.value == \"charge\"){\n      this.isToggled = true;\n      this.chargeChart();\n    }\n    else{\n      this.updateChart();\n      this.isToggled = false;\n    }\n  }\n\n  updateChart(){\n    var input=16;\n    this.adminpanelDataSubscription =\n      this.adminpanelDataService.getSolarData(input).subscribe((datasolar) => {\n        this.solarData = datasolar;\n      });\n\n    this.adminpanelDataSubscription =\n      this.adminpanelDataService.getBatteryData(input).subscribe((databattery) => {\n        this.batteryData = databattery;\n        this.buildChart();\n      });\n  }\n\n  displayedColumns: string[] = ['date','name','action'];\n  logTableData = logData;\n\n  displayedSensorColumns: string[] = ['sensor','status'];\n  sensorTableData = sensorData;\n\n  buildChart() {\n    let ctx = document.getElementById('elecChart');\n    let dataSet = this.getDataSet();\n    console.log(this.batteryData.map(datebattery => datebattery.measure_time));\n    let volts = new Chart(ctx, {\n      type: 'line',\n      data: {\n        labels: this.batteryData.map(datebattery => new Date(datebattery.measure_time).toLocaleString()),\n        datasets: dataSet\n      },\n      options: {\n        title: {\n          display: true,\n          text: 'Energieverbrauch',\n          fontSize: 20\n        },\n        animation: {\n          duration: 0, // general animation time\n        },\n        hover: {\n          animationDuration: 0, // duration of animations when hovering an item\n        },\n        responsiveAnimationDuration: 0,\n        scales: {\n          yAxes: [{\n            scaleLabel: {\n              display: true,\n              labelString: 'Spannung in Volt'\n            },\n            id: 'voltage',\n            position: 'left',\n            ticks: {\n              beginAtZero: true\n            }},\n            {\n            scaleLabel: {\n              display: true,\n              labelString: 'Stromstärke in A'\n            },\n            id: 'current',\n            position: 'right',\n            ticks: {\n              beginAtZero: true\n            }\n          }]\n        }\n      }\n    });\n  }\n\n  getDataSet(){\n    var dataSet = [];\n\n    let accCur =  document.getElementById(\"accCur\");\n    if(accCur.checked){\n      let newData = {\n        label:\"Stromverbrauch Akku\",\n        borderColor: \"#FFBF00\",\n        yAxisID: 'current',\n        data: this.batteryData.map(databattery => databattery.current),\n        fill: false\n      }\n      dataSet.push(newData);\n    }\n\n    let accVol =  document.getElementById(\"accVol\");\n    if(accVol.checked){\n      let newData = {\n        label:\"Spannung Akku\",\n        borderColor: \"#00BFFF\",\n        yAxisID: 'voltage',\n        data: this.batteryData.map(databattery => databattery.voltage),\n        fill: false\n      }\n      dataSet.push(newData);\n    }\n\n    let solCur =  document.getElementById(\"solCur\");\n    if(solCur.checked){\n      let newData = {\n        label:\"Stromverbrauch Solarzelle\",\n        borderColor: \"#FF0000\",\n        yAxisID: 'current',\n        data: this.solarData.map(datasolar => datasolar.current),\n        fill: false\n      }\n      dataSet.push(newData);\n    }\n\n    let solVol =  document.getElementById(\"solVol\");\n    if(solVol.checked){\n      let newData = {\n        label:\"Spannung Solarzelle\",\n        borderColor: \"#013ADF\",\n        yAxisID: 'voltage',\n        data: this.solarData.map(datasolar => datasolar.voltage),\n        fill: false\n      }\n      dataSet.push(newData);\n    }\n    return(dataSet);\n  }\n\n  powerChart(){\n    this.buildPowerChargeChart(this.getPowerDataSet(),\"Leistungsuafnahme\",\"Leistung in Watt\");\n  }\n\n  chargeChart(){\n    this.buildPowerChargeChart(this.getChargeDataSet(),\"Ladestrom\",\"Strom in A\");\n  }\n\n  buildPowerChargeChart(dataset,chartText,axisLabel) {\n    let ctx = document.getElementById('elecChart');\n    let dataSet = dataset;\n    let volts = new Chart(ctx, {\n      type: 'line',\n      data: {\n        labels: dates,\n        datasets: dataSet\n      },\n      options: {\n        title: {\n          display: true,\n          text: chartText,\n          fontSize: 20\n        },\n        animation: {\n          duration: 0, // general animation time\n        },\n        hover: {\n          animationDuration: 0, // duration of animations when hovering an item\n        },\n        responsiveAnimationDuration: 0,\n        scales: {\n          yAxes: [{\n            scaleLabel: {\n              display: true,\n              labelString: axisLabel\n            },\n            ticks: {\n              beginAtZero: true\n            }\n          }]\n        }\n      }\n    });\n  }\n\n  getPowerDataSet(){\n    var powerSet = [];\n    let newData = {\n      label:\"Leistungsaufnahme\",\n      borderColor: \"#013ADF\",\n      data: [10,23,18],\n      fill: false\n    }\n    powerSet.push(newData);\n    return(powerSet);\n  }\n\n  getChargeDataSet(){\n    var chargeSet = [];\n    let newData = {\n      label:\"Ladestrom\",\n      borderColor: \"#FF4500\",\n      data: [1.8,1,0.9],\n      fill: false\n    }\n    chargeSet.push(newData);\n    return(chargeSet);\n  }\n}\n\n    \n\n    \n        \n\n\n     src=\"https://cdn.jsdelivr.net/npm/chart.js@2.9.3/dist/Chart.min.js\" \n\n    \n\n    \n    \n        \n            Spannung/Strom\n            Leistungsaufnahme\n            Ladestrom\n        \n    \n\n    \n    \n        \n    \n\n    \n    \n        \n            Akku: \n            Spannung\n            Strom\n        \n        \n            Photovoltaik: \n            Spannung\n            Strom\n        \n    \n\n    \n        \n            Datum\n             {{element.date}} \n        \n        \n            Name\n             {{element.name}} \n        \n        \n            Aktion\n             {{element.action}} \n        \n        \n        \n    -->\n\n    \n    \n        \n            Sensor\n             {{element.sensor}} \n        \n        \n            Status\n             {{element.status}} \n        \n        \n        \n    \n\n\n\n    \n\n    \n                \n                    ./adminpanel.component.scss\n                \n                .matlist{\n    height: 100%;\n    width: 100%;\n    padding-top: 24px !important;\n}\n\ntable {\n    width: 30%;\n    table-layout: fixed;\n  }\n  \n  th, td {\n    overflow: hidden;\n    width: 200px;\n    text-overflow: ellipsis;\n    white-space: nowrap;\n  }\n\nH1 {\n    text-align: center;\n}\n\n.btnDiv {\n    text-align: left;\n}\n\n.checksec {\n    display: flex;\n    align-content: center;\n    align-items: center;\n    height: 60px;\n  }\n\n.checkmarg {\n    margin: 0 10px;\n}\n\nmat-card {\n    width: calc(100% - 70px);\n    height: calc(100% - 40px);\n  }\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '     src=\"https://cdn.jsdelivr.net/npm/chart.js@2.9.3/dist/Chart.min.js\"                                 Spannung/Strom            Leistungsaufnahme            Ladestrom                                                            Akku:             Spannung            Strom                            Photovoltaik:             Spannung            Strom                                    Datum             {{element.date}}                             Name             {{element.name}}                             Aktion             {{element.action}}                             -->                                        Sensor             {{element.sensor}}                 Status             {{element.status}}                             '\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AdminpanelComponent', 'selector': 'app-adminpanel'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'GraphsComponent', 'selector': 'app-graphs'},{'name': 'WebcamComponent', 'selector': 'app-webcam'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AdminpanelComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   "},"injectables/AdminpanelDataService.html":{"url":"injectables/AdminpanelDataService.html","title":"injectable - AdminpanelDataService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AdminpanelDataService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/adminpanel-data.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                apiUrl\n                            \n                            \n                                    Private\n                                http\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                formatDate\n                            \n                            \n                                getBatteryData\n                            \n                            \n                                getBatteryDataFrame\n                            \n                            \n                                getSolarData\n                            \n                            \n                                getSolarDataFrame\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/adminpanel-data.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            formatDate\n                        \n                        \n                    \n                \n            \n            \n                \nformatDate(date: Date)\n                \n            \n\n\n            \n                \n                    Defined in src/app/adminpanel-data.service.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    date\n                                    \n                                                Date\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getBatteryData\n                        \n                        \n                    \n                \n            \n            \n                \ngetBatteryData(time: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/adminpanel-data.service.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    time\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getBatteryDataFrame\n                        \n                        \n                    \n                \n            \n            \n                \ngetBatteryDataFrame(start: Date, end: Date)\n                \n            \n\n\n            \n                \n                    Defined in src/app/adminpanel-data.service.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    start\n                                    \n                                                Date\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    end\n                                    \n                                                Date\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getSolarData\n                        \n                        \n                    \n                \n            \n            \n                \ngetSolarData(time: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/adminpanel-data.service.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    time\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getSolarDataFrame\n                        \n                        \n                    \n                \n            \n            \n                \ngetSolarDataFrame(start: Date, end: Date)\n                \n            \n\n\n            \n                \n                    Defined in src/app/adminpanel-data.service.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    start\n                                    \n                                                Date\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    end\n                                    \n                                                Date\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            apiUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'http://localhost:8000/api/'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/adminpanel-data.service.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            http\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         HttpClient\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/adminpanel-data.service.ts:9\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {HttpClient} from \"@angular/common/http\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AdminpanelDataService {\n  private apiUrl = 'http://localhost:8000/api/';\n  private http: HttpClient;\n\n  constructor(http: HttpClient) {\n    this.http = http;\n  }\n\n  formatDate(date: Date) {\n    var d = new Date(date),\n        month = '' + (d.getMonth() + 1),\n        day = '' + d.getDate(),\n        year = d.getFullYear();\n\n    if (month.length (this.apiUrl + 'solarcell/?start='+this.formatDate(today));\n  }\n\n  getBatteryData(time: number){\n    let today=  new Date();\n    let yesterday = today.getDate()-time;\n    today.setDate(yesterday);\n  \n  return  this.http.get(this.apiUrl + 'battery/?start='+this.formatDate(today));\n  }\n\n  getSolarDataFrame(start:Date,end:Date){\n    return this.http.get(this.apiUrl+'solarcell/?start='+this.formatDate(start)+'&end='+this.formatDate(end));\n  }\n\n  getBatteryDataFrame(start:Date,end:Date){\n    return this.http.get(this.apiUrl+'battery/?start='+this.formatDate(start)+'&end='+this.formatDate(end));\n  }\n}\n\nexport interface SolarData {\n  id: Number,\n  current: Number,\n  voltage: Number,\n  measure_time: Date\n}\n\nexport interface BatteryData {\n  id: Number,\n  current: Number,\n  voltage: Number,\n  degrees: Number,\n  measure_time: Date\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                ./app.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'SE-draft'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:11\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'SE-draft';\n}\n\n    \n\n    \n        \n  \n      \n            \n            Wetterstation\n        \n    \n      \n        Graphen\n        Webcam & Galerie\n        Wartungsbereich\n      \n    \n  \n\n\n\n  \n\n    \n\n    \n                \n                    ./app.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                Wetterstation                          Graphen        Webcam & Galerie        Wartungsbereich              '\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AdminpanelComponent', 'selector': 'app-adminpanel'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'GraphsComponent', 'selector': 'app-graphs'},{'name': 'WebcamComponent', 'selector': 'app-webcam'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAdminComponent\n\nAdminComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAdminComponent->AppModule\n\n\n\n\n\nAdminpanelComponent\n\nAdminpanelComponent\n\nAppModule -->\n\nAdminpanelComponent->AppModule\n\n\n\n\n\nAppComponent\n\nAppComponent\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nGraphsComponent\n\nGraphsComponent\n\nAppModule -->\n\nGraphsComponent->AppModule\n\n\n\n\n\nWebcamComponent\n\nWebcamComponent\n\nAppModule -->\n\nWebcamComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nImageService\n\nImageService\n\nAppModule -->\n\nImageService->AppModule\n\n\n\n\n\nWeatherDataService\n\nWeatherDataService\n\nAppModule -->\n\nWeatherDataService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AdminComponent\n                        \n                        \n                            AdminpanelComponent\n                        \n                        \n                            AppComponent\n                        \n                        \n                            GraphsComponent\n                        \n                        \n                            WebcamComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            ImageService\n                        \n                        \n                            WeatherDataService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppRoutingModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {BrowserModule} from '@angular/platform-browser';\nimport {NgModule} from '@angular/core';\nimport {MDBBootstrapModule,} from 'angular-bootstrap-md';\nimport {MatCardModule} from '@angular/material/card';\nimport {MatDatepickerModule} from '@angular/material/datepicker';\nimport {MatFormFieldModule} from '@angular/material/form-field';\nimport {AppRoutingModule} from './app-routing.module';\nimport {AppComponent} from './app.component';\nimport {GraphsComponent} from './graphs/graphs.component';\nimport {WebcamComponent} from './webcam/webcam.component';\nimport {AdminComponent} from './admin/admin.component';\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\n\nimport {FormsModule} from '@angular/forms';\nimport {ClipboardModule} from '@angular/cdk/clipboard';\nimport {DragDropModule} from '@angular/cdk/drag-drop';\nimport {PortalModule} from '@angular/cdk/portal';\nimport {ScrollingModule} from '@angular/cdk/scrolling';\nimport {CdkStepperModule} from '@angular/cdk/stepper';\nimport {CdkTableModule} from '@angular/cdk/table';\nimport {CdkTreeModule} from '@angular/cdk/tree';\nimport {MatAutocompleteModule} from '@angular/material/autocomplete';\nimport {MatBadgeModule} from '@angular/material/badge';\nimport {MatBottomSheetModule} from '@angular/material/bottom-sheet';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatButtonToggleModule} from '@angular/material/button-toggle';\n\n\nimport {MatCheckboxModule} from '@angular/material/checkbox';\nimport {MatChipsModule} from '@angular/material/chips';\nimport {MatStepperModule} from '@angular/material/stepper';\nimport {MatDialogModule} from '@angular/material/dialog';\nimport {MatDividerModule} from '@angular/material/divider';\nimport {MatExpansionModule} from '@angular/material/expansion';\nimport {MatGridListModule} from '@angular/material/grid-list';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatListModule} from '@angular/material/list';\nimport {MatMenuModule} from '@angular/material/menu';\nimport {MatNativeDateModule, MatRippleModule} from '@angular/material/core';\nimport {MatPaginatorModule} from '@angular/material/paginator';\nimport {MatProgressBarModule} from '@angular/material/progress-bar';\nimport {MatProgressSpinnerModule} from '@angular/material/progress-spinner';\nimport {MatRadioModule} from '@angular/material/radio';\nimport {MatSelectModule} from '@angular/material/select';\nimport {MatSidenavModule} from '@angular/material/sidenav';\nimport {MatSliderModule} from '@angular/material/slider';\nimport {MatSlideToggleModule} from '@angular/material/slide-toggle';\nimport {MatSnackBarModule} from '@angular/material/snack-bar';\nimport {MatSortModule} from '@angular/material/sort';\nimport {MatTableModule} from '@angular/material/table';\nimport {MatTabsModule} from '@angular/material/tabs';\nimport {MatToolbarModule} from '@angular/material/toolbar';\nimport {MatTooltipModule} from '@angular/material/tooltip';\nimport {MatTreeModule} from '@angular/material/tree';\nimport {WeatherDataService} from \"./weather-data.service\";\nimport {HttpClient, HttpClientModule} from \"@angular/common/http\";\nimport { ImageService } from './image-data.service';\nimport { AdminpanelComponent } from './adminpanel/adminpanel.component';\nimport { GalleryModule } from '@ngx-gallery/core';\nimport { LightboxModule } from '@ngx-gallery/lightbox'\nimport { GallerizeModule } from '@ngx-gallery/gallerize';\n\n;\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    GraphsComponent,\n    WebcamComponent,\n    AdminComponent,\n    AdminpanelComponent\n  ],\n  imports: [\n    GallerizeModule,\n    GalleryModule,\n    LightboxModule,\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    MDBBootstrapModule.forRoot(),\n    FormsModule,\n    BrowserAnimationsModule,\n    MatCardModule,\n    MatDatepickerModule,\n    MatFormFieldModule,\n    ClipboardModule,\n    CdkStepperModule,\n    CdkTableModule,\n    CdkTreeModule,\n    DragDropModule,\n    MatAutocompleteModule,\n    MatBadgeModule,\n    MatBottomSheetModule,\n    MatButtonModule,\n    MatButtonToggleModule,\n    MatCardModule,\n    MatCheckboxModule,\n    MatChipsModule,\n    MatStepperModule,\n    MatDatepickerModule,\n    MatDialogModule,\n    MatDividerModule,\n    MatExpansionModule,\n    MatGridListModule,\n    MatIconModule,\n    MatInputModule,\n    MatListModule,\n    MatMenuModule,\n    MatNativeDateModule,\n    MatPaginatorModule,\n    MatProgressBarModule,\n    MatProgressSpinnerModule,\n    MatRadioModule,\n    MatRippleModule,\n    MatSelectModule,\n    MatSidenavModule,\n    MatSliderModule,\n    MatSlideToggleModule,\n    MatSnackBarModule,\n    MatSortModule,\n    MatTableModule,\n    MatTabsModule,\n    MatToolbarModule,\n    MatTooltipModule,\n    MatTreeModule,\n    PortalModule,\n    ScrollingModule,\n\n  ],\n  providers: [WeatherDataService,ImageService, HttpClient],\n  bootstrap: [AppComponent]\n\n})\nexport class AppModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AppPage.html":{"url":"classes/AppPage.html","title":"class - AppPage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AppPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            e2e/src/app.po.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getTitleText\n                            \n                            \n                                navigateTo\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getTitleText\n                        \n                        \n                    \n                \n            \n            \n                \ngetTitleText()\n                \n            \n\n\n            \n                \n                    Defined in e2e/src/app.po.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            navigateTo\n                        \n                        \n                    \n                \n            \n            \n                \nnavigateTo()\n                \n            \n\n\n            \n                \n                    Defined in e2e/src/app.po.ts:4\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { browser, by, element } from 'protractor';\n\nexport class AppPage {\n  navigateTo() {\n    return browser.get(browser.baseUrl) as Promise;\n  }\n\n  getTitleText() {\n    return element(by.css('app-root .content span')).getText() as Promise;\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { GraphsComponent } from './graphs/graphs.component'; \nimport { WebcamComponent } from './webcam/webcam.component'; \nimport { AdminComponent } from './admin/admin.component';\nimport { AdminpanelComponent } from './adminpanel/adminpanel.component'; // Add this\n\nconst routes: Routes = [\n  { path: '', component: GraphsComponent },              // Add this\n  { path: 'webcam', component: WebcamComponent },\n  { path: 'admin', component: AdminComponent },\n  { path: 'adminpanel', component: AdminpanelComponent }\n\n\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/BatteryData.html":{"url":"interfaces/BatteryData.html","title":"interface - BatteryData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  BatteryData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/adminpanel-data.service.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        current\n                                \n                                \n                                        degrees\n                                \n                                \n                                        id\n                                \n                                \n                                        measure_time\n                                \n                                \n                                        voltage\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        current\n                                    \n                                \n                                \n                                    \n                                        current:         Number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        degrees\n                                    \n                                \n                                \n                                    \n                                        degrees:         Number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         Number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        measure_time\n                                    \n                                \n                                \n                                    \n                                        measure_time:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        voltage\n                                    \n                                \n                                \n                                    \n                                        voltage:         Number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {HttpClient} from \"@angular/common/http\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AdminpanelDataService {\n  private apiUrl = 'http://localhost:8000/api/';\n  private http: HttpClient;\n\n  constructor(http: HttpClient) {\n    this.http = http;\n  }\n\n  formatDate(date: Date) {\n    var d = new Date(date),\n        month = '' + (d.getMonth() + 1),\n        day = '' + d.getDate(),\n        year = d.getFullYear();\n\n    if (month.length (this.apiUrl + 'solarcell/?start='+this.formatDate(today));\n  }\n\n  getBatteryData(time: number){\n    let today=  new Date();\n    let yesterday = today.getDate()-time;\n    today.setDate(yesterday);\n  \n  return  this.http.get(this.apiUrl + 'battery/?start='+this.formatDate(today));\n  }\n\n  getSolarDataFrame(start:Date,end:Date){\n    return this.http.get(this.apiUrl+'solarcell/?start='+this.formatDate(start)+'&end='+this.formatDate(end));\n  }\n\n  getBatteryDataFrame(start:Date,end:Date){\n    return this.http.get(this.apiUrl+'battery/?start='+this.formatDate(start)+'&end='+this.formatDate(end));\n  }\n}\n\nexport interface SolarData {\n  id: Number,\n  current: Number,\n  voltage: Number,\n  measure_time: Date\n}\n\nexport interface BatteryData {\n  id: Number,\n  current: Number,\n  voltage: Number,\n  degrees: Number,\n  measure_time: Date\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/GraphsComponent.html":{"url":"components/GraphsComponent.html","title":"component - GraphsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  GraphsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/graphs/graphs.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-graphs\n            \n\n            \n                styleUrls\n                ./graphs.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./graphs.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                chosenbtn\n                            \n                            \n                                enddateEvents\n                            \n                            \n                                extendedModeStatus\n                            \n                            \n                                hourdata\n                            \n                            \n                                recentTemp\n                            \n                            \n                                recentWindDir\n                            \n                            \n                                recentWindSpeed\n                            \n                            \n                                startdateEvents\n                            \n                            \n                                temperatureData\n                            \n                            \n                                timepickers\n                            \n                            \n                                weatherDataService\n                            \n                            \n                                weatherDataSubscription\n                            \n                            \n                                windData\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addEndEvent\n                            \n                            \n                                addStartEvent\n                            \n                            \n                                applyTimeframe\n                            \n                            \n                                buildGraphs\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onbtnChange\n                            \n                            \n                                onChange\n                            \n                            \n                                onImageLoad\n                            \n                            \n                                rotateDirCardArrow\n                            \n                            \n                                transformDirectionDates\n                            \n                            \n                                updateGraphs\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(weatherDataService: WeatherDataService)\n                    \n                \n                        \n                            \n                                Defined in src/app/graphs/graphs.component.ts:37\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        weatherDataService\n                                                  \n                                                        \n                                                                        WeatherDataService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            addEndEvent\n                        \n                        \n                    \n                \n            \n            \n                \naddEndEvent(event: MatDatepickerInputEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/app/graphs/graphs.component.ts:177\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                            MatDatepickerInputEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            addStartEvent\n                        \n                        \n                    \n                \n            \n            \n                \naddStartEvent(event: MatDatepickerInputEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/app/graphs/graphs.component.ts:171\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                            MatDatepickerInputEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            applyTimeframe\n                        \n                        \n                    \n                \n            \n            \n                \napplyTimeframe()\n                \n            \n\n\n            \n                \n                    Defined in src/app/graphs/graphs.component.ts:183\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            buildGraphs\n                        \n                        \n                    \n                \n            \n            \n                \nbuildGraphs()\n                \n            \n\n\n            \n                \n                    Defined in src/app/graphs/graphs.component.ts:85\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/graphs/graphs.component.ts:80\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/graphs/graphs.component.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onbtnChange\n                        \n                        \n                    \n                \n            \n            \n                \nonbtnChange(event: MatRadioChange)\n                \n            \n\n\n            \n                \n                    Defined in src/app/graphs/graphs.component.ts:75\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                            MatRadioChange\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onChange\n                        \n                        \n                    \n                \n            \n            \n                \nonChange(event: MatSlideToggleChange)\n                \n            \n\n\n            \n                \n                    Defined in src/app/graphs/graphs.component.ts:70\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                            MatSlideToggleChange\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onImageLoad\n                        \n                        \n                    \n                \n            \n            \n                \nonImageLoad(i)\n                \n            \n\n\n            \n                \n                    Defined in src/app/graphs/graphs.component.ts:147\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    i\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            rotateDirCardArrow\n                        \n                        \n                    \n                \n            \n            \n                \nrotateDirCardArrow(angle, id)\n                \n            \n\n\n            \n                \n                    Defined in src/app/graphs/graphs.component.ts:158\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    angle\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    id\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            transformDirectionDates\n                        \n                        \n                    \n                \n            \n            \n                \ntransformDirectionDates(i)\n                \n            \n\n\n            \n                \n                    Defined in src/app/graphs/graphs.component.ts:163\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    i\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateGraphs\n                        \n                        \n                    \n                \n            \n            \n                \nupdateGraphs(input)\n                \n            \n\n\n            \n                \n                    Defined in src/app/graphs/graphs.component.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    input\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            chosenbtn\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 1\n                        \n                    \n                        \n                            \n                                    Defined in src/app/graphs/graphs.component.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            enddateEvents\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/graphs/graphs.component.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            extendedModeStatus\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     BehaviorSubject\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/graphs/graphs.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            hourdata\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Number[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/graphs/graphs.component.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            recentTemp\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/graphs/graphs.component.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            recentWindDir\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/graphs/graphs.component.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            recentWindSpeed\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/graphs/graphs.component.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            startdateEvents\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/graphs/graphs.component.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            temperatureData\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         TemperatureData[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/graphs/graphs.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            timepickers\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     number[]\n\n                        \n                    \n                    \n                        \n                            Default value : [1, 3, 7, 14, 21]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/graphs/graphs.component.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            weatherDataService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         WeatherDataService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/graphs/graphs.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            weatherDataSubscription\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/graphs/graphs.component.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            windData\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         WindData[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/graphs/graphs.component.ts:20\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, OnDestroy, OnChanges } from '@angular/core';\n\nimport { Chart } from 'chart.js';\nimport { TemperatureData, WeatherDataService, WindData } from \"../weather-data.service\";\nimport { BehaviorSubject, Subscription } from 'rxjs';\nimport { MatSlideToggleChange } from '@angular/material/slide-toggle';\nimport { MatRadioChange, MatRadioButton } from '@angular/material/radio';\nimport { MatDatepickerInputEvent } from '@angular/material/datepicker';\n\n\n\n@Component({\n  selector: 'app-graphs',\n  templateUrl: './graphs.component.html',\n  styleUrls: ['./graphs.component.scss']\n})\nexport class GraphsComponent implements OnInit, OnDestroy {\n  weatherDataService: WeatherDataService;\n  temperatureData: TemperatureData[] = [];\n  windData: WindData[] = [];\n  extendedModeStatus: BehaviorSubject;\n\n\n\n  weatherDataSubscription: Subscription;\n\n\n  chosenbtn: number = 1;\n  timepickers: number[] = [1, 3, 7, 14, 21];\n\n  recentTemp: Number;\n  recentWindSpeed: Number;\n  recentWindDir: Number;\n\n  hourdata: Number[] = [];\n  startdateEvents: string[] = [];\n  enddateEvents: string[] = [];\n\n\n  constructor(weatherDataService: WeatherDataService) {\n    this.weatherDataService = weatherDataService\n    this.extendedModeStatus = new BehaviorSubject(false)\n\n  }\n\n  ngOnInit() {\n    this.updateGraphs(1);\n  }\n\n\n  updateGraphs(input) {\n    this.weatherDataSubscription =\n      this.weatherDataService.getTemperatures(input).subscribe((data) => {\n        this.temperatureData = data;\n        this.recentTemp = this.temperatureData.map(data => data.degrees)[data.length - 1];\n      });\n\n    this.weatherDataSubscription =\n      this.weatherDataService.getWindData(input).subscribe((datawind) => {\n        this.windData = datawind;\n        this.recentWindSpeed = this.windData.map(datawind => datawind.speed)[this.windData.length - 1];\n        this.recentWindDir = this.windData.map(datawind => datawind.direction)[this.windData.length - 1];\n        console.log(this.windData);\n        this.buildGraphs();\n\n      });\n\n  }\n\n  onChange(event: MatSlideToggleChange) {\n    console.log(event);\n    this.extendedModeStatus.next(event.checked)\n  }\n\n  onbtnChange(event: MatRadioChange) {\n\n    this.updateGraphs(event.value);\n  }\n\n  ngOnDestroy() {\n    this.weatherDataSubscription.unsubscribe();\n\n  }\n\n  buildGraphs() {\n    var ctx = document.getElementById('temp');\n    var temps = new Chart(ctx, {\n      type: 'line',\n      data: {\n        labels: this.temperatureData.map(data => new Date(data.measure_time).toLocaleString()),\n        datasets: [{\n          label: 'Temperatures in C°',\n          data: this.temperatureData.map(data => data.degrees),\n          fill: true,\n          backgroundColor:\n            'rgba(255, 99, 132, 0.2)'\n          ,\n          borderColor:\n            'rgba(255, 99, 132, 1)',\n\n\n          borderWidth: 0\n        }]\n      },\n      options: {\n        scales: {\n          yAxes: [{\n            ticks: {\n              beginAtZero: true\n            }\n          }]\n        }\n      }\n    });\n\n    ctx = document.getElementById('speed');\n    var speed = new Chart(ctx, {\n      type: 'line',\n      data: {\n        labels: this.windData.map(datawind => new Date(datawind.measure_time).toLocaleString()),\n        datasets: [{\n          label: 'Windspeed in m/s',\n          data: this.windData.map(datawind => datawind.speed),\n          fill: true,\n          backgroundColor:\n            'rgba(128, 255, 132, 0.2)'\n          ,\n          borderColor:\n            'rgba(128, 255, 132, 1)',\n\n\n          borderWidth: 0\n        }]\n      },\n      options: {\n        scales: {\n          yAxes: [{\n            ticks: {\n              beginAtZero: true\n            }\n          }]\n        }\n      }\n    });\n  }\n\n  onImageLoad(i) {\n\n    var data = this.windData.map(data => data.direction);\n\n\n\n    var img = document.getElementById(i);\n    img.style.transform = 'rotate(' + data[i] + 'deg)';\n\n  }\n\n  rotateDirCardArrow(angle, id) {\n    var img = document.getElementById(id);\n    img.style.transform = 'rotate(' + angle + 'deg)';\n\n  }\n  transformDirectionDates(i) {\n    let dirhours = this.windData.map(datawind => new Date(datawind.measure_time).getHours().toLocaleString());\n    return dirhours[i];\n  }\n\n\n\n  /*Eventhandles for Timeframe */\n  addStartEvent(event: MatDatepickerInputEvent) {\n    this.startdateEvents.push(`${event.value}`);\n    console.log(this.startdateEvents)\n\n  }\n\n  addEndEvent(event: MatDatepickerInputEvent) {\n    this.enddateEvents.push(`${event.value}`);\n    console.log(this.enddateEvents)\n\n  }\n\n  applyTimeframe() {\n    let startstring = this.startdateEvents[this.startdateEvents.length - 1]\n    let startdate = new Date(startstring);\n    console.log(startdate);\n\n    let endstring = this.enddateEvents[this.enddateEvents.length - 1]\n    let enddate = new Date(endstring);\n\n\n    if (enddate > startdate) {\n      this.weatherDataSubscription =\n        this.weatherDataService.getTemperaturesDataFrame(startdate, enddate).subscribe((data) => {\n          this.temperatureData = data;\n        });\n\n      this.weatherDataSubscription =\n        this.weatherDataService.getWindDataFrame(startdate, enddate).subscribe((datawind) => {\n          this.windData = datawind;\n          this.buildGraphs();\n        });\n    }\n  }\n}\n\n\n\n    \n\n    \n        \n\n\n\n   src = \"https://cdn.jsdelivr.net/npm/chart.js@2.9.3/dist/Chart.min.js\" \n\n\n\n\n  \n    \n      \n        Aktuelle Temperatur:\n        {{recentTemp}}°C\n      \n    \n    \n      \n        Windgeschwindigkeit:\n        {{recentWindSpeed}} m/s\n      \n    \n    \n      \n        Aktuelle Windrichtung\n        \n          \n        \n\n      \n    \n\n  \n\n  \n\n    erweiterter Modus\n    \n      \n        Startdatum\n        \n        \n        \n      \n\n      \n        Enddatum\n        \n        \n        \n      \n      Anwenden\n\n    \n\n    \n      \n        \n          {{pick}}\n        \n\n      \n    \n  \n\n\n\n  \n    \n      \n    \n  \n\n  \n    \n      \n    \n  \n\n\n  \n    Windrichtungen der letzten 24 Stunden:\n    \n\n\n    \n      \n      \n      {{transformDirectionDates(indexOfelement)}} Uhr\n    \n  \n\n\n\n\n\n\n\n\n\n    \n\n    \n                \n                    ./graphs.component.scss\n                \n                \n.selectorcard{\n    \n    height:3em;\n  \n\n}\n\n.canvas-container {\n    display: flex;\n    box-align: center;\n    border: 1px solid lightgray;\n    margin-bottom: 0em;\n    width: auto;\n    height:auto\n    }\n\n.column {\n    padding-top: 1rem;\n   \n    vertical-align: middle;\n    width: 100%;\n    height: 100%;\n    \n  }\n  \n.toggleslider{\n  position: absolute;\n  right: 0.5rem;\n\n}\n\n\n.mat-radio-button{\n  padding:1rem;\n\n}\n\n\n.recentData{\nwidth:85%;\nheight:70%;\ntext-align: center;\n}\n\n\n.directions-card{\n  margin-top: 1em;\n  height: 4em;\n  text-align: center;\n  \n}\n\n.mat-h1{\n  text-align: center;\n  \n}\n\n\n.imagecontainer{\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: auto;\n  \n}\n\n.arrowscontainer{\n  float:left;\n  margin-right:0.25em ;\n}\n\n.windDirTime{\n  display: block;\n}\n.endpickform,.applydates{\nmargin-left: 1em;\n}\n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '   src = \"https://cdn.jsdelivr.net/npm/chart.js@2.9.3/dist/Chart.min.js\"                     Aktuelle Temperatur:        {{recentTemp}}°C                            Windgeschwindigkeit:        {{recentWindSpeed}} m/s                            Aktuelle Windrichtung                                            erweiterter Modus                  Startdatum                                            Enddatum                                    Anwenden                                {{pick}}                                                              Windrichtungen der letzten 24 Stunden:                          {{transformDirectionDates(indexOfelement)}} Uhr      '\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AdminpanelComponent', 'selector': 'app-adminpanel'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'GraphsComponent', 'selector': 'app-graphs'},{'name': 'WebcamComponent', 'selector': 'app-webcam'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'GraphsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   "},"interfaces/ImageData.html":{"url":"interfaces/ImageData.html","title":"interface - ImageData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ImageData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/image-data.service.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        id\n                                \n                                \n                                        image\n                                \n                                \n                                        measurement_time\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         Number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        image\n                                    \n                                \n                                \n                                    \n                                        image:         String\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         String\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        measurement_time\n                                    \n                                \n                                \n                                    \n                                        measurement_time:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {HttpClient} from \"@angular/common/http\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ImageService {\n  private apiUrl = 'http://192.168.178.44:8000/api/';\n  private http: HttpClient;\n  constructor(http: HttpClient) {\n    this.http = http;\n  }\n  today=new Date;\n  \n\n\n  formatDate(date: Date) {\n    var d = new Date(date),\n        month = '' + (d.getMonth() + 1),\n        day = '' + d.getDate(),\n        year = d.getFullYear();\n\n    if (month.length (this.apiUrl + 'images/?start='+this.formatDate(today));\n  }\n \n\n  getrecentImages() {\n    return this.http.get(this.apiUrl + 'images/recent/');\n  }\n \n  getYesterdayImages(){\n    let today=new Date;\n    let yesterday=today.getDate()-1;\n    today.setDate(yesterday);\n    return this.http.get(this.apiUrl + 'images/?start='+this.formatDate(this.today));\n  }\n\n\n}\n\nexport interface ImageData {\n  id: Number,\n  image: String,\n  measurement_time: Date\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ImageService.html":{"url":"injectables/ImageService.html","title":"injectable - ImageService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ImageService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/image-data.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                apiUrl\n                            \n                            \n                                    Private\n                                http\n                            \n                            \n                                today\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                formatDate\n                            \n                            \n                                getrecentImages\n                            \n                            \n                                getTodayImages\n                            \n                            \n                                getYesterdayImages\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/image-data.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            formatDate\n                        \n                        \n                    \n                \n            \n            \n                \nformatDate(date: Date)\n                \n            \n\n\n            \n                \n                    Defined in src/app/image-data.service.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    date\n                                    \n                                                Date\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getrecentImages\n                        \n                        \n                    \n                \n            \n            \n                \ngetrecentImages()\n                \n            \n\n\n            \n                \n                    Defined in src/app/image-data.service.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getTodayImages\n                        \n                        \n                    \n                \n            \n            \n                \ngetTodayImages()\n                \n            \n\n\n            \n                \n                    Defined in src/app/image-data.service.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getYesterdayImages\n                        \n                        \n                    \n                \n            \n            \n                \ngetYesterdayImages()\n                \n            \n\n\n            \n                \n                    Defined in src/app/image-data.service.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            apiUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'http://192.168.178.44:8000/api/'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/image-data.service.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            http\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         HttpClient\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/image-data.service.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            today\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Date\n                        \n                    \n                        \n                            \n                                    Defined in src/app/image-data.service.ts:13\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {HttpClient} from \"@angular/common/http\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ImageService {\n  private apiUrl = 'http://192.168.178.44:8000/api/';\n  private http: HttpClient;\n  constructor(http: HttpClient) {\n    this.http = http;\n  }\n  today=new Date;\n  \n\n\n  formatDate(date: Date) {\n    var d = new Date(date),\n        month = '' + (d.getMonth() + 1),\n        day = '' + d.getDate(),\n        year = d.getFullYear();\n\n    if (month.length (this.apiUrl + 'images/?start='+this.formatDate(today));\n  }\n \n\n  getrecentImages() {\n    return this.http.get(this.apiUrl + 'images/recent/');\n  }\n \n  getYesterdayImages(){\n    let today=new Date;\n    let yesterday=today.getDate()-1;\n    today.setDate(yesterday);\n    return this.http.get(this.apiUrl + 'images/?start='+this.formatDate(this.today));\n  }\n\n\n}\n\nexport interface ImageData {\n  id: Number,\n  image: String,\n  measurement_time: Date\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/NgbdDropdownBasic.html":{"url":"classes/NgbdDropdownBasic.html","title":"class - NgbdDropdownBasic","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  NgbdDropdownBasic\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/webcam/webcam.component.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Component,ChangeDetectionStrategy, OnInit, } from \"@angular/core\";\nimport { ImageData, ImageService } from \"../image-data.service\";\nimport { Observable, Subject } from \"rxjs\";\nimport { takeUntil, throttleTime } from \"rxjs/operators\";\nimport { MatDialog } from '@angular/material/dialog';\n\nimport { Gallery, GalleryItem, ImageItem } from '@ngx-gallery/core';\nimport { Lightbox } from '@ngx-gallery/lightbox';\n\nimport 'hammerjs';\n\n\n\n@Component({\n  selector: \"app-webcam\",\n  templateUrl: \"./webcam.component.html\",\n  styleUrls: [\"./webcam.component.scss\"],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class WebcamComponent implements OnInit {\n  \n  todayPics:GalleryItem[];\n  TodayImages: ImageData[] =[];\n\n  recentPics: GalleryItem[];\n  RecentImages: ImageData[] = [];\n\n  yesterdayPics: GalleryItem[];\n  YesterdayImages: ImageData[] = [];\n\n  \n\n\n  ImageService: ImageService;\n\n  destroy$: Subject = new Subject();\n\n  \n  panelOpenState = false;\n\n\n  constructor(ImageService: ImageService,public gallery: Gallery,public today: Gallery, public lightbox: Lightbox,public todayLightbox: Lightbox,public yesterday :Gallery,\n    public yesterdayLightbox:Lightbox) {\n    this.ImageService = ImageService;\n  }\n\n  ngOnInit() {\n    \n    this.ImageService.getrecentImages()\n    .pipe(takeUntil(this.destroy$))\n      .subscribe((data) => {\n        this.RecentImages = data;\n        this.loadrecentPics();\n      })\n      this.gallery.ref('lightbox', {imageSize: 'cover', loadingStrategy: 'lazy', thumbPosition: 'top'}).load(this.recentPics);\n      console.log(this.recentPics)\n\n\n \n      // This is for Lightbox example\n      \n      console.log(this.gallery)\n\n    }\n  \n\n    loadrecentPics(){\n      this.recentPics=this.RecentImages.map(data => {\n        return new ImageItem({src:data.image,thumb:data.image})\n      });\n    }\n    \n    loadtodayPics(){\n      this.ImageService.getTodayImages()\n      .pipe(takeUntil(this.destroy$))\n      .subscribe((data)=>{\n        this.TodayImages=data;\n        this.todayPics=this.TodayImages.map(data=>{\n          return new ImageItem({src:data.image,thumb:data.image})\n        });\n      this.today.ref('today', {imageSize: 'cover', loadingStrategy: 'lazy', thumbPosition: 'top'}).load(this.todayPics);\n        \n      })\n \n    }\n\n    loadyesterdayPics(){\n      this.ImageService.getYesterdayImages()\n      .pipe(takeUntil(this.destroy$))\n      .subscribe((data)=>{\n        this.YesterdayImages=data;\n        this.yesterdayPics=this.YesterdayImages.map(data=>{\n          return new ImageItem({src:data.image,thumb:data.image})\n        });\n      })\n      this.today.ref('yesterday', {imageSize: 'cover', loadingStrategy: 'lazy', thumbPosition: 'top'}).load(this.yesterdayPics);\n    }\n\n\n    openLightbox(index:number,lightboxid:string) {\n      console.log(this.todayLightbox)\n      this.todayLightbox.open(index, lightboxid);\n    }\n\n\n\n  \n\n  ngOnDestroy() {\n    this.destroy$.next(true);\n    this.destroy$.unsubscribe();\n  }\n\n  getImageLocation() {\n    console.log(this.RecentImages.map((data) => data.image));\n    return this.RecentImages.map((data) => data.image);\n  }\n\n  getImageDate() {\n    console.log(this.RecentImages.map((data) => data.measurement_time));\n    return this.RecentImages.map((data) => data.measurement_time);\n  }\n\n\n\n  \n}\n\nexport class NgbdDropdownBasic {\n  \n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SolarData.html":{"url":"interfaces/SolarData.html","title":"interface - SolarData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  SolarData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/adminpanel-data.service.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        current\n                                \n                                \n                                        id\n                                \n                                \n                                        measure_time\n                                \n                                \n                                        voltage\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        current\n                                    \n                                \n                                \n                                    \n                                        current:         Number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         Number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        measure_time\n                                    \n                                \n                                \n                                    \n                                        measure_time:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        voltage\n                                    \n                                \n                                \n                                    \n                                        voltage:         Number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {HttpClient} from \"@angular/common/http\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AdminpanelDataService {\n  private apiUrl = 'http://localhost:8000/api/';\n  private http: HttpClient;\n\n  constructor(http: HttpClient) {\n    this.http = http;\n  }\n\n  formatDate(date: Date) {\n    var d = new Date(date),\n        month = '' + (d.getMonth() + 1),\n        day = '' + d.getDate(),\n        year = d.getFullYear();\n\n    if (month.length (this.apiUrl + 'solarcell/?start='+this.formatDate(today));\n  }\n\n  getBatteryData(time: number){\n    let today=  new Date();\n    let yesterday = today.getDate()-time;\n    today.setDate(yesterday);\n  \n  return  this.http.get(this.apiUrl + 'battery/?start='+this.formatDate(today));\n  }\n\n  getSolarDataFrame(start:Date,end:Date){\n    return this.http.get(this.apiUrl+'solarcell/?start='+this.formatDate(start)+'&end='+this.formatDate(end));\n  }\n\n  getBatteryDataFrame(start:Date,end:Date){\n    return this.http.get(this.apiUrl+'battery/?start='+this.formatDate(start)+'&end='+this.formatDate(end));\n  }\n}\n\nexport interface SolarData {\n  id: Number,\n  current: Number,\n  voltage: Number,\n  measure_time: Date\n}\n\nexport interface BatteryData {\n  id: Number,\n  current: Number,\n  voltage: Number,\n  degrees: Number,\n  measure_time: Date\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TemperatureData.html":{"url":"interfaces/TemperatureData.html","title":"interface - TemperatureData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  TemperatureData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/weather-data.service.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        degrees\n                                \n                                \n                                        id\n                                \n                                \n                                        measure_time\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        degrees\n                                    \n                                \n                                \n                                    \n                                        degrees:         Number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         Number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        measure_time\n                                    \n                                \n                                \n                                    \n                                        measure_time:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {HttpClient} from \"@angular/common/http\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class WeatherDataService {\n  private apiUrl = 'http://192.168.178.44:8000/api/';\n  private http: HttpClient;\n\n  constructor(http: HttpClient) {\n    this.http = http;\n  }\n\n  formatDate(date: Date) {\n    var d = new Date(date),\n        month = '' + (d.getMonth() + 1),\n        day = '' + d.getDate(),\n        year = d.getFullYear();\n\n    if (month.length (this.apiUrl + 'temps/?start='+this.formatDate(today));\n\n  }  \n  getWindData(time: number){\n    let today=  new Date();\n    let yesterday = today.getDate()-time;\n    today.setDate(yesterday);\n  \n  return  this.http.get(this.apiUrl + 'wind/?start='+this.formatDate(today));\n}\n\ngetWindDataFrame(start:Date,end:Date){\n  return this.http.get(this.apiUrl+'wind/?start='+this.formatDate(start)+'&end='+this.formatDate(end));\n\n}\n\ngetTemperaturesDataFrame(start:Date,end:Date){\n  return this.http.get(this.apiUrl+'temps/?start='+this.formatDate(start)+'&end='+this.formatDate(end));\n\n}\n\n\n\n}\n\nexport interface WindData {\n  id: Number,\n  speed: Number,\n  direction: Number,\n  measure_time: Date\n\n}\n\nexport interface TemperatureData {\n  id: Number,\n  degrees: Number,\n  measure_time: Date\n}\n\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/WeatherDataService.html":{"url":"injectables/WeatherDataService.html","title":"injectable - WeatherDataService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  WeatherDataService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/weather-data.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                apiUrl\n                            \n                            \n                                    Private\n                                http\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                formatDate\n                            \n                            \n                                getTemperatures\n                            \n                            \n                                getTemperaturesDataFrame\n                            \n                            \n                                getWindData\n                            \n                            \n                                getWindDataFrame\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/weather-data.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            formatDate\n                        \n                        \n                    \n                \n            \n            \n                \nformatDate(date: Date)\n                \n            \n\n\n            \n                \n                    Defined in src/app/weather-data.service.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    date\n                                    \n                                                Date\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getTemperatures\n                        \n                        \n                    \n                \n            \n            \n                \ngetTemperatures(time: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/weather-data.service.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    time\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getTemperaturesDataFrame\n                        \n                        \n                    \n                \n            \n            \n                \ngetTemperaturesDataFrame(start: Date, end: Date)\n                \n            \n\n\n            \n                \n                    Defined in src/app/weather-data.service.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    start\n                                    \n                                                Date\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    end\n                                    \n                                                Date\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getWindData\n                        \n                        \n                    \n                \n            \n            \n                \ngetWindData(time: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/weather-data.service.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    time\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getWindDataFrame\n                        \n                        \n                    \n                \n            \n            \n                \ngetWindDataFrame(start: Date, end: Date)\n                \n            \n\n\n            \n                \n                    Defined in src/app/weather-data.service.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    start\n                                    \n                                                Date\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    end\n                                    \n                                                Date\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            apiUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'http://192.168.178.44:8000/api/'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/weather-data.service.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            http\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         HttpClient\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/weather-data.service.ts:9\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {HttpClient} from \"@angular/common/http\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class WeatherDataService {\n  private apiUrl = 'http://192.168.178.44:8000/api/';\n  private http: HttpClient;\n\n  constructor(http: HttpClient) {\n    this.http = http;\n  }\n\n  formatDate(date: Date) {\n    var d = new Date(date),\n        month = '' + (d.getMonth() + 1),\n        day = '' + d.getDate(),\n        year = d.getFullYear();\n\n    if (month.length (this.apiUrl + 'temps/?start='+this.formatDate(today));\n\n  }  \n  getWindData(time: number){\n    let today=  new Date();\n    let yesterday = today.getDate()-time;\n    today.setDate(yesterday);\n  \n  return  this.http.get(this.apiUrl + 'wind/?start='+this.formatDate(today));\n}\n\ngetWindDataFrame(start:Date,end:Date){\n  return this.http.get(this.apiUrl+'wind/?start='+this.formatDate(start)+'&end='+this.formatDate(end));\n\n}\n\ngetTemperaturesDataFrame(start:Date,end:Date){\n  return this.http.get(this.apiUrl+'temps/?start='+this.formatDate(start)+'&end='+this.formatDate(end));\n\n}\n\n\n\n}\n\nexport interface WindData {\n  id: Number,\n  speed: Number,\n  direction: Number,\n  measure_time: Date\n\n}\n\nexport interface TemperatureData {\n  id: Number,\n  degrees: Number,\n  measure_time: Date\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/WebcamComponent.html":{"url":"components/WebcamComponent.html","title":"component - WebcamComponent","body":"\n                   \n\n\n\n\n\n  Components\n  WebcamComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/webcam/webcam.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-webcam\n            \n\n            \n                styleUrls\n                ./webcam.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./webcam.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                destroy$\n                            \n                            \n                                    Public\n                                gallery\n                            \n                            \n                                ImageService\n                            \n                            \n                                    Public\n                                lightbox\n                            \n                            \n                                panelOpenState\n                            \n                            \n                                RecentImages\n                            \n                            \n                                recentPics\n                            \n                            \n                                    Public\n                                today\n                            \n                            \n                                TodayImages\n                            \n                            \n                                    Public\n                                todayLightbox\n                            \n                            \n                                todayPics\n                            \n                            \n                                    Public\n                                yesterday\n                            \n                            \n                                YesterdayImages\n                            \n                            \n                                    Public\n                                yesterdayLightbox\n                            \n                            \n                                yesterdayPics\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getImageDate\n                            \n                            \n                                getImageLocation\n                            \n                            \n                                loadrecentPics\n                            \n                            \n                                loadtodayPics\n                            \n                            \n                                loadyesterdayPics\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                openLightbox\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(ImageService: ImageService, gallery: Gallery, today: Gallery, lightbox: Lightbox, todayLightbox: Lightbox, yesterday: Gallery, yesterdayLightbox: Lightbox)\n                    \n                \n                        \n                            \n                                Defined in src/app/webcam/webcam.component.ts:39\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        ImageService\n                                                  \n                                                        \n                                                                        ImageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        gallery\n                                                  \n                                                        \n                                                                    Gallery\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        today\n                                                  \n                                                        \n                                                                    Gallery\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        lightbox\n                                                  \n                                                        \n                                                                    Lightbox\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        todayLightbox\n                                                  \n                                                        \n                                                                    Lightbox\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        yesterday\n                                                  \n                                                        \n                                                                    Gallery\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        yesterdayLightbox\n                                                  \n                                                        \n                                                                    Lightbox\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getImageDate\n                        \n                        \n                    \n                \n            \n            \n                \ngetImageDate()\n                \n            \n\n\n            \n                \n                    Defined in src/app/webcam/webcam.component.ts:119\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getImageLocation\n                        \n                        \n                    \n                \n            \n            \n                \ngetImageLocation()\n                \n            \n\n\n            \n                \n                    Defined in src/app/webcam/webcam.component.ts:114\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            loadrecentPics\n                        \n                        \n                    \n                \n            \n            \n                \nloadrecentPics()\n                \n            \n\n\n            \n                \n                    Defined in src/app/webcam/webcam.component.ts:67\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            loadtodayPics\n                        \n                        \n                    \n                \n            \n            \n                \nloadtodayPics()\n                \n            \n\n\n            \n                \n                    Defined in src/app/webcam/webcam.component.ts:73\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            loadyesterdayPics\n                        \n                        \n                    \n                \n            \n            \n                \nloadyesterdayPics()\n                \n            \n\n\n            \n                \n                    Defined in src/app/webcam/webcam.component.ts:87\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/webcam/webcam.component.ts:109\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/webcam/webcam.component.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            openLightbox\n                        \n                        \n                    \n                \n            \n            \n                \nopenLightbox(index: number, lightboxid: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/webcam/webcam.component.ts:100\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    lightboxid\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            destroy$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subject\n\n                        \n                    \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/webcam/webcam.component.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            gallery\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Gallery\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/webcam/webcam.component.ts:42\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ImageService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ImageService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/webcam/webcam.component.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            lightbox\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Lightbox\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/webcam/webcam.component.ts:42\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            panelOpenState\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/webcam/webcam.component.ts:39\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            RecentImages\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ImageData[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/webcam/webcam.component.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            recentPics\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     GalleryItem[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/webcam/webcam.component.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            today\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Gallery\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/webcam/webcam.component.ts:42\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            TodayImages\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ImageData[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/webcam/webcam.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            todayLightbox\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Lightbox\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/webcam/webcam.component.ts:42\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            todayPics\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     GalleryItem[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/webcam/webcam.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            yesterday\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Gallery\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/webcam/webcam.component.ts:42\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            YesterdayImages\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ImageData[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/webcam/webcam.component.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            yesterdayLightbox\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Lightbox\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/webcam/webcam.component.ts:43\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            yesterdayPics\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     GalleryItem[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/webcam/webcam.component.ts:28\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component,ChangeDetectionStrategy, OnInit, } from \"@angular/core\";\nimport { ImageData, ImageService } from \"../image-data.service\";\nimport { Observable, Subject } from \"rxjs\";\nimport { takeUntil, throttleTime } from \"rxjs/operators\";\nimport { MatDialog } from '@angular/material/dialog';\n\nimport { Gallery, GalleryItem, ImageItem } from '@ngx-gallery/core';\nimport { Lightbox } from '@ngx-gallery/lightbox';\n\nimport 'hammerjs';\n\n\n\n@Component({\n  selector: \"app-webcam\",\n  templateUrl: \"./webcam.component.html\",\n  styleUrls: [\"./webcam.component.scss\"],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class WebcamComponent implements OnInit {\n  \n  todayPics:GalleryItem[];\n  TodayImages: ImageData[] =[];\n\n  recentPics: GalleryItem[];\n  RecentImages: ImageData[] = [];\n\n  yesterdayPics: GalleryItem[];\n  YesterdayImages: ImageData[] = [];\n\n  \n\n\n  ImageService: ImageService;\n\n  destroy$: Subject = new Subject();\n\n  \n  panelOpenState = false;\n\n\n  constructor(ImageService: ImageService,public gallery: Gallery,public today: Gallery, public lightbox: Lightbox,public todayLightbox: Lightbox,public yesterday :Gallery,\n    public yesterdayLightbox:Lightbox) {\n    this.ImageService = ImageService;\n  }\n\n  ngOnInit() {\n    \n    this.ImageService.getrecentImages()\n    .pipe(takeUntil(this.destroy$))\n      .subscribe((data) => {\n        this.RecentImages = data;\n        this.loadrecentPics();\n      })\n      this.gallery.ref('lightbox', {imageSize: 'cover', loadingStrategy: 'lazy', thumbPosition: 'top'}).load(this.recentPics);\n      console.log(this.recentPics)\n\n\n \n      // This is for Lightbox example\n      \n      console.log(this.gallery)\n\n    }\n  \n\n    loadrecentPics(){\n      this.recentPics=this.RecentImages.map(data => {\n        return new ImageItem({src:data.image,thumb:data.image})\n      });\n    }\n    \n    loadtodayPics(){\n      this.ImageService.getTodayImages()\n      .pipe(takeUntil(this.destroy$))\n      .subscribe((data)=>{\n        this.TodayImages=data;\n        this.todayPics=this.TodayImages.map(data=>{\n          return new ImageItem({src:data.image,thumb:data.image})\n        });\n      this.today.ref('today', {imageSize: 'cover', loadingStrategy: 'lazy', thumbPosition: 'top'}).load(this.todayPics);\n        \n      })\n \n    }\n\n    loadyesterdayPics(){\n      this.ImageService.getYesterdayImages()\n      .pipe(takeUntil(this.destroy$))\n      .subscribe((data)=>{\n        this.YesterdayImages=data;\n        this.yesterdayPics=this.YesterdayImages.map(data=>{\n          return new ImageItem({src:data.image,thumb:data.image})\n        });\n      })\n      this.today.ref('yesterday', {imageSize: 'cover', loadingStrategy: 'lazy', thumbPosition: 'top'}).load(this.yesterdayPics);\n    }\n\n\n    openLightbox(index:number,lightboxid:string) {\n      console.log(this.todayLightbox)\n      this.todayLightbox.open(index, lightboxid);\n    }\n\n\n\n  \n\n  ngOnDestroy() {\n    this.destroy$.next(true);\n    this.destroy$.unsubscribe();\n  }\n\n  getImageLocation() {\n    console.log(this.RecentImages.map((data) => data.image));\n    return this.RecentImages.map((data) => data.image);\n  }\n\n  getImageDate() {\n    console.log(this.RecentImages.map((data) => data.measurement_time));\n    return this.RecentImages.map((data) => data.measurement_time);\n  }\n\n\n\n  \n}\n\nexport class NgbdDropdownBasic {\n  \n}\n\n    \n\n    \n        \n\n\n\n  \n  \n  Document\n  \n  \n\n\n\n  \n\n    \n      \n        \n      \n      \n        \n      \n      \n        \n      \n      \n        \n      \n      \n        \n      \n    \n\n  \n\n\n  \n    \n      \n        \n          Heute\n        \n        \n          Dies sind alle aufgenommenen Bilder von heute.\n        \n      \n      \n      \n        \n          \n\n    \n        \n      \n      \n    \n  \n\n\n  \n    \n      \n        \n          Gestern\n        \n        \n          Dies sind alle aufgenommenen Bilder von gestern.\n        \n      \n\n      \n      \n        \n          \n        \n      \n      \n\n    \n    \n  \n\n\n\n\n \n      \n        \n      \n\n\n\n\n\n\n\n    \n\n    \n                \n                    ./webcam.component.scss\n                \n                .imageone {\n  margin-left: 15%;\n  display: inline;\n  clear: both;\n}\n\n.imageone img {\n  width: 70%;\n  height: auto;\n}\n\n.container {\n  position: relative;\n  display: none;\n}\n\n#imgtext {\n  position: absolute;\n  bottom: 15px;\n  left: 15px;\n  color: white;\n  font-size: 20px;\n}\n\n.closebtn {\n  position: absolute;\n  top: 10px;\n  right: 15px;\n  color: white;\n  font-size: 35px;\n  cursor: pointer;\n}\n\n\n.mat-sidenav-container, .mat-sidenav-content, .mat-tab-body-content {\n  transform: none !important;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Document                                                                                                                                                  Heute                          Dies sind alle aufgenommenen Bilder von heute.                                                                                                        Gestern                          Dies sind alle aufgenommenen Bilder von gestern.                                                                                               '\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AdminpanelComponent', 'selector': 'app-adminpanel'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'GraphsComponent', 'selector': 'app-graphs'},{'name': 'WebcamComponent', 'selector': 'app-webcam'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'WebcamComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   "},"interfaces/WindData.html":{"url":"interfaces/WindData.html","title":"interface - WindData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  WindData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/weather-data.service.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        direction\n                                \n                                \n                                        id\n                                \n                                \n                                        measure_time\n                                \n                                \n                                        speed\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        direction\n                                    \n                                \n                                \n                                    \n                                        direction:         Number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         Number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        measure_time\n                                    \n                                \n                                \n                                    \n                                        measure_time:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        speed\n                                    \n                                \n                                \n                                    \n                                        speed:         Number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {HttpClient} from \"@angular/common/http\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class WeatherDataService {\n  private apiUrl = 'http://192.168.178.44:8000/api/';\n  private http: HttpClient;\n\n  constructor(http: HttpClient) {\n    this.http = http;\n  }\n\n  formatDate(date: Date) {\n    var d = new Date(date),\n        month = '' + (d.getMonth() + 1),\n        day = '' + d.getDate(),\n        year = d.getFullYear();\n\n    if (month.length (this.apiUrl + 'temps/?start='+this.formatDate(today));\n\n  }  \n  getWindData(time: number){\n    let today=  new Date();\n    let yesterday = today.getDate()-time;\n    today.setDate(yesterday);\n  \n  return  this.http.get(this.apiUrl + 'wind/?start='+this.formatDate(today));\n}\n\ngetWindDataFrame(start:Date,end:Date){\n  return this.http.get(this.apiUrl+'wind/?start='+this.formatDate(start)+'&end='+this.formatDate(end));\n\n}\n\ngetTemperaturesDataFrame(start:Date,end:Date){\n  return this.http.get(this.apiUrl+'temps/?start='+this.formatDate(start)+'&end='+this.formatDate(end));\n\n}\n\n\n\n}\n\nexport interface WindData {\n  id: Number,\n  speed: Number,\n  direction: Number,\n  measure_time: Date\n\n}\n\nexport interface TemperatureData {\n  id: Number,\n  degrees: Number,\n  measure_time: Date\n}\n\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                e2e/src/app.po.ts\n            \n            class\n            AppPage\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/admin/admin.component.ts\n            \n            component\n            AdminComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/adminpanel-data.service.ts\n            \n            injectable\n            AdminpanelDataService\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/adminpanel-data.service.ts\n            \n            interface\n            BatteryData\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/adminpanel-data.service.ts\n            \n            interface\n            SolarData\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/adminpanel/adminpanel.component.ts\n            \n            component\n            AdminpanelComponent\n            \n                0 %\n                (0/22)\n            \n        \n        \n            \n                \n                src/app/adminpanel/adminpanel.component.ts\n            \n            interface\n            raspyActions\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/adminpanel/adminpanel.component.ts\n            \n            interface\n            sensorActions\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/adminpanel/adminpanel.component.ts\n            \n            variable\n            dates\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/adminpanel/adminpanel.component.ts\n            \n            variable\n            logData\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/adminpanel/adminpanel.component.ts\n            \n            variable\n            sensorData\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/graphs/graphs.component.ts\n            \n            component\n            GraphsComponent\n            \n                0 %\n                (0/27)\n            \n        \n        \n            \n                \n                src/app/image-data.service.ts\n            \n            injectable\n            ImageService\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/image-data.service.ts\n            \n            interface\n            ImageData\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/weather-data.service.ts\n            \n            injectable\n            WeatherDataService\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/weather-data.service.ts\n            \n            interface\n            TemperatureData\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/weather-data.service.ts\n            \n            interface\n            WindData\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/webcam/webcam.component.ts\n            \n            component\n            WebcamComponent\n            \n                0 %\n                (0/25)\n            \n        \n        \n            \n                \n                src/app/webcam/webcam.component.ts\n            \n            class\n            NgbdDropdownBasic\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            variable\n            context\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            variable\n            require\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular-devkit/schematics : ^9.1.8\n        \n            @angular/animations : ^9.1.7\n        \n            @angular/cdk : ^9.2.4\n        \n            @angular/common : ^9.1.7\n        \n            @angular/compiler : ^9.1.7\n        \n            @angular/core : ^9.1.7\n        \n            @angular/forms : ^9.1.7\n        \n            @angular/material : ^9.2.4\n        \n            @angular/platform-browser : ^9.1.7\n        \n            @angular/platform-browser-dynamic : ^9.1.7\n        \n            @angular/router : ^9.1.7\n        \n            @ngx-gallery/core : ^5.0.0-beta.0\n        \n            @ngx-gallery/gallerize : ^5.0.0-beta.0\n        \n            @ngx-gallery/lightbox : ^5.0.0-beta.0\n        \n            angular-bootstrap-md : ^9.3.0\n        \n            chart.js : ^2.9.3\n        \n            core-js : ^3.6.5\n        \n            hammerjs : ^2.0.8\n        \n            mdbootstrap : ^4.18.0\n        \n            rxjs : ~6.5.5\n        \n            tslib : ^1.13.0\n        \n            zone.js : ~0.10.2\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nSEDraft\nThis project was generated with Angular CLI version 8.3.19.\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The app will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory. Use the --prod flag for a production build.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via Protractor.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI README.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAdminComponent\n\nAdminComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAdminComponent->AppModule\n\n\n\n\n\nAdminpanelComponent\n\nAdminpanelComponent\n\nAppModule -->\n\nAdminpanelComponent->AppModule\n\n\n\n\n\nAppComponent\n\nAppComponent\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nGraphsComponent\n\nGraphsComponent\n\nAppModule -->\n\nGraphsComponent->AppModule\n\n\n\n\n\nWebcamComponent\n\nWebcamComponent\n\nAppModule -->\n\nWebcamComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nImageService\n\nImageService\n\nAppModule -->\n\nImageService->AppModule\n\n\n\n\n\nWeatherDataService\n\nWeatherDataService\n\nAppModule -->\n\nWeatherDataService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        2 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    5 Components\n                \n            \n        \n        \n            \n                \n                    \n                    3 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    2 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    7 Interfaces\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        4 Routes\n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/raspyActions.html":{"url":"interfaces/raspyActions.html","title":"interface - raspyActions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  raspyActions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/adminpanel/adminpanel.component.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        action\n                                \n                                \n                                        date\n                                \n                                \n                                        name\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        action\n                                    \n                                \n                                \n                                    \n                                        action:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        date\n                                    \n                                \n                                \n                                    \n                                        date:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { SolarData, AdminpanelDataService, BatteryData } from \"../adminpanel-data.service\";\nimport { MatButtonToggleChange } from '@angular/material/button-toggle';\nimport { BehaviorSubject, Subscription } from 'rxjs';\nimport {Chart} from 'chart.js';\n\nvar dates = ['25.05.2020', '26.05.2020', '27.05.2020']\n\nexport interface raspyActions {\n  date: string;\n  name: string;\n  action: string;\n}\n\nexport interface sensorActions {\n  sensor: string;\n  status: string;\n}\n\nconst logData: raspyActions[] = [];\nconst sensorData: sensorActions[] =[\n  {sensor: \"Temperatur\",status: \"OK\"},\n  {sensor: \"Wind\",status: \"OK\"},\n  {sensor: \"Spannung Raspberry\",status: \"OK\"},\n  {sensor: \"Strom Raspberry\",status: \"OK\"},\n  {sensor: \"Spannung Photovoltaik\",status: \"OK\"},\n  {sensor: \"Strom Photovoltaik\",status: \"OK\"},\n  {sensor: \"Leistungsaufnahme\",status: \"OK\"},\n  {sensor: \"Ladestrom\",status: \"OK\"}\n];\n\n@Component({\n  selector: 'app-adminpanel',\n  templateUrl: './adminpanel.component.html',\n  styleUrls: ['./adminpanel.component.scss']\n})\n\nexport class AdminpanelComponent implements OnInit {\n\n  adminpanelDataService: AdminpanelDataService;\n  solarData: SolarData[] = [];\n  batteryData: BatteryData[] = [];\n  extendedModeStatus: BehaviorSubject;\n\n  //Gibt für [hidden] an, ob die Leistungsaufnahme ausgewählt wurde oder nicht\n  isToggled:boolean = false;\n\n  adminpanelDataSubscription: Subscription;\n\n  constructor(adminpanelDataService: AdminpanelDataService) {\n    this.adminpanelDataService = adminpanelDataService\n    this.extendedModeStatus = new BehaviorSubject(false)\n  }\n\n  ngOnInit(){\n    this.updateChart();\n  }\n\n  diagramChange(event: MatButtonToggleChange) {\n    if(event.value == \"power\"){\n      this.isToggled = true;\n      this.powerChart();\n    }\n    else if(event.value == \"charge\"){\n      this.isToggled = true;\n      this.chargeChart();\n    }\n    else{\n      this.updateChart();\n      this.isToggled = false;\n    }\n  }\n\n  updateChart(){\n    var input=16;\n    this.adminpanelDataSubscription =\n      this.adminpanelDataService.getSolarData(input).subscribe((datasolar) => {\n        this.solarData = datasolar;\n      });\n\n    this.adminpanelDataSubscription =\n      this.adminpanelDataService.getBatteryData(input).subscribe((databattery) => {\n        this.batteryData = databattery;\n        this.buildChart();\n      });\n  }\n\n  displayedColumns: string[] = ['date','name','action'];\n  logTableData = logData;\n\n  displayedSensorColumns: string[] = ['sensor','status'];\n  sensorTableData = sensorData;\n\n  buildChart() {\n    let ctx = document.getElementById('elecChart');\n    let dataSet = this.getDataSet();\n    console.log(this.batteryData.map(datebattery => datebattery.measure_time));\n    let volts = new Chart(ctx, {\n      type: 'line',\n      data: {\n        labels: this.batteryData.map(datebattery => new Date(datebattery.measure_time).toLocaleString()),\n        datasets: dataSet\n      },\n      options: {\n        title: {\n          display: true,\n          text: 'Energieverbrauch',\n          fontSize: 20\n        },\n        animation: {\n          duration: 0, // general animation time\n        },\n        hover: {\n          animationDuration: 0, // duration of animations when hovering an item\n        },\n        responsiveAnimationDuration: 0,\n        scales: {\n          yAxes: [{\n            scaleLabel: {\n              display: true,\n              labelString: 'Spannung in Volt'\n            },\n            id: 'voltage',\n            position: 'left',\n            ticks: {\n              beginAtZero: true\n            }},\n            {\n            scaleLabel: {\n              display: true,\n              labelString: 'Stromstärke in A'\n            },\n            id: 'current',\n            position: 'right',\n            ticks: {\n              beginAtZero: true\n            }\n          }]\n        }\n      }\n    });\n  }\n\n  getDataSet(){\n    var dataSet = [];\n\n    let accCur =  document.getElementById(\"accCur\");\n    if(accCur.checked){\n      let newData = {\n        label:\"Stromverbrauch Akku\",\n        borderColor: \"#FFBF00\",\n        yAxisID: 'current',\n        data: this.batteryData.map(databattery => databattery.current),\n        fill: false\n      }\n      dataSet.push(newData);\n    }\n\n    let accVol =  document.getElementById(\"accVol\");\n    if(accVol.checked){\n      let newData = {\n        label:\"Spannung Akku\",\n        borderColor: \"#00BFFF\",\n        yAxisID: 'voltage',\n        data: this.batteryData.map(databattery => databattery.voltage),\n        fill: false\n      }\n      dataSet.push(newData);\n    }\n\n    let solCur =  document.getElementById(\"solCur\");\n    if(solCur.checked){\n      let newData = {\n        label:\"Stromverbrauch Solarzelle\",\n        borderColor: \"#FF0000\",\n        yAxisID: 'current',\n        data: this.solarData.map(datasolar => datasolar.current),\n        fill: false\n      }\n      dataSet.push(newData);\n    }\n\n    let solVol =  document.getElementById(\"solVol\");\n    if(solVol.checked){\n      let newData = {\n        label:\"Spannung Solarzelle\",\n        borderColor: \"#013ADF\",\n        yAxisID: 'voltage',\n        data: this.solarData.map(datasolar => datasolar.voltage),\n        fill: false\n      }\n      dataSet.push(newData);\n    }\n    return(dataSet);\n  }\n\n  powerChart(){\n    this.buildPowerChargeChart(this.getPowerDataSet(),\"Leistungsuafnahme\",\"Leistung in Watt\");\n  }\n\n  chargeChart(){\n    this.buildPowerChargeChart(this.getChargeDataSet(),\"Ladestrom\",\"Strom in A\");\n  }\n\n  buildPowerChargeChart(dataset,chartText,axisLabel) {\n    let ctx = document.getElementById('elecChart');\n    let dataSet = dataset;\n    let volts = new Chart(ctx, {\n      type: 'line',\n      data: {\n        labels: dates,\n        datasets: dataSet\n      },\n      options: {\n        title: {\n          display: true,\n          text: chartText,\n          fontSize: 20\n        },\n        animation: {\n          duration: 0, // general animation time\n        },\n        hover: {\n          animationDuration: 0, // duration of animations when hovering an item\n        },\n        responsiveAnimationDuration: 0,\n        scales: {\n          yAxes: [{\n            scaleLabel: {\n              display: true,\n              labelString: axisLabel\n            },\n            ticks: {\n              beginAtZero: true\n            }\n          }]\n        }\n      }\n    });\n  }\n\n  getPowerDataSet(){\n    var powerSet = [];\n    let newData = {\n      label:\"Leistungsaufnahme\",\n      borderColor: \"#013ADF\",\n      data: [10,23,18],\n      fill: false\n    }\n    powerSet.push(newData);\n    return(powerSet);\n  }\n\n  getChargeDataSet(){\n    var chargeSet = [];\n    let newData = {\n      label:\"Ladestrom\",\n      borderColor: \"#FF4500\",\n      data: [1.8,1,0.9],\n      fill: false\n    }\n    chargeSet.push(newData);\n    return(chargeSet);\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/sensorActions.html":{"url":"interfaces/sensorActions.html","title":"interface - sensorActions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  sensorActions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/adminpanel/adminpanel.component.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        sensor\n                                \n                                \n                                        status\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        sensor\n                                    \n                                \n                                \n                                    \n                                        sensor:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        status\n                                    \n                                \n                                \n                                    \n                                        status:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { SolarData, AdminpanelDataService, BatteryData } from \"../adminpanel-data.service\";\nimport { MatButtonToggleChange } from '@angular/material/button-toggle';\nimport { BehaviorSubject, Subscription } from 'rxjs';\nimport {Chart} from 'chart.js';\n\nvar dates = ['25.05.2020', '26.05.2020', '27.05.2020']\n\nexport interface raspyActions {\n  date: string;\n  name: string;\n  action: string;\n}\n\nexport interface sensorActions {\n  sensor: string;\n  status: string;\n}\n\nconst logData: raspyActions[] = [];\nconst sensorData: sensorActions[] =[\n  {sensor: \"Temperatur\",status: \"OK\"},\n  {sensor: \"Wind\",status: \"OK\"},\n  {sensor: \"Spannung Raspberry\",status: \"OK\"},\n  {sensor: \"Strom Raspberry\",status: \"OK\"},\n  {sensor: \"Spannung Photovoltaik\",status: \"OK\"},\n  {sensor: \"Strom Photovoltaik\",status: \"OK\"},\n  {sensor: \"Leistungsaufnahme\",status: \"OK\"},\n  {sensor: \"Ladestrom\",status: \"OK\"}\n];\n\n@Component({\n  selector: 'app-adminpanel',\n  templateUrl: './adminpanel.component.html',\n  styleUrls: ['./adminpanel.component.scss']\n})\n\nexport class AdminpanelComponent implements OnInit {\n\n  adminpanelDataService: AdminpanelDataService;\n  solarData: SolarData[] = [];\n  batteryData: BatteryData[] = [];\n  extendedModeStatus: BehaviorSubject;\n\n  //Gibt für [hidden] an, ob die Leistungsaufnahme ausgewählt wurde oder nicht\n  isToggled:boolean = false;\n\n  adminpanelDataSubscription: Subscription;\n\n  constructor(adminpanelDataService: AdminpanelDataService) {\n    this.adminpanelDataService = adminpanelDataService\n    this.extendedModeStatus = new BehaviorSubject(false)\n  }\n\n  ngOnInit(){\n    this.updateChart();\n  }\n\n  diagramChange(event: MatButtonToggleChange) {\n    if(event.value == \"power\"){\n      this.isToggled = true;\n      this.powerChart();\n    }\n    else if(event.value == \"charge\"){\n      this.isToggled = true;\n      this.chargeChart();\n    }\n    else{\n      this.updateChart();\n      this.isToggled = false;\n    }\n  }\n\n  updateChart(){\n    var input=16;\n    this.adminpanelDataSubscription =\n      this.adminpanelDataService.getSolarData(input).subscribe((datasolar) => {\n        this.solarData = datasolar;\n      });\n\n    this.adminpanelDataSubscription =\n      this.adminpanelDataService.getBatteryData(input).subscribe((databattery) => {\n        this.batteryData = databattery;\n        this.buildChart();\n      });\n  }\n\n  displayedColumns: string[] = ['date','name','action'];\n  logTableData = logData;\n\n  displayedSensorColumns: string[] = ['sensor','status'];\n  sensorTableData = sensorData;\n\n  buildChart() {\n    let ctx = document.getElementById('elecChart');\n    let dataSet = this.getDataSet();\n    console.log(this.batteryData.map(datebattery => datebattery.measure_time));\n    let volts = new Chart(ctx, {\n      type: 'line',\n      data: {\n        labels: this.batteryData.map(datebattery => new Date(datebattery.measure_time).toLocaleString()),\n        datasets: dataSet\n      },\n      options: {\n        title: {\n          display: true,\n          text: 'Energieverbrauch',\n          fontSize: 20\n        },\n        animation: {\n          duration: 0, // general animation time\n        },\n        hover: {\n          animationDuration: 0, // duration of animations when hovering an item\n        },\n        responsiveAnimationDuration: 0,\n        scales: {\n          yAxes: [{\n            scaleLabel: {\n              display: true,\n              labelString: 'Spannung in Volt'\n            },\n            id: 'voltage',\n            position: 'left',\n            ticks: {\n              beginAtZero: true\n            }},\n            {\n            scaleLabel: {\n              display: true,\n              labelString: 'Stromstärke in A'\n            },\n            id: 'current',\n            position: 'right',\n            ticks: {\n              beginAtZero: true\n            }\n          }]\n        }\n      }\n    });\n  }\n\n  getDataSet(){\n    var dataSet = [];\n\n    let accCur =  document.getElementById(\"accCur\");\n    if(accCur.checked){\n      let newData = {\n        label:\"Stromverbrauch Akku\",\n        borderColor: \"#FFBF00\",\n        yAxisID: 'current',\n        data: this.batteryData.map(databattery => databattery.current),\n        fill: false\n      }\n      dataSet.push(newData);\n    }\n\n    let accVol =  document.getElementById(\"accVol\");\n    if(accVol.checked){\n      let newData = {\n        label:\"Spannung Akku\",\n        borderColor: \"#00BFFF\",\n        yAxisID: 'voltage',\n        data: this.batteryData.map(databattery => databattery.voltage),\n        fill: false\n      }\n      dataSet.push(newData);\n    }\n\n    let solCur =  document.getElementById(\"solCur\");\n    if(solCur.checked){\n      let newData = {\n        label:\"Stromverbrauch Solarzelle\",\n        borderColor: \"#FF0000\",\n        yAxisID: 'current',\n        data: this.solarData.map(datasolar => datasolar.current),\n        fill: false\n      }\n      dataSet.push(newData);\n    }\n\n    let solVol =  document.getElementById(\"solVol\");\n    if(solVol.checked){\n      let newData = {\n        label:\"Spannung Solarzelle\",\n        borderColor: \"#013ADF\",\n        yAxisID: 'voltage',\n        data: this.solarData.map(datasolar => datasolar.voltage),\n        fill: false\n      }\n      dataSet.push(newData);\n    }\n    return(dataSet);\n  }\n\n  powerChart(){\n    this.buildPowerChargeChart(this.getPowerDataSet(),\"Leistungsuafnahme\",\"Leistung in Watt\");\n  }\n\n  chargeChart(){\n    this.buildPowerChargeChart(this.getChargeDataSet(),\"Ladestrom\",\"Strom in A\");\n  }\n\n  buildPowerChargeChart(dataset,chartText,axisLabel) {\n    let ctx = document.getElementById('elecChart');\n    let dataSet = dataset;\n    let volts = new Chart(ctx, {\n      type: 'line',\n      data: {\n        labels: dates,\n        datasets: dataSet\n      },\n      options: {\n        title: {\n          display: true,\n          text: chartText,\n          fontSize: 20\n        },\n        animation: {\n          duration: 0, // general animation time\n        },\n        hover: {\n          animationDuration: 0, // duration of animations when hovering an item\n        },\n        responsiveAnimationDuration: 0,\n        scales: {\n          yAxes: [{\n            scaleLabel: {\n              display: true,\n              labelString: axisLabel\n            },\n            ticks: {\n              beginAtZero: true\n            }\n          }]\n        }\n      }\n    });\n  }\n\n  getPowerDataSet(){\n    var powerSet = [];\n    let newData = {\n      label:\"Leistungsaufnahme\",\n      borderColor: \"#013ADF\",\n      data: [10,23,18],\n      fill: false\n    }\n    powerSet.push(newData);\n    return(powerSet);\n  }\n\n  getChargeDataSet(){\n    var chargeSet = [];\n    let newData = {\n      label:\"Ladestrom\",\n      borderColor: \"#FF4500\",\n      data: [1.8,1,0.9],\n      fill: false\n    }\n    chargeSet.push(newData);\n    return(chargeSet);\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            context   (src/.../test.ts)\n                        \n                        \n                            dates   (src/.../adminpanel.component.ts)\n                        \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            logData   (src/.../adminpanel.component.ts)\n                        \n                        \n                            require   (src/.../test.ts)\n                        \n                        \n                            sensorData   (src/.../adminpanel.component.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/test.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            context\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : require.context('./', true, /\\.spec\\.ts$/)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            require\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n\n\n            \n        \n\n    src/app/adminpanel/adminpanel.component.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            dates\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : ['25.05.2020', '26.05.2020', '27.05.2020']\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            logData\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         raspyActions[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sensorData\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         sensorActions[]\n\n                        \n                    \n                    \n                        \n                            Default value : [\n  {sensor: \"Temperatur\",status: \"OK\"},\n  {sensor: \"Wind\",status: \"OK\"},\n  {sensor: \"Spannung Raspberry\",status: \"OK\"},\n  {sensor: \"Strom Raspberry\",status: \"OK\"},\n  {sensor: \"Spannung Photovoltaik\",status: \"OK\"},\n  {sensor: \"Strom Photovoltaik\",status: \"OK\"},\n  {sensor: \"Leistungsaufnahme\",status: \"OK\"},\n  {sensor: \"Ladestrom\",status: \"OK\"}\n]\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.prod.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: true\n}\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: false\n}\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
